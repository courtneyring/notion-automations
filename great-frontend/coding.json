[{"title":"News Feed (e.g. Facebook)","difficulty":"Medium","url":"https://www.greatfrontend.com/questions/system-design/news-feed-facebook?practice=practice&tab=system-design","questionBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Companies"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Twitter Google Amazon Tiktok LinkedIn"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Designing a news feed application is a classic system design question, but almost no existing resource discusses in detail about how to design the front end of a news feed."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Question"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design a news feed application that contains a list of feed posts users can interact with."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/news-feed-facebook/news-feed-example.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Real-life examples"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.facebook.com","link":{"type":"url","url":"https://www.facebook.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.twitter.com","link":{"type":"url","url":"https://www.twitter.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.quora.com","link":{"type":"url","url":"https://www.quora.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.reddit.com","link":{"type":"url","url":"https://www.reddit.com/"}}}]}}],"answerBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requirements exploration","link":{"type":"url","url":"#requirements-exploration"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What are the core features to be supported?","link":{"type":"url","url":"#what-are-the-core-features-to-be-supported"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Browse news feed containing posts by the user and their friends."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Liking and reacting to feed posts."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Creating and publishing new posts."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Commenting and sharing will be discussed further down below but is not included in the core scope."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What kind of posts are supported?","link":{"type":"url","url":"#what-kind-of-posts-are-supported"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Primarily text and image-based posts. If time permits we can discuss more types of posts."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What pagination UX should be used for the feed?","link":{"type":"url","url":"#what-pagination-ux-should-be-used-for-the-feed"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Infinite scrolling, meaning more posts will be added when the user reaches the end of their feed."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Will the application be used on mobile devices?","link":{"type":"url","url":"#will-the-application-be-used-on-mobile-devices"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Not a priority, but a good mobile experience would be nice."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Architecture / high-level design","link":{"type":"url","url":"#architecture--high-level-design"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/news-feed-facebook/news-feed-architecture.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Component responsibilities","link":{"type":"url","url":"#component-responsibilities"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Provides HTTP APIs to fetch feed posts and to create new feed posts."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Controller"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Controls the flow of data within the application and makes network requests to the server."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client store"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Stores data needed across the whole application. In the context of a news feed, most of the data in the store will be server-originated data needed by the feed UI."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed UI"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Contains a list of feed posts and the UI for composing new posts."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed posts"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Presents the data for a feed post and contains buttons to interact with the post (like/react/share)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Post composer"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": WYSIWYG (what you see is what you get) editor for users to create new feed posts."}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering approach","link":{"type":"url","url":"#rendering-approach"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Traditional web applications have multiple choices on where to render the content, whether to render on the server or the client."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server-side rendering (SSR)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Rendering the HTML on the server side, which is the most traditional way. Best for static content that require SEO and does not require heavy user interaction. Websites like blogs, documentation sites, e-commerce websites are built using SSR."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client-side rendering (CSR)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Rendering in the browser, by dynamically adding DOM elements into the page using JavaScript. Best for interactive content. Applications like dashboards, chat apps are built using CSR."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interestingly, news feed applications are somewhere in-between, there's a good amount of static content but they also require interaction. In reality, Facebook uses a hybrid approach which gives the best of both worlds: a fast initial load with SSR then hydrating the page to attach event listeners for user interactions. Subsequent content (e.g. more posts added once the user reaches the end of their feed) and page navigation will use CSR."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Modern UI JavaScript frameworks like React and Vue, along with meta frameworks like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Next.js","link":{"type":"url","url":"https://nextjs.org/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Nuxt","link":{"type":"url","url":"https://nuxtjs.org/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" support this rendering strategy."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Read more on "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering on the web","link":{"type":"url","url":"https://web.dev/rendering-on-the-web/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Rebuilding our tech stack for the new Facebook.com\" blog post","link":{"type":"url","url":"https://engineering.fb.com/2020/05/08/web/facebook-redesign/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data model","link":{"type":"url","url":"#data-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A news feed shows a list of posts fetched from the server, hence most of the data involved in this application will be server-originated data. The only client-side data needed is form state for input fields in the post composer."}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Entity"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Source"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Belongs to"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fields"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Feed"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed UI"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"posts"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (list of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Post"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s), "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pagination"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (pagination metadata)"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Post"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed post"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"id"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"created_time"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"content"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"author"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"User"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"), "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"reactions"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"image_url"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (for posts containing images)"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"User"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client store"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"id"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"name"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"profile_photo_url"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"NewPost"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User input (Client)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Post composer UI"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"message"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"image"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Although the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Post"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Feed"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" entities belong to the feed post and feed UI respectively, all server-originated data can be stored in the client store and queried by the components which need them."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The shape of the client store is not particularly important here, as long as it is in a format that can be easily retrieved from the components. New posts fetched from the second page should be joined with the previous posts into a single list with the pagination parameters ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"cursor"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") updated."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Advanced: Normalized store","link":{"type":"url","url":"#advanced-normalized-store"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Both Facebook and Twitter use a normalized client side store. If the term \"normalized\" is new to you, have a read of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Redux's documentation on normalizing state shape","link":{"type":"url","url":"https://redux.js.org/usage/structuring-reducers/normalizing-state-shape"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". In a nutshell, normalized data stores:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Resemble databases where each type of data is stored in its own table."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Each item has a unique ID."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"References across data types use IDs (like a foreign key) instead of having nested objects."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Facebook uses "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Relay","link":{"type":"url","url":"https://relay.dev/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (which can normalize the data by virtue of knowing the GraphQL schema) while Twitter uses "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Redux","link":{"type":"url","url":"https://redux.js.org/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" as seen from the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Dissecting Twitter's Redux Store\" blog post","link":{"type":"url","url":"https://medium.com/statuscode/dissecting-twitters-redux-store-d7280b62c6b1"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The benefits of having a normalized store are:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reduced duplicated data"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Single source of truth for the same piece of data that could be presented in multiple instances on the UI. E.g. if many posts are by the same author, we're storing duplicated data for the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"author"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" field in the client store."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Easily update all data for the same entity"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": In the scenario that the feed post contains many posts authored by the user and that user changes their name, it'd be good to be able to immediately reflect the updated author name in the UI. This will be easier to do with a normalized store than a store that just stores the server response verbatim."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In the context of an interview, we don't really need to use a normalized store for a news feed because:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"With the exception of the user/author fields, there isn't much duplicated data."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"News feed is mostly for consuming information, there aren't many use cases to update data. Feed user interactions such as liking only affect data within a feed post."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Hence the upsides of using a normalized store is limited. In reality, Facebook and Twitter websites contain many other features that will benefit from the features a normalized store provides."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Further reading: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Making Instagram.com faster: Part 3 — cache first","link":{"type":"url","url":"https://instagram-engineering.com/making-instagram-com-faster-part-3-cache-first-6f3f130b9669"}}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interface definition (API)","link":{"type":"url","url":"#interface-definition-api"}}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Source"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Destination"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"API type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Functionality"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Controller"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fetch feed posts"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Controller"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Create new post"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Controller"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed UI"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"JavaScript"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pass feed posts data, Reactions"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Post composer"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Controller"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"JavaScript"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pass new post data"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The most interesting API to talk about will be the HTTP API to fetch a list of feed posts because the pagination approach is worth discussing. The HTTP API for fetching feed posts from the server has the basic details:"}}]}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Field"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Value"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP Method"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"GET"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Path"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"/feed"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fetches the feed results for a user."}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are two common ways to return paginated content, each with its own pros and cons."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Offset-based pagination"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cursor-based pagination"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Offset-based pagination","link":{"type":"url","url":"#offset-based-pagination"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Offset-based pagination involves using an offset to specify where to start retrieving data and a limit to specify the number of items to retrieve. It's like saying, \"Start from the 10th record and give me the next 5 items\". The offset can either be an explicit number or converted from the requested page number. Requesting page 3 with a page size of 5 will translate to an offset of 10 because there are 2 pages before the 3rd page and 2 x 5 = 10. It's more common for an offset-based pagination API to accept the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"page"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" parameter and the server will convert it into the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"offset"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" value when querying the database."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"An offset-based pagination API accepts the following parameters:"}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameter"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"size"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Number of items per page"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Page number to fetch"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Given 20 items in a feed, parameters of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"{size: 5, page: 2}"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" will return items 6 - 10 along with pagination metadata:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"pagination\": {\n    \"size\": 5,\n    \"page\": 2,\n    \"total_pages\": 4,\n    \"total\": 20\n  },\n  \"results\": [\n    {\n      \"id\": \"123\",\n      \"author\": {\n        \"id\": \"456\",\n        \"name\": \"John Doe\"\n      },\n      \"content\": \"Hello world\",\n      \"image\": \"https://www.example.com/feed-images.jpg\",\n      \"reactions\": {\n        \"likes\": 20,\n        \"haha\": 15\n      },\n      \"created_time\": 1620639583\n    }\n    // ... More posts.\n  ]\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"and the underlying SQL query resembles:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SELECT * FROM posts LIMIT 5 OFFSET 0; -- First page\nSELECT * FROM posts LIMIT 5 OFFSET 5; -- Second page"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Offset-based pagination has the following advantages:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Users can directly jump to a specific page."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Easy to see the total number of pages."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Easy to implement on the back end. The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"OFFSET"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" value for a SQL query is calculated using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"(page - 1) * size"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Easily used with various database systems and not tied to specific data storage mechanisms"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, offset-based pagination comes with some issues:"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Inaccurate page results"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": For data that updates frequently, the current page window might be inaccurate after some time. Imagine a user has fetched the first 5 posts in their feed. After sometime, 5 more posts were added. If the users scroll to the bottom of the feed and fetches page 2, the same posts in the original page 1 will be fetched, and the user will see duplicate posts."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"// Initial posts (newest on the left, oldest on the right)\nPosts: A, B, C, D, E, F, G, H, I, J\n       ^^^^^^^^^^^^^ Page 1 contains A - E\n\n\n// New posts added over time\nPosts: K, L, M, N, O, A, B, C, D, E, F, G, H, I, J\n                      ^^^^^^^^^^^^^ Page 2 also contains A - E"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Clients can try to be smart and de-duplicate posts by not showing posts that are already visible. However this requires custom logic and the client will have to make a new request to make up for the lack of new posts which costs an extra network roundtrip. For use cases where the number of items can reduce over time, pages can end up missing some items instead."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Page size cannot be easily changed"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Another downside of offset-based pagination is that the client cannot change the page size for subsequent queries since the offset is a product of the page size and the page being requested."}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Page size"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Results"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"1"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"5"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Items 1 - 5"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"5"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Items 6 - 10"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"7"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Items 8 - 14"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In the above example, the client will miss out on items 6 and 7 if it goes from "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"{page: 1, size: 5}"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"{page: 2, size: 7}"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Query performance degrades over time"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Lastly, query performance degrades as the table becomes larger. For huge offsets (e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"OFFSET 1000000"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") the database still has to read up to those "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"count"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" + "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"offset"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" rows, discard the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"offset"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" rows and only return the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"count"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" rows, which results in very poor query performance for large offsets. This is considered back end knowledge but it's useful to know and you might get brownie points for mentioning it."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Offset-based pagination is common in web applications for displaying lists like search results, where jumping to a specific page is required and the results don't update too quickly. Hence blogs, travel booking websites, e-commerce websites will benefit from using offset-based pagination for their search results."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cursor-based pagination","link":{"type":"url","url":"#cursor-based-pagination"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cursor-based pagination uses a pointer (the cursor) to a specific record in a dataset. Instead of saying \"give me items 11 to 15\", it says \"give me 5 items starting after [specific item].\"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The cursor is usually a unique identifier, which can be the item id, timestamp, or something else. Subsequent requests use the identifier of the last item as the cursor to fetch the next set of items. In SQL, an example is:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SELECT * FROM table WHERE id > cursor LIMIT 5."}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A cursor-based pagination API accepts the following parameters:"}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameter"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"size"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Number of results per page"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"cursor"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"string"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"An identifier for the last item fetched. The database query will make use of this identifier."}}]]}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"pagination\": {\n    \"size\": 10,\n    \"next_cursor\": \"=dXNlcjpVMEc5V0ZYTlo\"\n  },\n  \"results\": [\n    {\n      \"id\": \"123\",\n      \"author\": {\n        \"id\": \"456\",\n        \"name\": \"John Doe\"\n      },\n      \"content\": \"Hello world\",\n      \"image\": \"https://www.example.com/feed-images.jpg\",\n      \"reactions\": {\n        \"likes\": 20,\n        \"haha\": 15\n      },\n      \"created_time\": 1620639583\n    }\n    // ... More posts.\n  ]\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Advantages of cursor-based pagination:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"More efficient and faster on large datasets."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Avoids the inaccurate page window problem because new posts added over time do not affect the offset, which is determined by a fixed cursor. Great for real-time data."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Facebook","link":{"type":"url","url":"https://developers.facebook.com/docs/graph-api/reference/page/feed/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Slack","link":{"type":"url","url":"https://api.slack.com/docs/pagination#cursors"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Zendesk","link":{"type":"url","url":"https://developer.zendesk.com/documentation/developer-tools/pagination/paginating-through-lists-using-cursor-pagination/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" use cursor-based pagination for their developer APIs."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Downsides of cursor-based pagination:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since the client doesn't know the cursor, it cannot jump to a specific page without going through the previous pages."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Slightly more complex to implement compared to offset-based pagination."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In order for the back end to implement cursor-based pagination, the database needs to uniquely map the cursor to a row, which can be done using a database table's primary key or in some cases, the timestamp."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Which pagination to use for news feed?","link":{"type":"url","url":"#which-pagination-to-use-for-news-feed"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In a nutshell, the choice between offset-based pagination and cursor-based pagination largely depends on the data and requirements. Offset-based is simpler and better for static or small datasets where direct access to pages is important. Cursor-based is more efficient and reliable for large, dynamic datasets where the data sequence is important and changes frequently."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For an infinite scrolling news feed where:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"New posts can be added frequently to the top of the feed."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Newly fetched posts are appended to the end of the feed."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Table size can grow pretty quickly."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cursor-based pagination is clearly superior and should be used for a news feed."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Reference: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Evolving API Pagination at Slack","link":{"type":"url","url":"https://slack.engineering/evolving-api-pagination-at-slack"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Post creation","link":{"type":"url","url":"#post-creation"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This HTTP method is for users to create a new post, which will be shown in their own feed as well as others who they are friends with."}}]}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Field"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Value"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP Method"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"POST"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Path"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"/posts"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Creates a new post."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameters"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"{ body: '...', media: '...' }"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The parameters of the HTTP API will depend on the type of post made. In most cases, it's not a key discussion point during an interview."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The response format can be either just the single post, or a list of latest posts in the feed. If a single post is returned, the API response will be similar to the feed post item within the feed API:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"id\": \"124\",\n  \"author\": {\n    \"id\": \"456\",\n    \"name\": \"John Doe\"\n  },\n  \"content\": \"Hello world\",\n  \"image\": {\n    \"src\": \"https://www.example.com/feed-images.jpg\",\n    \"alt\": \"An image alt\" // Either user-provided, or generated on the server.\n    // Other useful properties can be included too, such as dimensions.\n  },\n  \"reactions\": {\n    \"likes\": 20,\n    \"haha\": 15\n  },\n  \"created_time\": 1620639583\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Given this new post data, the client store will need to prepend it to the start of the feed list."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimizations and deep dive","link":{"type":"url","url":"#optimizations-and-deep-dive"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As there are a few sections within a news feed application, it will be more organized to focus on one section at a time and looking at the optimizations that can be done on specific sections section:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"General optimizations","link":{"type":"url","url":"#general-optimizations"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed list optimizations","link":{"type":"url","url":"#feed-list-optimizations"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed post optimizations","link":{"type":"url","url":"#feed-post-optimizations"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed composer optimizations","link":{"type":"url","url":"#feed-composer-optimizations"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"General optimizations","link":{"type":"url","url":"#general-optimizations"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These optimizations are applicable to every section of the page."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Code splitting JavaScript for faster performance","link":{"type":"url","url":"#code-splitting-javascript-for-faster-performance"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As an application grows, the number of pages and features increase which will result in more JavaScript and CSS code needed to run the application. Code splitting is a technique to split code needed on a page into separate files so that they can be loaded in parallel or when they're needed."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Generally, code splitting can be done on two levels:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Split on the page level"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Each page will only load the JavaScript and CSS needed on that page."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lazy loading resources within a page"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Load non-critical resources only when needed or after the initial render, such as code that's only needed lower down on the page, or code that's used only when interacted with (e.g. modals, dialogs)."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For a news feed application, there's only a single page, so page-level code splitting is not too relevant, however lazy loading can still be super useful for other purposes. Lazy loading is discussed in more detail under the feed post section as it's most relevant to the feed post UI."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For reference, Facebook splits their JavaScript loading into 3 tiers:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Tier 1"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Basic layout needed to display the first paint for the above-the-fold content, including UI skeletons for initial loading states."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Tier 2"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": JavaScript needed to fully render all above-the-fold content. After Tier 2, nothing on the screen should still be visually changing as a result of code loading."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Tier 3"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Resources that are only needed after display that doesn't affect the current pixels on the screen, including logging code and subscriptions for live-updating data."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Source: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"\"Rebuilding our tech stack for the new Facebook.com\" blog post","link":{"type":"url","url":"https://engineering.fb.com/2020/05/08/web/facebook-redesign/"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard shortcuts","link":{"type":"url","url":"#keyboard-shortcuts"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Facebook has a number of news feed-specific shortcuts to help users navigate between the posts and perform common actions, super handy! Try it for yourself by hitting the \""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Shift"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" + "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"?"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\" keys on facebook.com."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/news-feed-facebook/facebook-shortcuts.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Source: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Making Facebook.com accessible to as many people as possible","link":{"type":"url","url":"https://engineering.fb.com/2020/07/30/web/facebook-com-accessibility/"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Error states","link":{"type":"url","url":"#error-states"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Clearly display error states if any network requests have failed, or when there's no network connectivity."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed list optimizations","link":{"type":"url","url":"#feed-list-optimizations"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The feed list refers to the container element that contains the feed post items."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Infinite scrolling","link":{"type":"url","url":"#infinite-scrolling"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"An infinite scrolling feed works by fetching the next set of posts when the user has scrolled to the end of their current loaded feed. This results in the user seeing a loading indicator and a short delay where the user has to wait for the new posts to be fetched and displayed."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A way to reduce or entirely eliminate the waiting time is to load the next set of feed posts before the user hits the bottom of the page so that the user never has to see any loading indicators."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A trigger distance of around one viewport height should be sufficient for most cases. The ideal distance is short enough to avoid false positives and wasted bandwidth but also wide enough to load the rest of the contents before the user scrolls to the bottom of the page. A dynamic distance can be calculated based on the network connection speed and how fast the user is scrolling through the feed."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are two popular ways to implement infinite scroll. Both involve rendering a marker element at the bottom of the feed:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Listen for the "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"scroll"}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" event"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Add a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"scroll"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" event listener (ideally throttled) to the page or a timer (via "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"setInterval"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") that checks whether the position of the marker element is within a certain threshold from the bottom of the page. The position of the marker element can be obtained using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Element.getBoundingClientRect","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Intersection Observer API"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Use the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Intersection Observer API","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to monitor when the marker element is entering or exiting another element or intersecting by a specified amount."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The Intersection Observer API is a browser native API and is preferred over "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Element.getBoundingClientRect()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"quote","quote":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":""}}],"children":[{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The Intersection Observer API lets code register a callback function that is executed whenever an element they wish to monitor enters or exits another element (or the viewport), or when the amount by which the two intersect changes by a requested amount. This way, sites no longer need to do anything on the main thread to watch for this kind of element intersection, and the browser is free to optimize the management of intersections as it sees fit."}}]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Source: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Intersection Observer API | MDN","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Virtualized lists","link":{"type":"url","url":"#virtualized-lists"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"With infinite scrolling, all the loaded feed items are on one single page. As the user scrolls further down the page, more posts are appended to the DOM and with feed posts having complex DOM structure (lots of details to render), the DOM size rapidly increases. As social media websites are long-lived applications (especially if single-page app) and the feed items list can easily grow really long quickly, the number of feed items can be a cause of performance issues in terms of DOM size, rendering, and browser memory usage."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Virtualized lists is a technique to render only the posts that are within the viewport. In practice, Facebook replaces the contents of off-screen feed posts with empty "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<div>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s, add dynamically calculated inline styles (e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"style=\"height: 300px\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") to set the height of the posts so as to preserve the scroll position and add the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"hidden","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/hidden"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/hidden"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to them. This will improve rendering performance in terms of:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Browser painting"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Fewer DOM nodes to render and fewer layout computations to be made."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Virtual DOM reconciliation (React-specific)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Since the post is now a simpler empty version, it's easier for React (the UI library that Facebook is using to render the feed) to diff the virtual DOM vs the real DOM to determine what DOM updates have to be made."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Both Facebook and Twitter websites use virtualized lists."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Loading indicators","link":{"type":"url","url":"#loading-indicators"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For users who scroll really fast, even though the browser kicks off the request for the next set of posts before the user even reaches the bottom of the page, the request might not have returned yet and a loading indicator should be shown to reflect the request status."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rather than showing a spinner, a better experience would be to use a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"shimmer loading effect","link":{"type":"url","url":"https://docs.flutter.dev/cookbook/effects/shimmer-loading"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" which resembles the contents of the posts. This looks more aesthetically pleasing and can be used also reduce layout thrash after the new posts are loaded."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"An example of Facebook's feed loading shimmer:"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/news-feed-facebook/facebook-shimmer.jpg"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dynamic loading count","link":{"type":"url","url":"#dynamic-loading-count"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As mentioned above in the \"Interface\" section, cursor-based pagination is more suitable for a news feed. A benefit of cursor-based pagination is that the client can change how many items to fetch in subsequent calls. We can use this to our advantage by customizing the number of posts to load based on the browser window height."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For the initial load, we do not know the window height so we need to be conservative and overfetch the number of posts needed. But for subsequent fetches, we know the browser window height and can customize the number of posts to fetch based on that."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Preserving feed scroll position on remounting","link":{"type":"url","url":"#preserving-feed-scroll-position-on-remounting"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed scroll positions should be preserved if users navigate to another page and back to the feed. This can be achieved in single-page applications if the feed list data is cached within the client store along with the scroll position. When the user goes back to the feed page, since the data is already on the client, the feed list can be read from the client store and immediately presented on the screen with the previous scroll position; no server round-trip is needed."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Stale feeds","link":{"type":"url","url":"#stale-feeds"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It's not uncommon for users to leave their news feed application open as a browser tab and not refresh it at all. It'd be a good idea to prompt the user to refresh or refetch the feed if the last fetched timestamp is more than a few hours ago, as there can be new posts and the loaded feed is considered stale. When a new feed is refetched, the current feed can be entirely removed from memory to free up memory space."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Another approach is to automatically append new feed posts to the top of the feed, but that might not be desired and extra care has to be made in order not to affect the scroll position."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As of writing, Facebook forces a feed refresh and scrolls to the top if the tab has been left open for some duration."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed post optimizations","link":{"type":"url","url":"#feed-post-optimizations"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The feed post refers to the individual post element that contains details of the post: author, timestamp, contents, like/commenting buttons."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Delivering data-driven dependencies only when needed","link":{"type":"url","url":"#delivering-data-driven-dependencies-only-when-needed"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"News feed posts can come in many different formats (text, image, videos, polls, etc) and each post requires custom rendering code. In reality, Facebook feed supports over 50 different post formats!"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"One way to support all the post formats on the client is to have the client load the component JavaScript code for all possible formats upfront so that any kind of feed post format can be rendered. However, not all users' feed will contain all the post formats and and there will likely be a lot of unused JavaScript. With the large variety of feed post formats, loading the JavaScript code for all of them upfront is sure to cause performance issues."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If only we could lazy load components depending on the data received! That's already possible but requires an extra network round-trip to lazy load the components after the data is fetched and we know the type of posts rendered."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Facebook fetches data from the server using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Relay","link":{"type":"url","url":"https://relay.dev/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", which is a JavaScript-based GraphQL client. Relay couples React components with GraphQL to allow React components to declare exactly which data fields are needed and Relay will fetch them via GraphQL and provide the components with data. Relay has a feature called "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"data-driven dependencies","link":{"type":"url","url":"https://relay.dev/docs/glossary/#match"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" via the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"@match"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"@module"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" GraphQL directives, which fetches component code along with the respective type of data, effectively solving the excess components problem mentioned above without an extra network round-trip. You only load the relevant code when a particular format for a post is being shown."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"// Sample GraphQL query to demonstrate data-driven dependencies.\n... on Post {\n  ... on TextPost {\n    @module('TextComponent.js')\n    contents\n  }\n  ... on ImagePost {\n    @module('ImageComponent.js')\n    image_data {\n      alt\n      dimensions\n    }\n  }\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The above GraphQL query tells the back end to return the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextComponent"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" JavaScript code along with the text contents if the post is a text-based post and return the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ImageComponent"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" JavaScript code along with the image data if the post has image attachments. There is no need for the client to load component JavaScript code for all the possible post formats upfront, reducing the initial JavaScript needed on the page."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Source: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Rebuilding our tech stack for the new Facebook.com","link":{"type":"url","url":"https://engineering.fb.com/2020/05/08/web/facebook-redesign/"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering mentions/hashtags","link":{"type":"url","url":"#rendering-mentionshashtags"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"You may have noticed that textual content within feed posts can be more than plain text. For social media applications, it is common to see mentions and hashtags."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/news-feed-facebook/facebook-post-rich-text.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In Stephen Curry's post above, see that he used the \"#AboutLastNight\" hashtag and mentioned the \"HBO Max\" Facebook page. His post message has to be stored in a special format such that it contains metadata about these tags and mentions."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What format should the message be so that it can store data about mentions/hashtags? Let's discuss the possible formats and their pros and cons."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTML format"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The simplest format is HTML, you store the message the way you want it to be displayed."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<a href=\"...\">#AboutLastNight</a> is here... and ready to change the meaning of date night...\n\n\nAbsolute comedy 🤣 Dropping 2/10 on <a href=\"...\">HBO Max</a>!"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Storing as HTML is usually bad because there's a potential for causing a Cross-Site Scripting (XSS) vulnerability. Also, in most cases it's better to decouple the message's metadata from displaying, perhaps in future you want to decorate the mentions/hashtags before rendering and want to add classnames to the links. HTML format also makes the API less reusable on non-web clients (e.g. iOS/Android)."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Custom syntax"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A custom syntax can be used to capture metadata about hashtags and mentions."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Hashtags"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Hashtags don't actually need a special syntax, words that start with a \"#\" can be considered a hashtag."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mentions"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A syntax like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"[[#1234: HBO Max]]"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is sufficient to capture the entity ID and the text to display. It's not sufficient to just store the entity ID because sites like Facebook allow users to customize the text within the mention."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Before rendering the message, the string can be parsed for hashtags and mentions using regex and replaced with custom-styled links. Custom syntax is a lightweight solution which is robust enough if you don't anticipate new kinds of rich text entities to be supported in future."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rich text editor format"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Draft.js","link":{"type":"url","url":"https://draftjs.org/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is a popular rich text editor by Meta for composing rich text. Draft.js allows users to extend the functionality and create their own rich text entities such as hashtags and mentions. It defines a custom Draft.js editor state format which is being used by the Draft.js editor. In 2022, Meta released "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lexical","link":{"type":"url","url":"https://lexical.dev/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", a successor to Draft.js and is using Lexical for rich text editing and displaying rich text entities on facebook.com. The underlying formats are similar and we will discuss Draft.js' format."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Draft.js is just one example of a rich text format, there are many out there to choose from. The editor state resembles an Abstract Syntax Tree and can be serialized into a JSON string to be stored. The benefits of using a popular rich text format is that you don't have to write custom parsing code and can easily extend to more types of rich text entities in future. However, these formats tend to be longer strings than a custom syntax version and will result in larger network payload size and require more disk space to store."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"An example of how the post above can be represented in Draft.js."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  content: [\n    {\n      type: 'HASHTAG',\n      content: '#AboutLastNight',\n    },\n    {\n      type: 'TEXT',\n      content: ' is here... and ready to change ... Dropping 2/10 on ',\n    },\n    {\n      type: 'MENTION',\n      content: 'HBO Max',\n      entityID: 1234,\n    },\n    {\n      type: 'TEXT',\n      content: '!',\n    },\n  ];\n}"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering images","link":{"type":"url","url":"#rendering-images"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since there can be images in a feed post, we can also briefly discuss some image optimization techniques:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Content Delivery Network (CDN)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Use a (CDN) to host and serve images for faster loading performance."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Modern image formats"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Use modern image formats such as "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WebP","link":{"type":"url","url":"https://developers.google.com/speed/webp"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" which provides superior lossless and lossy image compression."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s should use proper "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"alt"}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" text"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Facebook provides "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"alt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" text for user-uploaded images by using Machine Learning and Computer Vision to process the images and generate a description."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Generative AI models are also very good at doing that these days."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image loading based on device screen properties"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Send the browser dimensions in the feed list requests so that server can decide what image size to return."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"srcset"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" if there are image processing (resizing) capabilities to load the most suitable image file for the current viewport."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Adaptive image loading based on network speed"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Devices with good internet connectivity/on WiFi"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Prefetch offscreen images that are not in the viewport yet but about to enter viewport."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Poor internet connection"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Render a low-resolution placeholder image and require users to explicitly click on them to load the high-resolution image."}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lazy load code that is not needed for initial render","link":{"type":"url","url":"#lazy-load-code-that-is-not-needed-for-initial-render"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Many interactions with a feed post are not needed on initial render:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reactions popover."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dropdown menu revealed by the top-right ellipsis icon button, which is usually meant to conceal additional actions."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The code for these components can be downloaded when:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The browser is idle as a lower-priority task."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"On demand, when the user hovers over the buttons or clicks on them."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These are considered Tier 3 dependencies going by Facebook's tier definition above."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimistic updates","link":{"type":"url","url":"#optimistic-updates"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimistic update is a performance technique where the client immediately reflect the updated state after a user interaction that hits the server and optimistically assume that the server request succeeds, which should be the case for most requests. This gives users instant feedback and improves the perceived performance. If the server request fails, we can revert the UI changes and display an error message."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For a news feed, optimistic updates can be applied for reaction interactions by immediately showing the user's reaction and an updated total count of the reactions."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimistic updates is a powerful feature built into modern query libraries like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Relay","link":{"type":"url","url":"https://relay.dev/docs/guided-tour/updating-data/graphql-mutations/#optimistic-updates"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SWR","link":{"type":"url","url":"https://swr.vercel.app/docs/mutation#optimistic-updates"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React Query","link":{"type":"url","url":"https://tanstack.com/query/v4/docs/guides/optimistic-updates"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Timestamp rendering","link":{"type":"url","url":"#timestamp-rendering"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Timestamp rendering is a topic worth discussing because of a few issues: multilingual timestamps and stale relative timestamps."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Multilingual timestamps"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Globally popular sites like Facebook and Twitter have to ensure their UI works well for different languages. There are a few ways to support multilingual timestamps:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server returns the raw timestamp"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Server returns the raw timestamp and the client renders in the user's language. This approach is flexible but requires the client to contain the grammar rules and translation strings for different languages, which can amount to significant JavaScript size depending on the number of supported languages,"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server returns the translated timestamp"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This requires processing on the server, but you don't have to ship timestamp formatting rules for various languages to the client. However, since translation is done on the server, clients cannot manipulate the timestamp on the client."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Intl"}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" API"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Modern browsers can leverage "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Intl.DateTimeFormat()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Intl.RelativeTimeFormat()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to transform a raw timestamp into translated datetime strings in the desired format."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"const date = new Date(Date.UTC(2021, 11, 20, 3, 23, 16, 738));\nconsole.log(\n  new Intl.DateTimeFormat('zh-CN', {\n    dateStyle: 'full',\n    timeStyle: 'long',\n  }).format(date),\n); // 2021年12月20日星期一 GMT+8 11:23:16\n\n\nconsole.log(\n  new Intl.RelativeTimeFormat('zh-CN', {\n    dateStyle: 'full',\n    timeStyle: 'long',\n  }).format(-1, 'day'),\n); // 1天前"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Relative timestamps can turn stale"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": If timestamps are displayed using a relative format (e.g. 3 minutes ago, 1 hour ago, 2 weeks ago, etc), recent timestamps can easily go stale especially for applications where users don't refresh the page. A timer can be used to constantly update the timestamps if they are recent (less than an hour old) such that any significant time that has passed will be reflected correctly."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Icon rendering","link":{"type":"url","url":"#icon-rendering"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Icons are needed within the action buttons of a post for liking, commenting, sharing, etc. There are a few ways to render icons:"}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Approach"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pros"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cons"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Separate image"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Simple to implement."}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Multiple download requests per image."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Spritesheet"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"One HTTP request to download all icon images."}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Complicated to set up."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Icon fonts"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Scalable and crisp."}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Need to download the entire font. Flash of unstyled content when font is loading."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SVG"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Scalable and crisp. Cacheable."}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Flickering when file is being downloaded. One download requests per image."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Inlined SVG"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Scalable and crisp."}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cannot be cached."}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Facebook and Twitter use inlined SVGs and that also seems to be the trend these days. This technique is not specific to news feeds, it's relevant to almost every web app."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Source: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"\"Rebuilding our tech stack for the new Facebook.com\" blog post","link":{"type":"url","url":"https://engineering.fb.com/2020/05/08/web/facebook-redesign/"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Post truncation","link":{"type":"url","url":"#post-truncation"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Truncate posts which have super long message content and reveal the rest behind a \"See more\" button."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For posts with large amount of activity (e.g. many likes, reactions, shares), abbreviate counts appropriately instead of rendering the raw count so that it's easier to read and the magnitude is still sufficiently conveyed:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Good"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": John, Mary and 103K others"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bad"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": John, Mary and 103,312 others"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This summary line can be either constructed on the server or the client. The pros and cons of doing on the server vs the client is similar to that of timestamp rendering. However, you should definitely not send down the entire list of users if it's huge as it's likely not needed or useful."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed comments","link":{"type":"url","url":"#feed-comments"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If time permits, we can discuss how the feed comments can be built. In general, the same rules apply to comments rendering and comment drafting:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cursor-based pagination for fetching the list of comments."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Drafting and editing comments can be done in a similar fashion as drafting/editing posts."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lazy load emoji/sticker pickers in the comment inputs."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimistic updates"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Immediately reflect new comments by appending the user's new comment to the existing list of comments."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Immediately display new reactions and updated reaction counts."}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Live comment updates","link":{"type":"url","url":"#live-comment-updates"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Live updates for Facebook feed comments enhance user engagement and interaction by providing real-time visibility of new comments and updated reaction counts. This fosters a dynamic and responsive communication environment, encouraging users to actively participate in ongoing conversations without the need for manual refreshing. The immediacy of live updates contributes to increased user retention."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The common ways to implement live updates on a client include:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Short polling"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Short polling is a technique in which the client repeatedly sends requests to the server at fixed intervals to check for updates. The connection is closed after each request, and the server responds immediately with the current state or any available updates. While short polling is straightforward to implement, it may result in higher network traffic and server load compared to the more advanced techniques mentioned below."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Long polling"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Long polling extends on the idea of short polling by keeping the connection open until new data is available. While simpler to implement, it may introduce latency and increased server load compared to other approaches."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server-Sent Events (SSE)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": SSE is a standard web technology that enables servers to push updates to web clients over a single HTTP connection. It's a simple and efficient mechanism for real-time updates, particularly well-suited for scenarios where updates are initiated by the server."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WebSockets"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": WebSockets provide a full-duplex communication channel over a single, long-lived connection. This bidirectional communication allows both the server and the client to send messages to each other at any time. WebSockets are suitable for applications that require low latency and high interactivity."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP/2 server push"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": With HTTP/2, the server can push updates to the client without waiting for the client to request them. While HTTP/2 server push is not as widely used as other methods for live updates, it can be an efficient solution in certain scenarios."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Facebook uses WebSockets for live updates on the website."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"While showing live updates is great, it is not efficient to be fetching updates for posts that have gone out of view in the feed. Clients can subscribe/unsubscribe to updates for posts based on whether the post is visible, which lightens the load on server infrastructure."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Additionally, not all posts should be treated equally. Posts by users with many followers (e.g. celebrities and politicians) will be seen by many more people and hence more likely to receive an update. For such posts, new comments and reactions will be frequently added/updated and it will not be wise to fetch every new post or reaction since the update rate is too high for the user to read every new comment. Hence for such posts, the live updates can be debounced/throttled. Beyond a certain threshold, just fetching the updated comments and reactions count will be sufficient."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed composer optimizations","link":{"type":"url","url":"#feed-composer-optimizations"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rich text for hashtags and mentions","link":{"type":"url","url":"#rich-text-for-hashtags-and-mentions"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When drafting a post in the composer, it'd be a nice to have an WYSIWYG editing experience look like the result which contain hashtags and mentions. However, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<textarea>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s only allows input and display of plain text. The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute turns an element into an editable rich text editor."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Try it for yourself here:"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"editable and format-able"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" text thanks to"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". You can even format the text (e.g. bold by using Ctrl/Cmd + B)."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, it is not a good idea to use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable=\"true\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" as-is in production because it "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"comes with many issues","link":{"type":"url","url":"https://medium.engineering/why-contenteditable-is-terrible-122d8a40e480?gi=6b03d73f8e36"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". It'd be better to use battle-tested rich text editor libraries."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Meta has built rich text editors like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Draft.js","link":{"type":"url","url":"https://draftjs.org/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (deprecated) and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lexical","link":{"type":"url","url":"https://lexical.dev/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and use them for drafting + displaying post and comments. Other popular open sources alternatives include "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"TipTap","link":{"type":"url","url":"https://tiptap.dev/api/editor"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Slate","link":{"type":"url","url":"https://www.slatejs.org/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Source: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Facebook open sources rich text editor framework Draft.js","link":{"type":"url","url":"https://engineering.fb.com/2016/02/26/web/facebook-open-sources-rich-text-editor-framework-draft-js/"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lazy load dependencies","link":{"type":"url","url":"#lazy-load-dependencies"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Like rendering news feed posts, users can draft posts in many different formats which require specialized rendering code per format. Lazy loading can be used to load the resources for the desired formats and optional features in an on-demand fashion."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Non-crucial features where the code can be lazy loaded on demand:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image uploader"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"GIF picker"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Emoji picker"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sticker picker"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Background images"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accessibility","link":{"type":"url","url":"#accessibility"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Here are some accessibility considerations for a news feed."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed list","link":{"type":"url","url":"#feed-list"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Add "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"role=\"feed\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to the feed HTML element."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed posts","link":{"type":"url","url":"#feed-posts"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Add "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"role=\"article\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to each feed post HTML element."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-labelledby=\"<id>\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" where the HTML tag containing the feed author name has that "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"id"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Contents within the feed post should be focusable via keyboards (add "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"tabindex=\"0\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") and the appropriate "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-role"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed interactions","link":{"type":"url","url":"#feed-interactions"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"On Facebook website, users can have more reaction options by hovering over the \"Like\" button. To allow the same functionality for keyboard users, Facebook displays a button that only appears on focus and the reactions menu can be opened via that button."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Icon-only buttons should have "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-label"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s if there are no accompanying labels (e.g. Twitter)."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"References","link":{"type":"url","url":"#references"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rebuilding our tech stack for the new Facebook.com","link":{"type":"url","url":"https://engineering.fb.com/2020/05/08/web/facebook-redesign/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Making Facebook.com accessible to as many people as possible","link":{"type":"url","url":"https://engineering.fb.com/2020/07/30/web/facebook-com-accessibility/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How we built Twitter Lite","link":{"type":"url","url":"https://blog.twitter.com/engineering/en_us/topics/open-source/2017/how-we-built-twitter-lite"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Building the new Twitter.com","link":{"type":"url","url":"https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/buildingthenewtwitter"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dissecting Twitter's Redux Store","link":{"type":"url","url":"https://medium.com/statuscode/dissecting-twitters-redux-store-d7280b62c6b1"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Twitter Lite and High Performance React Progressive Web Apps at Scale","link":{"type":"url","url":"https://medium.com/@paularmstrong/twitter-lite-and-high-performance-react-progressive-web-apps-at-scale-d28a00e780a3"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Making Instagram.com faster: Part 1","link":{"type":"url","url":"https://instagram-engineering.com/making-instagram-com-faster-part-1-62cc0c327538"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Making Instagram.com faster: Part 2","link":{"type":"url","url":"https://instagram-engineering.com/making-instagram-com-faster-part-2-f350c8fba0d4"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Making Instagram.com faster: Part 3 — cache first","link":{"type":"url","url":"https://instagram-engineering.com/making-instagram-com-faster-part-3-cache-first-6f3f130b9669"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Evolving API Pagination at Slack","link":{"type":"url","url":"https://slack.engineering/evolving-api-pagination-at-slack"}}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Changelog","link":{"type":"url","url":"#changelog"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024/08/21"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Added more properties to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"image"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" field for payload response"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mentioned "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Intl.RelativeTimeFormat"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" API"}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2023/12/04"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Added section on live comments"}}]}}]}}],"questionsMarkdown":null,"answerMarkdown":null,"time":"30 mins"},{"title":"Autocomplete","difficulty":"Medium","url":"https://www.greatfrontend.com/questions/system-design/autocomplete?practice=practice&tab=system-design","questionBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Companies"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Airbnb Lyft Twitter Google Apple Microsoft LinkedIn Uber"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Autocomplete is a common question asked by many companies and encompasses many useful front end concepts and techniques which can be generalized to other front end system design questions. It is highly recommended to study this question well and thoroughly!"}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Question"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design an autocomplete UI component that allows users to enter a search term into a text box, a list of search results appear in a popup and the user can select a result."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Some real-life examples where you might have seen this component in action:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Google's search bar on google.com where you see a list of primarily text-based suggestions."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Facebook's search input where you see a list of rich results. The results can be friends, celebrities, groups, pages, etc."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/autocomplete/google-search-autocomplete.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A back end API is provided which will return a list of results based on the search query."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requirements"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The component is generic enough to be usable by different websites."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The input field UI and search results UI should be customizable."}}]}}],"answerBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requirements exploration","link":{"type":"url","url":"#requirements-exploration"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These are questions you should be asking your interviewer to dive deeper into the problem and refine the requirements."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What kind of results should be supported?","link":{"type":"url","url":"#what-kind-of-results-should-be-supported"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Text, image, media (image accompanied with text) are the most common type of results but we cannot anticipate all the different kinds of results that users of the component will want to render."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What devices will this component be used on?","link":{"type":"url","url":"#what-devices-will-this-component-be-used-on"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"All possible devices: laptop, tablets, mobile, etc."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Do we need to support fuzzy search?","link":{"type":"url","url":"#do-we-need-to-support-fuzzy-search"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Not for the initial version. We can explore this if we have time."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Architecture","link":{"type":"url","url":"#architecture"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/autocomplete/autocomplete-architecture.png"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Input field UI"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Handles user input and passes the user input to the controller."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Results UI (Popup)"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Receives results from the controller and presents it to the user."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Handles user selection and informs the controller which input was selected."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cache"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Stores the results for previous queries so that the controller can check if sending a request to the server."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Controller"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The \"brain\" of the whole component, similar to the Controller in the Model View Controller (MVC) pattern. All the components in the system interact with this component."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Passes user input and results between components."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fetches results from the server if the cache is empty for a particular query."}}]}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data model","link":{"type":"url","url":"#data-model"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Controller"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Props/options exposed via the component API"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Current search string"}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cache"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Initial results"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cached results"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Refer to section below for cache data model design"}}]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"These are only the core fields that are needed for the basic functionality. More fields will be added as we dive deeper into specific topics below."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interface definition (API)","link":{"type":"url","url":"#interface-definition-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since this is a front end system design question, we will focus on the API of the component and only briefly touch on the search API that the server should provide."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client","link":{"type":"url","url":"#client"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since we want to make a component that is flexible and easy for other developers to use, we cannot make too many assumptions about how the component will be used and have to supply a pretty large amount of options."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Basic API","link":{"type":"url","url":"#basic-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These are the core APIs which affect the functionality of the component."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Number of results"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The number of results to show in the list of results."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"API URL"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The URL to hit when a query is made. For an autocomplete use case, queries are made as the user types."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Event listeners"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"'input'"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"'focus'"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"'blur'"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"'change'"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"'select'"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" are some of the common events which developers might want to respond to (possibly log user interactions), so adding hooks for these events would be helpful."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Customized rendering"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": There are a few ways to allow developers to customize the rendering of the various parts of their UI for their use cases:"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Theming options object"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This approach is the easiest to use but the least flexible/customizable. The component can accept an object of key/values (e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"{ textSize: 12px, textColor: 'red' }"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") and use it when rendering."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Classnames"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Allow developers to specify their own CSS class names which the component will add to the various UI sub-components."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Render function/callback"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This is an inversion of control technique commonly used in React where the rendering is completely left to the developer. The component invokes a developer-provided function with some data and the developer can customize the logic/code to render the UI based on that data. This is the most flexible approach but requires the most effort from the developer."}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Advanced API","link":{"type":"url","url":"#advanced-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These APIs affect the user experience and performance of the component and should be covered if there's enough time."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Minimum query length"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": There will likely be too many irrelevant results if the user query is too short as it is not specific enough. We might only want to trigger the search when there's a minimum number of characters typed in, possibly 3 or more."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Debounce duration"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Triggering a back end search API for every keystroke can be quite wasteful, especially when the queries for the first few characters are likely to not be meaningful. Debouncing is a technique that limits the number of time a function gets called. We could debounce hitting of the API so that the server does not get hit too often. With a debounce duration of 300ms, the back end search API will only be called after there has been no user input for 300ms."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"API timeout duration"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": How long we should be waiting for a response to determine that the search has timed out and we can display an error."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cache-related"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": More details on these options will be covered in the cache section below."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Initial results"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Results source: network only/network and cache/cache only"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Function to merge results from server and cache"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cache duration"}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server API","link":{"type":"url","url":"#server-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The server should provide a HTTP API that supports the following parameters:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"query"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The actual search query"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"limit"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Number of results in one page"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pagination"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The page number"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pagination"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"limit"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" are useful if there is a need to allow users to scroll down beyond the initial list of results to get the next \"page\" of results."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimizations and deep dive","link":{"type":"url","url":"#optimizations-and-deep-dive"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"With the basics out of the way, we can dive deeper into specific topics which are relevant to the question."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Network","link":{"type":"url","url":"#network"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Handling concurrent requests/race conditions","link":{"type":"url","url":"#handling-concurrent-requestsrace-conditions"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What happens if the user makes changes to the query while there's a pending network request? If there are multiple pending network requests, we will need to be mindful not to display results for a previous search query. We cannot rely on the return order of network responses from the server because an earlier request might only be completed later than a request fired later on."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"To know which request's response we should use display, we could:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Attach a timestamp to each request to determine the latest request and only display the results of the latest request (not the latest response!). Discard the response of irrelevant queries."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Save the results in an object/map, keyed by the search query string and only present the results corresponding to the input value in the search input."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Which option is better? Given we have a cache that remembers the responses of each search query, option 2 is clearly better. Refer to the cache section details for more details."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It's not advisable to abort requests (via "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"AbortController"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") or discard responses since the server would have received and processed the request and returned the data back to the client."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Saving the responses for historical keystrokes is useful for cases where users accidentally typed an extra character. \"f' -> \"fo\" -> \"foo\" -> meant to type \"t\" but mistyped an extra \"r\" due to fat fingers -> \"foot\" -> \"footr\" -> deletes extra \"r\" -> \"foot\" (results for \"foot\" can be displayed immediately it is already in the cache). If there's debounce, then the requests for \"foot\" might not have fired immediately and there's no response for \"foot\" to cache, so this mainly benefits autocomplete components without debounce or people who type slower than the debounce duration."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Failed requests and retries","link":{"type":"url","url":"#failed-requests-and-retries"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server requests can sometimes fail, possibly due to the user's flaky internet connection. The component can automatically retry firing the query. In case the server is indeed offline and we are concerned about overloading the server, we could use an exponential backoff strategy."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Offline usage","link":{"type":"url","url":"#offline-usage"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If we detect that the device has entirely lost network connection, there's not a whole lot that we can do since our component relies on the server for data. But we could do the following to improve the UX:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Read purely from cache. Obviously this is not very useful if the cache is empty."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Not fire any requests so as not to waste CPU cycles."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Indicate that there's no network connection somewhere in the component."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cache","link":{"type":"url","url":"#cache"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What is the cache for? Caches are typically used to improve performance of queries and reducing processing costs by saving the results of previous queries in memory. If/when the user searches for the same term again, instead of hitting the server for the results, we can retrieve the results from memory and instantly show the results, effectively removing the need for any network request and latency."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"To provide the best experience, Google and Facebook search inputs cache user queries."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cache structure","link":{"type":"url","url":"#cache-structure"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The cache within the component is the most interesting aspect of the component as there are many ways to design the cache, each with its own pros and cons. Explaining the tradeoffs of each is essential to acing front end system design interviews."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"1. Hash map with search query as key and results as value."}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" This is the most obvious structure for a cache, mapping the string query to the results. Retrieving the results is super simple and can be obtained in O(1) time just by looking up whether the cache contains the search term as a key."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"const cache = {\n  fa: [\n    { type: 'organization', text: 'Facebook' },\n    {\n      type: 'organization',\n      text: 'FasTrak',\n      subtitle: 'Government office, San Francisco, CA',\n    },\n    { type: 'text', text: 'face' },\n  ],\n  fac: [\n    { type: 'organization', text: 'Facebook' },\n    { type: 'text', text: 'face' },\n    { type: 'text', text: 'facebook messenger' },\n  ],\n  face: [\n    { type: 'organization', text: 'Facebook' },\n    { type: 'text', text: 'face' },\n    { type: 'text', text: 'facebook stock' },\n  ],\n  faces: [\n    { type: 'television', text: 'Faces of COVID', subtitle: 'TV program' },\n    { type: 'musician', text: 'Faces', subtitle: 'Rock band' },\n    { type: 'television', text: 'Faces of Death', subtitle: 'Film series' },\n  ],\n  // ...\n};"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, see that there are lots of duplicate results especially if we don't do any debouncing as the user is typing and we fire one request per keystroke. This results in the page consuming lots of memory for the cache."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2. List of results."}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" Alternatively, we could save the results as a flat list and do our own filtering on the front end. There will not be much (if any) duplication of results."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"const results = [\n  { type: 'company', text: 'Facebook' },\n  {\n    type: 'organization',\n    text: 'FasTrak',\n    subtitle: 'Government office, San Francisco, CA',\n  },\n  { type: 'text', text: 'face' },\n  { type: 'text', text: 'facebook messenger' },\n  { type: 'text', text: 'facebook stock' },\n  { type: 'television', text: 'Faces of COVID', subtitle: 'TV program' },\n  { type: 'musician', text: 'Faces', subtitle: 'Rock band' },\n  { type: 'television', text: 'Faces of Death', subtitle: 'Film series' },\n];"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, this is not ideal in practice because we have to do filtering on the client side. This is bad for performance and might end up blocking the UI thread and is especially evident on large data sets and slow devices. The ranking order per result might also be lost, which is not ideal."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"3. Normalized map of results."}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" We take inspiration from "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"normalizr","link":{"type":"url","url":"https://github.com/paularmstrong/normalizr/tree/master/docs"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and structure the cache like a database, combining the best traits of the earlier approaches - fast lookup and non-duplicated data. Each result entry is one row in the \"database\" and is identified by a unique ID. The cache simply refers to each item's ID."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"// Store results by ID to easily retrieve the data for a specific ID.\nconst results = {\n  1: { id: 1, type: 'organization', text: 'Facebook' },\n  2: {\n    id: 2,\n    type: 'organization',\n    text: 'FasTrak',\n    subtitle: 'Government office, San Francisco, CA',\n  },\n  3: { id: 3, type: 'text', text: 'face' },\n  4: { id: 4, type: 'text', text: 'facebook messenger' },\n  5: { id: 5, type: 'text', text: 'facebook stock' },\n  6: {\n    id: 6,\n    type: 'television',\n    text: 'Faces of COVID',\n    subtitle: 'TV program',\n  },\n  7: { id: 7, type: 'musician', text: 'Faces', subtitle: 'Rock band' },\n  8: {\n    id: 8,\n    type: 'television',\n    text: 'Faces of Death',\n    subtitle: 'Film series',\n  },\n};\n\n\nconst cache = {\n  fa: [1, 2, 3],\n  fac: [1, 3, 4],\n  face: [1, 3, 5],\n  faces: [6, 7, 8],\n  // ...\n};"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There will be pre-processing that needs to be done before showing the results to the user, to map a list's result IDs to the actual result items but the processing cost is negligible if there are only a few items to be shown."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Which structure to use?"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Which to use depends on the type of application this component is being used in."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Short-lived websites"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": If the component is being used on a page which is short-lived (e.g. Google search), option 1 would be the best. Even though there is duplicated data, the user is unlikely to use search so often that memory usage becomes an issue. The cache is being cleared/reset when the user clicks on a search result anyway."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Long-lived websites"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": If this autocomplete component is used on page which is a long-lived single page application (e.g. Facebook website), then option 3 might be viable. However, do also note that caching results for too long might be a bad idea as stale results take up memory without being useful."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Initial results","link":{"type":"url","url":"#initial-results"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Noticed how on Google search, when you first focus on the input, a list of results is displayed even though you haven't typed anything yet? Showing an initial relevant list of results could be useful in saving users from typing and reducing server costs."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Google"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Popular search queries today (current affairs, trending celebrities, latest happenings) and historical searches"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Facebook"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Historical searches."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Stock/crypto/currency exchanges"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Historical searches or trending stocks"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The initial results could be an option on the component and added to the cache where the key is an empty string."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In the past, Facebook loaded a user's friends, pages, groups into the browser cache so that results can be shown instantly via client-side filtering without sending another HTTP request."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Source: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"The Life of a Typeahead Query","link":{"type":"url","url":"https://engineering.fb.com/2010/05/17/web/the-life-of-a-typeahead-query/"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Caching strategy","link":{"type":"url","url":"#caching-strategy"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Caching is a space/time tradeoff where we trade memory space to save on processing time. Having cached results stay around for too long is a bad idea because it consumes memory and if too much time has passed since the cache entry was written, the results are likely irrelevant/outdated. There's little value in using memory to store irrelevant/outdated results."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When to evict the cache depends on the type of application:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Google"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Google search results don't update that often, so the cache is useful and can live for long (hours?)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Facebook"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Facebook search results are updated moderately often, so a cache is useful but entries should be evicted every now and then (half an hour?)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Stock/currency exchanges"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Exchanges with an autocomplete for stock ticker symbols/currency showing the current price in the results might not want to cache at all because the prices change every minute when the markets are open."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We can add the data source/caching strategy and cache duration as configuration options on the component."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data source"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Whether to read the results from the \"network only\", \"network and cache\", \"cache only\"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cache duration/Time-to-live"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": How long to retain each cache entry for. This will involve adding timestamps to each entry and evicting stale cache entries every now and then."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance","link":{"type":"url","url":"#performance"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance here refers to client-side performance since server-side performance (how fast the query returns) is out of scope."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Loading speed","link":{"type":"url","url":"#loading-speed"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We can't improve how fast the server returns the response, but with client-side caching, we can show results for previous queries near instantly. We can even go one step further and use cached results for future results if there's a match."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Debouncing/throttling","link":{"type":"url","url":"#debouncingthrottling"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"By limiting the number of network requests that can be fired, we reduce server payload and CPU processing."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Memory usage","link":{"type":"url","url":"#memory-usage"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Long-lived pages might have autocomplete components which accumulate too many results in the cache and hog memory. Purging the cache and freeing up memory is essential for such pages. The purging can be done when the browser is idle or total memory/number of cache entries exceed a certain threshold."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Virtualized lists","link":{"type":"url","url":"#virtualized-lists"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If the results contains many items (order of hundreds and thousands), rendering that many DOM nodes in the browser would cost lots of memory and slow down the browser. List virtualization is a technique that we can use here to allow the component can retain its performance at scale."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"From "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://web.dev","link":{"type":"url","url":"https://web.dev/virtualize-long-lists-react-window"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":":"}}]}},{"object":"block","type":"quote","quote":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":""}}],"children":[{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"List virtualization, or \"windowing\", is the concept of only rendering what is visible to the user. The number of elements that are rendered at first is a very small subset of the entire list and the \"window\" of visible content moves when the user continues to scroll. This improves both the rendering and scrolling performance of the list."}}]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The trick here is to only render the nodes which are visible and recycle DOM nodes instead of creating new ones. We can make the results window give the illusion that it contains that many results with fake off-screen elements that add up to the height of the non-visible result elements."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User experience","link":{"type":"url","url":"#user-experience"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The following are some good UX practices to apply to the autocomplete component:"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Autofocus","link":{"type":"url","url":"#autofocus"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Add the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autofocus"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute to your "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"input"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" if it's a search page (like Google) and you're very certain that the user has a high intention to use the autocomplete when it is present on the screen."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Handle different states","link":{"type":"url","url":"#handle-different-states"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Loading"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Show spinner when there's a background request."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Error"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Show an error message with a retry request button."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"No network"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Show an error message that there's no network available."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Handle long strings","link":{"type":"url","url":"#handle-long-strings"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Long text in the result items should be handled appropriately, usually via truncating with an ellipsis or wrapping nicely. The text should not overflow and appear outside the component."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mobile-friendliness","link":{"type":"url","url":"#mobile-friendliness"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Each result item should be large enough for user to tap on if used on mobile."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dynamic number of results depending on viewport window size, but this is better implemented in userland instead."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Set helpful attributes for mobile: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autocapitalize=\"off\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autocomplete=\"off\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autocorrect=\"off\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"spellcheck=\"false\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" so that the browser suggestions do not interfere with the user's search."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard interaction","link":{"type":"url","url":"#keyboard-interaction"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Users should be able to use the component and focus on the autocomplete suggestions just via their keyboard. Read more under the "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accessibility"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" section."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Add a global shortcut key to let the user easily focus on the autocomplete input. A common keyboard shortcut is the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (forward slash) key, which is used by Facebook, X and YouTube."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Typos in search","link":{"type":"url","url":"#typos-in-search"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It is easy to make typographical errors, especially on mobile devices. A fuzzy search is a searching technique where results that matches the search query closely instead of exactly are also considered. Fuzzy searches help you find relevant results even when the search terms are misspelled."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fuzzy searches can be used if the filtering is purely done on the client side by computing edit distance (e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Levenshtein distance","link":{"type":"url","url":"https://en.wikipedia.org/wiki/Levenshtein_distance"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") between the search query and the results and selecting the ones with the smallest edit distance. For searches done on the server-side, we can send the query as-is and have the fuzzy matching be done on the server."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Query results positioning","link":{"type":"url","url":"#query-results-positioning"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The list of autocomplete suggestions typically appear below the input. However, if the autocomplete component is at the bottom of the window, then there's insufficient space to fully display the results. The suggestions can be made aware of its positioning on the page and render above the input if there's no space to show it below the input."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accessibility","link":{"type":"url","url":"#accessibility"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Screen readers","link":{"type":"url","url":"#screen-readers"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use semantic HTML or use the right "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" roles if using non-semantic HTML. Use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<ul>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<li>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" for building list items or "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"role=\"listbox\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"role=\"option\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-label"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" for the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" because there usually isn't a visible label."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"role=\"combobox\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" for the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-haspopup","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-haspopup"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to indicate that the element can trigger an interactive popup element."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-expanded","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-expanded"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to indicate whether the popup element is currently displayed."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mark the results region with "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-live","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/ARIA_Live_Regions"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" so that when new results are shown, screen reader users are notified."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-autocomplete","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-autocomplete"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to describe the type of autocompletion interaction model the combobox will use when dynamically helping users complete text input, whether suggestions will be shown as a single value inline ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-autocomplete=\"inline\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") or in a collection of values ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-autocomplete=\"list\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Google uses "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-autocomplete=\"both\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" while Facebook and X use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-autocomplete=\"list\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard interaction","link":{"type":"url","url":"#keyboard-interaction-1"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Hit enter to perform a search. You can get this behavior for free by wrapping the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" in a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<form>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Up/down arrows to navigate the options, wrapping around when the end of the list is reached."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Escape to dismiss the results popup if it is visible."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"... and more. Follow the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WAI ARIA Combo Box","link":{"type":"url","url":"https://www.w3.org/WAI/ARIA/apg/patterns/combobox/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" practices."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Comparing Google, Facebook, and X search component","link":{"type":"url","url":"#comparing-google-facebook-and-x-search-component"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Here's a comparison of Google, Facebook, and X's search autocomplete component and the HTML attributes used."}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTML Attribute"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Google"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Facebook"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"X"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTML Element"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<textarea>"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input>"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input>"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Within "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<form>"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Yes"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"No"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Yes"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"text\""}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"search\""}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"text\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autocapitalize"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"off\""}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Absent"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"sentence\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autocomplete"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"off\""}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"off\""}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"off\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autocorrect"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"off\""}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Absent"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"off\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autofocus"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Present"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Absent"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Present"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"placeholder"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Absent"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"Search Facebook\""}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"Search\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"role"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"combobox\""}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Absent"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"combobox\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"spellcheck"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"false\""}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"false\""}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"false\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-activedescendant"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Present"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Absent"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Present"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-autocomplete"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"both\""}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"list\""}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"list\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-expanded"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Present"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Present"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Present"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-haspopup"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"false\""}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Absent"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Absent"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-invalid"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Absent"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"false\""}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Absent"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-label"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"Search\""}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"Search Facebook\""}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"Search query\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-owns"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Present"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Absent"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Present"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"dir"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Absent"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"ltr\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"rtl\""}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"auto\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"enterkeyhint"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Absent"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Absent"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"search\""}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note: This table is only accurate at the time of writing since companies update their search components from time to time. The point is to demonstrate is that there's no standardized practice on the ARIA properties to use."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"References","link":{"type":"url","url":"#references"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The Life of a Typeahead Query","link":{"type":"url","url":"https://engineering.fb.com/2010/05/17/web/the-life-of-a-typeahead-query/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Building an accessible autocomplete control","link":{"type":"url","url":"https://adamsilver.io/blog/building-an-accessible-autocomplete-control/"}}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Changelog","link":{"type":"url","url":"#changelog"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024/08/21"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Updated Google, Facebook, X's HTML attributes table."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Changed Twitter to X."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2023/01/14"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update normalized store format to be an object instead of array for quick lookup."}}]}}]}}],"questionsMarkdown":null,"answerMarkdown":null,"time":"30 mins"},{"title":"Poll Widget","difficulty":"Easy","url":"https://www.greatfrontend.com/questions/system-design/poll-widget?practice=practice&tab=system-design","questionBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Question"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design a poll widget that can be easily embedded on websites, such as articles and blogs to allow website viewers to vote on options."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/poll-widget/poll-widget-example.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requirements"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The widget displays the following information:"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A list of options for users to vote on."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The latest number of votes for each option. This is only shown after the user has submitted a vote."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The following back end APIs are provided:"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fetching of the poll results."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Record a new vote on an existing poll option."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Remove a vote from an existing poll option."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It should not require much effort for a website owner to embed a poll widget within their websites."}}]}}],"answerBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requirements exploration","link":{"type":"url","url":"#requirements-exploration"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These are questions you should be asking your interviewer to dive deeper into the problem and refine the requirements."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What are the most critical aspects of the component?","link":{"type":"url","url":"#what-are-the-most-critical-aspects-of-the-component"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Ease of embedding the polling widget within websites."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User experience as a voter."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Does the widget show details of people (e.g. thumbnail) who voted for an option?","link":{"type":"url","url":"#does-the-widget-show-details-of-people-eg-thumbnail-who-voted-for-an-option"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Whether we show that level of detail will affect the data model and APIs. We assume a basic version where we just have to show the count."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Can a user vote on multiple options?","link":{"type":"url","url":"#can-a-user-vote-on-multiple-options"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Yes, a user can vote on multiple options."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How do we determine the length/proportion of each option bar to render?","link":{"type":"url","url":"#how-do-we-determine-the-lengthproportion-of-each-option-bar-to-render"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"You are free to decide that."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In what order should the options be shown? By popularity/user has voted/random?","link":{"type":"url","url":"#in-what-order-should-the-options-be-shown-by-popularityuser-has-votedrandom"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Popularity."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How are the options determined? Can users add more options?","link":{"type":"url","url":"#how-are-the-options-determined-can-users-add-more-options"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The poll is created by the website owner in a separate admin portal and the options are determined during poll creation and cannot be modified after that."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Is there a maximum number of options shown in the widget?","link":{"type":"url","url":"#is-there-a-maximum-number-of-options-shown-in-the-widget"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Maximum number of options is 6."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Must users be logged in on the page in order to vote?","link":{"type":"url","url":"#must-users-be-logged-in-on-the-page-in-order-to-vote"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Anyone can vote regardless of whether they are logged in or out. Votes should be persisted for the same user."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Architecture","link":{"type":"url","url":"#architecture"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering approach","link":{"type":"url","url":"#rendering-approach"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We should first evaluate the possible rendering approaches because it will affect the architecture and subsequent discussions."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Generally speaking, there are two approaches for rendering external widgets/components on a page:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Render in an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<iframe>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (different browser context)"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Render directly within the page (same browser context)"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note that we're talking about how to render the widget, which is different from the distribution approach — how to run the code that renders the widget."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Render in an ","link":{"type":"url","url":"#render-in-an-iframe-different-browser-context"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<iframe>","link":{"type":"url","url":"#render-in-an-iframe-different-browser-context"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (different browser context)","link":{"type":"url","url":"#render-in-an-iframe-different-browser-context"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<iframe>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (inline frame) is an HTML tag on a page which accepts a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"src"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute, which is a URL for a website you want to embed within the host website."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Popular embeddable widgets such as Facebook's Like button, Twitter's embedded tweets, YouTube's embedded videos, and Disqus' embedded comments are "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"iframe"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s. They are essentially websites that only render the contents to be embedded."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Check out these examples to see for yourself:"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Facebook Like Button"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Twitter Embedded Tweets"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"iframe"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s is a very common technique for embedding your content within third party websites. In the case of a poll widget, the widget will be the only UI being rendered on the website that's defined as the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"iframe"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"'s "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"src"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pros"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"An "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"iframe"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is a separate website and hence a separate "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"browsing context","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Glossary/Browsing_context"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". The contents of the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"iframe"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is isolated from the hosting site and vice versa."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The styling of the widget will not be affected by any CSS of the host website."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The widget's JavaScript environment is not affected by scripts running on the host website, which can contain polyfills or monkeypatching, affecting runtime behavior in an unpredictable manner."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Simple to set up because adding an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<iframe>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" on the page only involves changing HTML. Users do not need much technical knowledge to achieve that."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cons"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Need a web server to host a website that renders the widget. This is not a huge deal because a web server is needed to serve the poll results anyway. Depending on the type of website you build, this setup can range from simple to complex."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It is slower to load a separate website than to render it directly into the page."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Because of the isolation, the host website cannot use CSS to customize the component internals."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are two common ways to get the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<iframe>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" on the page, using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Facebook's Like Button developer documentation","link":{"type":"url","url":"https://developers.facebook.com/docs/plugins/like-button/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" as an example:"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"1. Run JavaScript code that dynamically adds an "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<iframe>"}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" into the DOM."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/poll-widget/fb-like-button-plugin-docs-js-sdk.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2. Directly embed the "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<iframe>"}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" code into the HTML."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/poll-widget/fb-like-button-plugin-docs-iframe.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The benefit of the JavaScript approach is that the script can customize the iframe rendering (e.g. theme, size) based on the environment if necessary. The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<iframe>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" approach is simpler but less flexible."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Render within the page (same browser context)","link":{"type":"url","url":"#render-within-the-page-same-browser-context"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Just like how a script can dynamically inject an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<iframe>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" into the DOM, it can also directly add the DOM elements needed to render the poll and the poll results."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pros"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It is fast to render the poll widget within the same page."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cons"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The poll widget can be affected by the host website's JavaScript environment and global styling. There's no telling what kind of global styling is present and it is very likely for the widget's appearance to be affected by the website's CSS."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The question is how to run the 3rd party JavaScript on the page to achieve the above."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"1. Download the script via a CDN."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This approach is similar to Facebook's Like Button JavaScript SDK approach, by adding a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<script>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tag into the page which downloads and executes some external JavaScript."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2. Distribute the code via "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"npm"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"npm"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is a package manager for JavaScript projects and the widget code can be packaged into an npm project so that projects can add it as a dependency. Website owners will need to possess the technical knowledge on how to add a new "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"npm"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" package into their "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"package.json"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Distributing only via "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"npm"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is not a great idea because not all websites are built using a JavaScript-based build system. Low-code websites like Wordpress, Webflow and Blogger do not allow for including third party JavaScript code on the page via npm."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Which rendering approach is better?","link":{"type":"url","url":"#which-rendering-approach-is-better"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For embedding widgets, the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<iframe>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" approach is clearly superior due to the encapsulation of styles and environment that an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"iframe"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" provides."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Which distribution approach is better for rendering ","link":{"type":"url","url":"#which-distribution-approach-is-better-for-rendering-iframes"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<iframe>","link":{"type":"url","url":"#which-distribution-approach-is-better-for-rendering-iframes"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s?","link":{"type":"url","url":"#which-distribution-approach-is-better-for-rendering-iframes"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Embedding "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<iframe>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s directly in the HTML is the easiest and the upsides of using a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<script>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"-based approach is not that much. That said, it'd be nice to give developers the choice to choose between the two approaches. Facebook and YouTube provides both JavaScript SDKs and direct "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<iframe>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" embed options."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The discussion below will assume an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<iframe>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" embed approach."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Diagram","link":{"type":"url","url":"#diagram"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/poll-widget/poll-widget-architecture.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Component responsibilities","link":{"type":"url","url":"#component-responsibilities"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Host Website"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Host website that embeds the widget as an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<iframe>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"App Server"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Renders the widget UI as a website by serving the HTML, CSS, JavaScript needed."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"API Server"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Server that returns poll result JSON data for the widget and also accepts new polls."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client Store"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The module that interacts with the API server and stores data for the UI."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Polls UI"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": UI for the poll options."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Note: The "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"App Server"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"API Server"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":" have been split into separate components for clarity but they can be the same server with the same domain."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data model","link":{"type":"url","url":"#data-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The data model for a polling widget is quite simple. Something like this will be sufficient:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"const state = {\n  lastUpdated: 1628634891,\n  totalVotes: 421,\n  question: 'Which is your favorite JavaScript library/framework?',\n  options: [\n    {\n      id: 123,\n      label: 'React',\n      count: 234,\n      userVotedForOption: false,\n    },\n    {\n      id: 124,\n      label: 'Vue',\n      count: 183,\n      userVotedForOption: true,\n    },\n    {\n      id: 125,\n      label: 'Svelte',\n      count: 51,\n      userVotedForOption: true,\n    },\n    // ...\n  ],\n  // Which option(s) the user has selected.\n  selectedOptions: [124, 125],\n};"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Only the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"selectedOptions"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" field is client-only state, the rest of the fields are server-originated data."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interface definition (API)","link":{"type":"url","url":"#interface-definition-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are three kinds of APIs to discuss:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Embed API"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": How websites should embed the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<iframe>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Components API"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": How to build the poll widget and the props the components accept."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server APIs"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The HTTP APIs to fetch results, record new votes and remove votes."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Embed API","link":{"type":"url","url":"#embed-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Websites should be provided with some code to be copied and pasted to render the poll widget. The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"iframe"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"'s "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"src"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute should be a unique URL specific to a poll instance."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<iframe\n  src=\"https://greatpollwidget.com/embed/{poll_id}\"\n  style=\"border:none;overflow:hidden\"\n  title=\"Poll widget for your favorite JavaScript framework\"\n  frameborder=\"0\"\n  scrolling=\"no\"\n  style={{\n    height: 200,\n    width: '100%',\n    maxWidth: 450,\n  }}\n  />"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"iframe"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s by default are rendered with default styling so attributes like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"frameborder=\"0\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"scrolling=\"no\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and the inline styles help remove borders and scrollbars to make the widget appear to be part of the page and not obvious that the widget is rendered by an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"iframe"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Components API","link":{"type":"url","url":"#components-api"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Poll"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server URL"}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"PollOptionList"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Maximum number of options displayed"}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"PollOptionItem"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Label"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Number of votes for an option"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Event handlers: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"onClick"}}]}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"// Example code in React\n<Poll submitUrl=\"https://greatpollwidget.com/submit/{poll_id}\">\n  <PollOptionList>\n    {options.map((option) => (\n      <PollOptionItem\n        key={option.id}\n        label={option.label}\n        count={option.count}\n        isSelected={option.userVotedForOption}\n        onVote={() => {\n          submitVote(option.id);\n        }}\n        onUnvote={() => {\n          removeVote(option.id);\n        }}\n      />\n    ))}\n  </PollOptionList>\n</Poll>"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server APIs","link":{"type":"url","url":"#server-apis"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The server APIs are ideally served on the same domain so that there is no need to mess with CORS, e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"https://greatpollwidget.com/api/{poll_id}/results"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"https://greatpollwidget.com/api/{poll_id}/submit"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fetching results","link":{"type":"url","url":"#fetching-results"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What format should the API return the results in?"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"1. Return the options and the counts for each"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The server returns something like:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"totalVotes\": 421,\n  \"question\": \"Which is your favorite JavaScript library/framework?\",\n  \"options\": [\n    {\n      \"id\": 123,\n      \"label\": \"React\",\n      \"count\": 234,\n      \"userVotedForOption\": false\n    },\n    {\n      \"id\": 124,\n      \"label\": \"Vue\",\n      \"count\": 183,\n      \"userVotedForOption\": false\n    },\n    {\n      \"id\": 125,\n      \"label\": \"Svelte\",\n      \"count\": 51,\n      \"userVotedForOption\": false\n    }\n  ]\n}"}}],"language":"plain text"}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pros"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client does not need to do tabulation of results, simply render the results."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Payload is small, contains exactly the data that needs to be displayed."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cons"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server has to do the processing, but likely better because server can cache/memoize the results especially for popular polls and return the cached results for different users."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The server will need to update the tabulation every now and then. This is a good use case for in-memory key/value stores like Redis/Memcached."}}]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"*"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"2. Raw list of poll responses"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The server returns something like:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"question\": \"Which is your favorite JavaScript library/framework?\",\n  \"options\": [\n    {\n      \"id\": 123,\n      \"label\": \"React\"\n    },\n    {\n      \"id\": 124,\n      \"label\": \"Vue\"\n    },\n    {\n      \"id\": 125,\n      \"label\": \"Svelte\"\n    }\n  ],\n  \"votes\": [\n    {\n      \"optionId\": 123,\n      \"createdAt\": 1628634891\n    },\n    {\n      \"optionId\": 123,\n      \"createdAt\": 1628634892\n    },\n    {\n      \"optionId\": 124,\n      \"createdAt\": 1628634893\n    }\n    // ...\n  ]\n}"}}],"language":"plain text"}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pros"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Can do all the tabulation entirely on the client side and hence sorting/filtering does not have any network latency."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cons"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Doesn't scale well when there are lots of responses, the network payload will be huge."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The client needs to do the tabulation of votes which can be expensive on low-end devices and when there are many votes."}}]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Which to choose?"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Directly returning the counts is usually the superior option as there is usually no need to do tabulation or manipulation of the data on the client, which does not scale for popular votes with tens of thousands of votes."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Submitting votes and unvoting","link":{"type":"url","url":"#submitting-votes-and-unvoting"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The vote submission/unvoting APIs can accept a list of option IDs and return the updated poll results in a similar format as the poll results fetching API."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimizations and deep dive","link":{"type":"url","url":"#optimizations-and-deep-dive"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Persisting votes across sessions","link":{"type":"url","url":"#persisting-votes-across-sessions"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Because anyone can vote without having to log in first, we will need a way to identify users across sessions, otherwise the user will not see that they have already voted after the browser tab is closed."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We can use cookies to uniquely identify each user by generating a unique string-based fingerprint (e.g. using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"uuid"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") to serve as the user ID cookie during the initial load if there's no existing user ID cookie present."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This helps the poll widget website to identify users to track the options they have already voted and prevent a user from voting for the same option multiple times."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note that users can work around this by using different browsers or on different devices. The only way to prevent this sort of abuse is to have user authentication."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering the poll options","link":{"type":"url","url":"#rendering-the-poll-options"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The polling results consists of multiple bars of various widths and there are multiple ways to render such a result. It's worth discussing the various ways of rendering bars of varying widths."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What a full bar represents","link":{"type":"url","url":"#what-a-full-bar-represents"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A full bar can have two common representations:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Full-width represents 100% of all responses. If an option is X% of the total, it will take up X% of the container width."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accurate representation of proportion of options"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bad if the ratio is very even and there are many options with low %. Hard to discern because many bars will be very short"}}]}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The top-voted option is rendered with the full width and other options are a proportion of it. E.g. the top voted option is 40% of the total votes but will take up the entire container width. If another option is 20%, it will take up half the width."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Useful for highlighting the relative difference between the options."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Might gives viewers a false impression that the top-voted option is higher ratio than it actually is."}}]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The first option is the more common option and is used by Reddit and Twitter."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering bars of dynamic widths","link":{"type":"url","url":"#rendering-bars-of-dynamic-widths"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The number of votes for an option over the total number of votes will be the proportion of the full width to render the bar. E.g. 400 votes for an option over a total of 1000 votes will mean that the bar should be rendered 40% of the full width. Since there are infinitely many possible values for the width, it is not practical to use static CSS classes to render a bar for a specific width. A better way would be to use inline styles that are dynamically generated during rendering."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"1. Using CSS "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"width"}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" inline style"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This is the most common approach and the only small downside is that in case there's a need for animating of the bars expanding/contracting, animation of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"width"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" property is slower than "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"transform"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". However, the widget is mostly static so the animating issue is largely not present."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<div style=\"width: 40%\">React</div>\n<div style=\"width: 30%\">Vue</div>"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2. Using "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"transform: scaleX()"}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" style"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This method involves scaling the element horizonally."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<div style=\"transform: scaleX(40%)\">React</div>\n<div style=\"transform: scaleX(30%)\">Vue</div>"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note that "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"scaleX()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" will also transform contents within it and make them appear horizontally squished."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We should use a % of the full width of the widget instead of hardcoded px values calculated once when the page loads so that if the widget is resized, the bars' width will be updated. % widths can be achieved using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"width"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"transform: scaleX()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If we are fine with some precision loss, then we could have 101 classnames for percentages of 0 to 100. But in general, this is not a great approach and inline styles is the preferred approach."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User experience","link":{"type":"url","url":"#user-experience"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When the poll is still loading, instead of showing a spinner, use a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"shimmer loading effect","link":{"type":"url","url":"https://docs.flutter.dev/cookbook/effects/shimmer-loading"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" in the shape of bars to hint that this is a poll and also reduce layout thrash after the poll is loaded."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Poll results should be hidden before user has voted, to reduce bias."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Consider having a \"See responses\" function for people who just want to see the results without voting."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance","link":{"type":"url","url":"#performance"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fast rendering","link":{"type":"url","url":"#fast-rendering"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As mentioned earlier, to achieve fast rendering of the results, the server API should return the tabulated results, not raw results so that the client does not need to do any tabulation of results."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Prefer to use server-side rendering for the initial load rather than "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"fetch"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" the poll results over AJAX for a fast initial load."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fast interactions via optimistic updates","link":{"type":"url","url":"#fast-interactions-via-optimistic-updates"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimistic update is a technique where the browser shows the new UI state after a server request is fired, even before a response is received from the server. Because the client has the current results during initial load, it is possible to increment the newly-voted option and compute the new ratio of all the bars on the client side."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, there are a few caveats:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This optimization is more useful for polls with very few votes where each new vote will make a noticeable difference to the visual results. For polls with many existing votes (>500), an extra vote will not result in a noticeable difference in the widths. Optimistic updates can be skipped for such polls."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The client-side computation might be stale if the poll is a popular one with people constantly voting on it because the server response will contain many new votes since the widget was first loaded."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In most cases, the client can render an optimistic update first and render again with the most updated results from the server."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Scalability issues","link":{"type":"url","url":"#scalability-issues"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Given there are only a maximum of 6 options, we will not run into the issue of rendering too many options and a large resulting DOM size. But if we do, we can use virtualized lists within a container with a max height to prevent the component from being too tall and only render the on-screen options within the container."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accessibility","link":{"type":"url","url":"#accessibility"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Screen readers","link":{"type":"url","url":"#screen-readers"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Polling widgets are inherently very visual UI elements and we need to take special care to ensure users relying on screen readers can still understand what is being shown on the screen."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Screen reader users will not know how long a bar is, hence "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-label"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"title"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-describedby"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s need to be used for the poll options to indicate the option name, the number of votes, and the percentage if they are not in the rendered visual output."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-live"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to announce updates for any change in values of the results when the client receives a server response."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"ARIA roles for options: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"role=\"radiogroup\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"role=\"radio\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" for polls where only one option can be selected."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard interaction","link":{"type":"url","url":"#keyboard-interaction"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<button>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s are preferred for rendering poll options but if there's a reason to use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<div>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s, they should be made focusable by adding the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"tabindex=\"0\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"role=\"button\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attributes."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Network","link":{"type":"url","url":"#network"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Request responses could be out-of-order if someone votes/unvotes in quick succession"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keep track of the latest response and ignore stale responses."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Show errors in the UI if the API submission fails."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Internationalization (i18n)","link":{"type":"url","url":"#internationalization-i18n"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If there's a need for i18n of strings in the poll, especially the strings not from the poll creator (e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-label"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s), the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"iframe"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" embed URL can accept a query parameter for the language and it'll be up to the website owner to provide the right language."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"References","link":{"type":"url","url":"#references"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Facebook Like Button","link":{"type":"url","url":"https://developers.facebook.com/docs/plugins/like-button/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Twitter's Embedded Tweets","link":{"type":"url","url":"https://developer.twitter.com/en/docs/twitter-for-websites/embedded-tweets/overview"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Disqus Universal Embed Code","link":{"type":"url","url":"https://help.disqus.com/en/articles/1717112-universal-embed-code"}}}]}}],"questionsMarkdown":null,"answerMarkdown":null,"time":"30 mins"},{"title":"Travel Booking (e.g. Airbnb)","difficulty":"Medium","url":"https://www.greatfrontend.com/questions/system-design/travel-booking-airbnb?practice=practice&tab=system-design","questionBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Question"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design a travel booking website that allows users to search for accommodations and make a reservation."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/travel-booking-airbnb/travel-booking-plp.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/travel-booking-airbnb/travel-booking-pdp.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Real-life examples"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Airbnb","link":{"type":"url","url":"https://airbnb.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Booking.com","link":{"type":"url","url":"https://www.booking.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Expedia","link":{"type":"url","url":"https://www.expedia.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"TripAdvisor","link":{"type":"url","url":"https://www.tripadvisor.com/"}}}]}}],"answerBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requirements exploration","link":{"type":"url","url":"#requirements-exploration"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What are the core features to be supported?","link":{"type":"url","url":"#what-are-the-core-features-to-be-supported"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Search and browse accommodation listings."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Viewing accommodation details such as price, location, photos, and amenities."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Make reservation for accommodations."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What does the user demographics look like?","link":{"type":"url","url":"#what-does-the-user-demographics-look-like"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"International users of a wide age range: US, Asia, Europe, etc."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What are the non-functional requirements?","link":{"type":"url","url":"#what-are-the-non-functional-requirements"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Each page should load under 2 seconds. Interactions with page elements should respond quickly."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What devices will the website be used on?","link":{"type":"url","url":"#what-devices-will-the-website-be-used-on"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"All possible devices: laptop, tablets, mobile, etc."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Do users have to be signed in?","link":{"type":"url","url":"#do-users-have-to-be-signed-in"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Anyone can search for listings and browse details but users need to logged in to make a booking."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Summary","link":{"type":"url","url":"#summary"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"From the above, we can gather that the most important aspects of the website are:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Search engine optimization"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Travel sites should aim to rank high on search engines since organic search is one of the primary discovery mechanisms."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Performance is known to affect conversions. For websites where the aim is to get customers to make purchases, performance is very important."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Internationalization"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The users are from many different countries and from various age groups. To capture a larger market, the website should be translated and localized."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Device support"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The site should work well for a variety of devices since the user demographics is very broad."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The requirements and nature of a travel booking website are very similar to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"E-commerce website system design","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/e-commerce-amazon"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", so there is a high degree of overlap between the solutions. In this solution we will cover the unique aspects of travel booking websites which aren't found on e-commerce websites."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Architecture / high-level design","link":{"type":"url","url":"#architecture--high-level-design"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server-side rendering (SSR) or Client-side rendering?","link":{"type":"url","url":"#server-side-rendering-ssr-or-client-side-rendering"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"E-commerce website system design","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/e-commerce-amazon"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", performance and SEO are critical. Hence server-side rendering is a must because of the performance and SEO benefits."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Single-page application (SPA) or Multi-page application (MPA)?","link":{"type":"url","url":"#single-page-application-spa-or-multi-page-application-mpa"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Many travel sites intentionally open the listing details in a new tab/window so as to preserve convenient access to the search results page. Because new pages are often opened, the initial load performance matters more than subsequent navigation performance. The website also doesn't benefit as much from being a single page app architecture as the most commonly navigated pages cannot reuse the app shell and existing client state."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Hence the most important thing is that SSR is being used, whether the site is an SPA or MPA doesn't matter as much and both can be viable depending on how important the subsequent navigation experience is. In the modern web ecosystem, travel websites are one of the few products where an MPA architecture is still viable."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, travel websites have a fair bit of interaction (e.g. changing search filters, interacting with the map, expanding accommodation details, etc.). Using UI frameworks is crucial for writing maintainable client side code. React, Vue, and Angular are top choices for doing so."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For an SSR + interaction-heavy use case, we can leverage universal/isomorphic rendering (or SSR with hydration). In universal rendering, the server renders the full initial HTML but after that, rendering and navigation becomes client-side. JavaScript event handlers are attached to the interactive elements within the HTML (hydration)."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Airbnb is one of the pioneers of building universal/isomorphic apps with the invention of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendr","link":{"type":"url","url":"https://github.com/rendrjs/rendr"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", a library that renders Backbone.js apps on the client and the server. Rendr is no longer being used these days with the rise of React and Next.js. Next.js which is the most popular choice for building universal React-powered web apps that desire server-side rendering with hydration."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What top travel booking sites use","link":{"type":"url","url":"#what-top-travel-booking-sites-use"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Let's take a look at the top travel booking sites in the wild and their rendering choices:"}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"App Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"UI Framework"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Airbnb"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SPA (some routes)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SSR"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Booking.com"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"MPA"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SSR"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Expedia"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"MPA"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SSR"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"TripAdvisor"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SPA (some routes)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SSR"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"All the top travel booking sites in the world use SSR and React!"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" This shows the importance of SSR for travel sites and the dominance of React in the industry. Half of these sites use MPA, probably because using an SPA + SSR combination is additional complexity that might not be worth dealing with."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For simplicity, and since SPAs are covered commonly in other questions, the discussion below assumes that we'll be using an MPA architecture with server-side rendering + hydration due to the need for interactivity after initial load."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"References"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rearchitecting Airbnb's Frontend | Airbnb Engineering Blog","link":{"type":"url","url":"https://medium.com/airbnb-engineering/rearchitecting-airbnbs-frontend-5e213efc24d2"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server Rendering, Code Splitting, and Lazy Loading with React Router v4 | Airbnb Engineering Blog","link":{"type":"url","url":"https://medium.com/airbnb-engineering/server-rendering-code-splitting-and-lazy-loading-with-react-router-v4-bfe596a6af70"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendr: Run your Backbone apps in the browser and Node | Airbnb Engineering Blog","link":{"type":"url","url":"https://medium.com/airbnb-engineering/rendr-run-your-backbone-apps-in-the-browser-and-node-a3481af49312"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Isomorphic JavaScript: The Future of Web Apps | Airbnb Engineering Blog","link":{"type":"url","url":"https://medium.com/airbnb-engineering/isomorphic-javascript-the-future-of-web-apps-10882b7a2ebc"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Breaking the Monolith — Modular redesign of Agoda.com | Agoda Engineering & Design","link":{"type":"url","url":"https://medium.com/agoda-engineering/breaking-the-monolith-f3538d9c3ad6"}}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data model","link":{"type":"url","url":"#data-model"}}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Entity"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Source"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Belongs to"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fields"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Search Params"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User input (Client)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Search/Listing Page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"City/Geolocation/Radius Date Range, Number of People, Amenities, etc."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ListingResults"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Search/Listing Page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"results"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (list of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ListingItem"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s), "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pagination"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (pagination metadata)"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ListingItem"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Search/Listing Page, Details Page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"title"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"price"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"currency"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"image_urls"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"amenities"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (flexible format)"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We have omitted the entities related to payments and addresses since they are covered in "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"E-commerce website system design","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/e-commerce-amazon"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". If the interviewer wants you to focus on the checkout flow as well, do mention those entities."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interface definition (API)","link":{"type":"url","url":"#interface-definition-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We will need the following HTTP APIs:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Search: Fetch accommodation listings given some search/filter parameters. The results are rendered on the map and/or a list view."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Listing details: Fetch the details for an accommodation listing."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reserve: Make a reservation for an accommodation."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Search accommodations","link":{"type":"url","url":"#search-accommodations"}}}]}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Field"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Value"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP Method"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"GET"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Path"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"/search"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Returns a list of accommodations that matches the search query."}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameters","link":{"type":"url","url":"#parameters"}}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameter"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"size"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Number of results per page"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Page number to fetch"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"guests"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Number of staying guests"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"country"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"string"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Country for the user, determines the currency"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Location"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"mixed (see below)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Location of the search"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Date Range"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"mixed (see below)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Date range to occupy the accommodation"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Amenities"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"mixed (see below)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Amenities criteria"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Location"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The exact format of the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"location"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" field depends on the business requirements. But in general, we need to tell the server the desired boundary so that results within the boundary will be shown. There are two common ways to represent boundaries: (1) Center position + radius, (2) Boundary coordinates."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Center position + radius"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". The radius can be in miles/km and the center position can be either of:"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Free text search"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This is any string containing a location e.g. \"San Francisco\", \"New York City\". An external location service will be needed to convert the string into geographic coordinates (via geocoding). Geocoding is preferably done on the server to prevent API abuse."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Geolocation/Coordinates"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This format is useful for map-based UIs where users can pan/zoom the map to search for listings within the area or when users allow the app to access current location to search around them."}}]}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Boundary coordinates"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". For map-based UIs, we can use the coordinates of the 4 corners of the presented map as the boundary area."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It's likely that the search API will have to support both formats if the website has different search UIs:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Landing pages for travel sites usually have a search bar with the compulsory parameters like date range and number of guests. Such UI will need the free text search location format."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Results pages with maps will use the geolocation/boundary coordinates format."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Date Range"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": There are several date range formats to choose from and neither are clear winners:"}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Format"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Example"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pros"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cons"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Array/tuple"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"['2022-12-24', '2022-12-27']"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Short"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Unclear. Has to encoded"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Object"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"{ check_in: '2022-12-24', check_out: '2022-12-27' }"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Clear"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Long. Has to be encoded"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Separate query parameters"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"check_in"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"check_out"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Don't need encoding"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Two query params vs one"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The array format is the least clear out of the three, and the object requires encoding to be used in "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"GET"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", so separate query parameters would be the most recommended."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Amenities"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Putting the query parameters for amenities has the same issues with date range."}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Format"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Example"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pros"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cons"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Object"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"{ breakfast: true, washer: true }"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Clear"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Long. Has to be encoded"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Separate query parameters"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"breakfast"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"washer"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"More readable"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"N query params vs One"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For this case, due to the sheer number of query parameters if each amenity criterion is a separate query parameter, the object format is better because:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Putting each criterion in the query parameter makes the query string really long and the hierarchy is lost."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There's a possibility of query parameter name collision with the non-amenities fields. This can be solved be prefixing all the amenity fields with "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"amenities_"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"amenities_breakfast"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"amenities_washer"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Moreover, some amenities criteria have non-primitive values which will require URL encoding and decoding anyway."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There's no "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"fixed standard on how to encode arrays and objects into the query string of URLs","link":{"type":"url","url":"https://stackoverflow.com/questions/6243051/how-to-pass-an-array-within-a-query-string"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and the format tend to be implementation dependent. The most important thing to note is for a consistent format between the server and the client."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sample response","link":{"type":"url","url":"#sample-response"}}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  // Pagination metadata.\n  \"pagination\": {\n    \"size\": 5,\n    \"page\": 2,\n    \"total_pages\": 15,\n    \"total\": 74\n  },\n  \"results\": [\n    {\n      \"id\": 561602, // Accommodation ID.\n      \"title\": \"Great view in the Mission, 15 mins by bus downtown\",\n      \"images\": [\n        \"https://www.greathotels.com/img/1.jpg\",\n        \"https://www.greathotels.com/img/2.jpg\",\n        \"https://www.greathotels.com/img/3.jpg\",\n        \"https://www.greathotels.com/img/4.jpg\"\n      ],\n      \"rating\": 4.82,\n      \"coordinates\": {\n        \"latitude\": 37.74403,\n        \"longitude\": -122.41755\n      },\n      \"price\": 200,\n      \"currency\": \"USD\"\n    }\n    // ... More accommodation results.\n  ]\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We use offset-based pagination here as opposed to cursor-based pagination because:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Having page numbers is useful for navigating between search results and jumping to specific pages."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accommodations results do not suffer from the stale results issue that much because new listings are not added that quickly/frequently."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It's useful to know how many total results there are."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For a more in-depth comparison between offset-based pagination and cursor-based pagination, refer to the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"News Feed system design article","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/news-feed-facebook"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If infinite scroll is desired, then a cursor-based pagination approach might be required. Offset-based pagination can still be used, but the client will need to go through the trouble of filtering out duplicated results."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fetch accommodation details","link":{"type":"url","url":"#fetch-accommodation-details"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Strictly speaking, if the accommodation details page is always opened in a new tab, then the details data will only ever be needed to be fetched on the server to create the initial HTML; it will not be fetched from the client, so a standalone HTTP API is not needed."}}]}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Field"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Value"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP Method"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"GET"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Path"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"/accommodation/{accommodationId}"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fetches the details of an accommodation listing."}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameters","link":{"type":"url","url":"#parameters-1"}}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameter"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"accommodationId"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"ID of accommodation to be fetched"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"country"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"string"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Country for the user, determines the currency"}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sample response","link":{"type":"url","url":"#sample-response-1"}}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"id\": 561602, // Accommodation ID.\n  \"title\": \"Great view of Brannan Street, 15 mins by bus downtown. Bed and Breakfast provided!\",\n  \"images\": [\n    \"https://www.greathotels.com/img/1.jpg\",\n    \"https://www.greathotels.com/img/2.jpg\",\n    \"https://www.greathotels.com/img/3.jpg\",\n    \"https://www.greathotels.com/img/4.jpg\"\n  ],\n  \"rating\": 4.82,\n  \"coordinates\": {\n    \"latitude\": 37.74403,\n    \"longitude\": -122.41755\n  },\n  \"price\": 200,\n  \"currency\": \"USD\",\n  \"amenities\": {\n    \"breakfast_provided\": true,\n    \"internet\": true,\n    \"washer\": true,\n    \"dryer\": false\n    // Any additional amenities details.\n  },\n  \"house_rules\": \"...\",\n  \"contact_email\": \"...\"\n  // Any additional details.\n}"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Make reservation","link":{"type":"url","url":"#make-reservation"}}}]}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Field"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Value"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP Method"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"POST"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Path"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"/reserve"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reserve an accommodation."}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameters","link":{"type":"url","url":"#parameters-2"}}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameter"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"accommodation_id"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"ID of accommodation to be reserved"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"dates"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"mixed*"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dates to reserve the accommodation"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"payment_details"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"object"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Object containing payment method fields (credit card)"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"* The format of the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"dates"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" field should be consistent with the selected date range format in the search API."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sample response","link":{"type":"url","url":"#sample-response-2"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A reservation object is returned upon successful reservation."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"id\": 456, // Reservation ID.\n  \"total_price\": 400,\n  \"currency\": \"USD\",\n  \"dates\": {\n    \"check_in\": \"2022-12-24\",\n    \"check_out\": \"2022-12-27\"\n  },\n  \"accommodation\": {\n    \"id\": 561602,\n    \"address\": {\n      \"country\": \"US\",\n      \"street_address\": \"888 Brannan Street\",\n      \"city\": \"San Francisco\",\n      \"zip\": \"94103\",\n      \"state\": \"CA\",\n      // ... Other address fields.\n    },\n  }\n  \"payment_details\": {\n    // Only show the last 4 digits.\n    // We shouldn't be storing the credit card number\n    // unencrypted anyway.\n    \"card_last_four_digits\": \"1234\"\n  }\n}"}}],"language":"plain text"}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimizations and deep dive","link":{"type":"url","url":"#optimizations-and-deep-dive"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"To recap, the most important aspects of a travel booking website are: "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"search engine optimization"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"internationalization"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"performance"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", and "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"device support"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Search engine optimization (SEO)","link":{"type":"url","url":"#search-engine-optimization-seo"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bookmarkable search results","link":{"type":"url","url":"#bookmarkable-search-results"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When searching on these travel sites, notice that the search query and filter will be reflected in the URL. If you load the URL in a new window, the same results and search query are shown. Syncing the search query with the URL is an important feature because:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Allows the particular search to be bookmarked, which is a common action users do when doing research for travel."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Other sites like travel blogs to link to the results page of specific search filters (e.g. vacations rentals in San Francisco). This helps to improve the site's SEO and discoverability."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pre-generate pages for popular searches","link":{"type":"url","url":"#pre-generate-pages-for-popular-searches"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When you search for \"Vacation in San Francisco\" in a search engine, you will most likely see results from popular travel sites like Expedia, Airbnb, TripAdvisor, among many others. These pages aren't content articles; they're the site's search results page with some pre-filled filters. How is this accomplished?"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"To improve SEO by appearing relevant to what users are searching, travel sites generate tons of pages for the popular search terms that shows relevant listings for these terms. For example, Airbnb generated dedicated pages for "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Vacation rental apartments in San Francisco\"","link":{"type":"url","url":"https://www.airbnb.com/san-francisco-ca/stays"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Vacation rental apartments in New York","link":{"type":"url","url":"https://www.airbnb.com/new-york-ny/stays"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". To let search engines know about these dedicated pages, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Airbnb has a sitemap page","link":{"type":"url","url":"https://www.airbnb.com/sitemaps/v2"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" just for listing links to their dedicated listing pages. There are thousands or more listings."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Notice that the URLs of these dedicated pages are readable:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Readable URLs: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.airbnb.com/san-francisco-ca/stays","link":{"type":"url","url":"https://www.airbnb.com/san-francisco-ca/stays"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Ugly\" URLs: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.airbnb.com/search?location=123","link":{"type":"url","url":"https://www.airbnb.com/search?location=123"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (where 123 is an internal ID mapping to San Francisco city)"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Having readable URLs helps with SEO rankings, especially if the URL contains the search term itself."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"With this technique, search engines will think that travel sites have many different content pages when in reality they are all rendering the same results page but with different listings. It's great for SEO."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dynamic rendering – serve crawlers different pages","link":{"type":"url","url":"#dynamic-rendering--serve-crawlers-different-pages"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sites can also leverage "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"dynamic rendering","link":{"type":"url","url":"https://developers.google.com/search/docs/crawling-indexing/javascript/dynamic-rendering"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", Dynamic rendering involves using a web server to differentiate between requests made by crawlers and those made by users. When a request is made by a crawler, it is routed to a renderer that generates a version of the content that is optimized for the crawler, such as a static HTML version. Requests made by real users are handled as normal."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dynamic rendering can be done in a different manner as well. For "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Expedia Group's Vrbo","link":{"type":"url","url":"https://medium.com/expedia-group-tech/improving-vrbo-homepage-loading-experience-e4b2207535f4"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", crawlers are served a full page while real users are served only a lightweight page and content above the fold, the rest of the content is loaded async on the client."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Internationalization (i18n)","link":{"type":"url","url":"#internationalization-i18n"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Some of the following is extracted from our "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Quiz Questions","link":{"type":"url","url":"https://www.greatfrontend.com/questions/quiz"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" on "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"internationalization","link":{"type":"url","url":"https://www.greatfrontend.com/questions/quiz/designing-or-developing-for-multilingual-sites"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":":"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Have dedicated pages translated in the supported languages."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Make the language and country selector very prominent (e.g. in the navbar)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For listing details which are contributed by users, add an automatic translation feature so that users visiting country X but don't speak country X's language can understand the listing in their native language."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Set the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"lang"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute on the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"html"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tag (e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<html lang=\"zh-cn\">"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") to tell browsers and search engines the language of the page which helps browsers offer a translation of the page. This is also important for SEO."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Enable locale-specific UI:"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Using the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":":lang()","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/CSS/:lang"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" CSS pseudo-class","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/CSS/:lang"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to change display"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Right-to-left languages"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"CSS Logical Properties","link":{"type":"url","url":"https://web.dev/learn/css/logical-properties/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTML's "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"dir","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"CSS "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"direction: rtl","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/CSS/direction"}}}]}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Consider differences in the length of text in different languages."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Do not concatenate translated strings."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Do not put text in images."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Be mindful of how colors are perceived in different cultures."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance","link":{"type":"url","url":"#performance"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance is known to affect conversions, so for websites where the aim is to get customers to make bookings, performance is important. Performance optimizations have been covered in great detail in the earlier questions, so in this question we will list out the relevant performance optimizations along with blog articles by companies should you want more details."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image optimizations","link":{"type":"url","url":"#image-optimizations"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image carousel"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Photos are widely used on travel websites to showcase how attractive the destination/accommodation is. We have covered implementation of image carousels in the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image Carousel system design article","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/image-carousel"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image preloading/lazy loading"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": One super useful technique is to use JavaScript to have fine-grain control when images load."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Airbnb optimized the image carousel experience in their room listings with a combination of lazy loading and preloading","link":{"type":"url","url":"https://medium.com/airbnb-engineering/building-a-faster-web-experience-with-the-posttask-scheduler-276b83454e91"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" behavior:"}}],"children":[{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Initially, only the first image is loaded (the remaining images will be lazily loaded)."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The second image is preloaded when the user shows possible intent of viewing more images:"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cursor hovers over the image carousel."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Focuses on the \"Next\" button via tabbing."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image carousel comes into view (on mobile devices)."}}]}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If the user does view the second image (which signals high intent to browse even more images), the next three images (3rd to 5th) are preloaded."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As the user clicks \"Next\" again to browse more images, the (n + 3)th image is preloaded."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Other resources: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Yes I'm Lazy | TripAdvisor Engineering and Product Blog","link":{"type":"url","url":"https://www.tripadvisor.com/engineering/yes-im-lazy/"}}}]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/travel-booking-airbnb/airbnb-image-loading.gif"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Airbnb image carousel lazy loading example on mobile"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Responsive images"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Serving the most suitable image for the device."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Images on the Web: Part 1 — Responsive Images | Expedia Group Technology","link":{"type":"url","url":"https://medium.com/expedia-group-tech/images-on-the-web-part-1-responsive-images-5dc0066461bd"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Images on the Web: Part 2 — Implementing responsive images | Expedia Group Technology","link":{"type":"url","url":"https://medium.com/expedia-group-tech/images-on-web-part-2-implementing-responsive-images-ca1d30f533f8"}}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image formats"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"webp"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" format for photos and SVGs for icons where possible."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimizing image sprites for high-density displays with SVG | TripAdvisor Engineering and Product Blog","link":{"type":"url","url":"https://www.tripadvisor.com/engineering/optimizing-image-sprites-for-high-density-displays-with-svg/"}}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Code splitting","link":{"type":"url","url":"#code-splitting"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Expedia's Vrbo prioritizes above-the-fold contents and loads code for it first","link":{"type":"url","url":"https://medium.com/expedia-group-tech/improving-vrbo-homepage-loading-experience-e4b2207535f4"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Page/route-level code splitting to prevent huge JavaScript bundles if using a single-page app architecture."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lazy load UI components that are not shown on initial render: (1) below the fold elements (e.g. footer), (2) elements that only appear after interaction (e.g. popover, modal)."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance monitoring","link":{"type":"url","url":"#performance-monitoring"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use tools like Lighthouse and Web Vitals to profile websites and measure performance."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Airbnb came up with their own "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Page Performance Score","link":{"type":"url","url":"https://medium.com/airbnb-engineering/creating-airbnbs-page-performance-score-5f664be0936"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"defined the metrics which mattered for web performance","link":{"type":"url","url":"https://medium.com/airbnb-engineering/measuring-web-performance-at-airbnb-122da8d3ea3f"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Set up performance budgets that run on CI."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React-specific tips","link":{"type":"url","url":"#react-specific-tips"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React-specific performance optimizations done by Airbnb: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React Performance Fixes on Airbnb Listing Pages | The Airbnb Tech Blog","link":{"type":"url","url":"https://medium.com/airbnb-engineering/recent-web-performance-fixes-on-airbnb-listing-pages-6cd8d93df6f4"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"12 Tips to Improve Client Side Page Performance | Expedia Group Technology","link":{"type":"url","url":"https://medium.com/expedia-group-tech/12-tips-to-improve-client-side-page-performance-88c7bec27933"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bundling optimizations","link":{"type":"url","url":"#bundling-optimizations"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Module federation: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Using Webpack Module Federation to Create an App Shell | Expedia Group Technology","link":{"type":"url","url":"https://medium.com/expedia-group-tech/using-webpack-module-federation-to-share-an-app-shell-7d23633510e"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimizing a Page: Resource Hints, Critical CSS, and Webpack | Expedia Group Technology","link":{"type":"url","url":"https://medium.com/expedia-group-tech/optimize-a-page-resource-hint-critical-css-webpack-c8cc7319fb87"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Virtual list/windowing for long lists with infinite scrolling","link":{"type":"url","url":"#virtual-listwindowing-for-long-lists-with-infinite-scrolling"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use virtual list/windowing for long lists with infinite scrolling. Read more about "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"List Virtualization on patterns.dev","link":{"type":"url","url":"https://www.patterns.dev/posts/virtual-lists/"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Progressive web apps","link":{"type":"url","url":"#progressive-web-apps"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Progressive Web Apps with Service Workers | Booking.com Engineering","link":{"type":"url","url":"https://medium.com/booking-com-development/progressive-web-apps-with-service-workers-887e80abf9ef"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Other performance tips","link":{"type":"url","url":"#other-performance-tips"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When using client-side rendering, split up listing response into multiple payloads so as to show results faster. To quickly show results, the response payload can be split into a few chunks, e.g. returning the first 5 results (or whichever many that are above the fold), then loading the rest of the results on the page after that."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Web Applications: Analyzing Client-Side Performance | Expedia Group Technology","link":{"type":"url","url":"https://medium.com/expedia-group-tech/web-applications-analyzing-client-side-performance-37e9cc4ad86b"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Go Fast or Go Home: The Process of Optimizing for Client Performance","link":{"type":"url","url":"https://medium.com/expedia-group-tech/go-fast-or-go-home-the-process-of-optimizing-for-client-performance-57bb497402e"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Further reading","link":{"type":"url","url":"#further-reading"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What kind of things must you be wary of when designing or developing for multilingual sites?","link":{"type":"url","url":"https://www.greatfrontend.com/questions/quiz/designing-or-developing-for-multilingual-sites"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How do you serve a page with content in multiple languages?","link":{"type":"url","url":"https://www.greatfrontend.com/questions/quiz/how-do-you-serve-a-page-with-content-in-multiple-languages"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Building Airbnb's Internationalization Platform","link":{"type":"url","url":"https://medium.com/airbnb-engineering/building-airbnbs-internationalization-platform-45cf0104b63c"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Adding support for Arabic and Hebrew languages on Airbnb","link":{"type":"url","url":"https://medium.com/airbnb-engineering/adding-support-for-arabic-and-hebrew-languages-on-airbnb-355f35a4e6b7"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Device support","link":{"type":"url","url":"#device-support"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Responsive images"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Serving the most suitable image for the device, as mentioned in the image optimization section above."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Images on the Web: Part 1 — Responsive Images | Expedia Group Technology","link":{"type":"url","url":"https://medium.com/expedia-group-tech/images-on-the-web-part-1-responsive-images-5dc0066461bd"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Images on the Web: Part 2 — Implementing responsive images | Expedia Group Technology","link":{"type":"url","url":"https://medium.com/expedia-group-tech/images-on-web-part-2-implementing-responsive-images-ca1d30f533f8"}}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Device-specific UI"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Showing different UI for different devices, which can involve using a totally different information architecture."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dynamic number of result items in a row and per page depending on device width and height."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since maps are hard to use on smaller devices due to the smaller screen estate, consider not having a map UI at all. Without the map, clients can avoid loading map code and textures entirely on mobile devices."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Airbnb's listings are more app-like on mobile with a floating bottom bar. The listing page also does not open listings on a new page, presumably because it is harder to manage many open tabs on mobile."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Support swiping on image carousels on mobile."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Less aggressive preloading strategy on mobile since mobile data can be more expensive."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interactive elements should be larger on mobile."}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User experience","link":{"type":"url","url":"#user-experience"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Preserving search context","link":{"type":"url","url":"#preserving-search-context"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For most travel sites, clicking on the listings will open the listing details in a new tab. The reason to do so is because users tend to browse multiple listings after narrowing down the search results and opening the listing details in a new page allow users to easily dive into the details of a listing and go back to where they left off if the listing didn't meet their expectations or if they want to see other listings."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The alternative is to open the listing details within a full-screen modal on the same page and shallowly updating the URL (via "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"History.pushState()","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/API/History/pushState"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" similar to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Zillow.com","link":{"type":"url","url":"https://www.zillow.com/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Instagram.com","link":{"type":"url","url":"https://www.instagram.com/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". Dismissing the modal will reveal the search results behind and users can continue browsing the results. The downside of this approach is that it is more complicated to implement and will require more JavaScript on the client since everything is on one single page and the listing details need to be fetched via AJAX."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accessibility","link":{"type":"url","url":"#accessibility"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"alt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags: If there are no descriptions provided for images uploaded by users, it's ok to have empty "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"alt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Expedia Accessibility Guidelines","link":{"type":"url","url":"https://accessibility.expedia.biz/pages/exagindex"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" covers topics like Color, Controls, Keyboard and Input Modalities, Forms, Images, Content Structure, Reading Order and Navigation Order, etc."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Form optimizations","link":{"type":"url","url":"#form-optimizations"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Form optimizations have been covered in detail in "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"E-commerce website system design","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/e-commerce-amazon"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". To recap:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Country-specific address/payment Forms."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimize autofill experience."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Show error messages."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Clear focus states."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Read more about building good "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Payment forms","link":{"type":"url","url":"https://web.dev/learn/forms/payment/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"general form best practices","link":{"type":"url","url":"https://web.dev/payment-and-address-form-best-practices/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" on web.dev."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Other topics","link":{"type":"url","url":"#other-topics"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Map"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Markers which are in close proximity can be "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"clustered together","link":{"type":"url","url":"https://developers.google.com/maps/documentation/javascript/marker-clustering"}}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Whitelabelling"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Building and scaling different travel websites with one codebase | Agoda Engineering & Design","link":{"type":"url","url":"https://medium.com/agoda-engineering/building-and-scaling-different-travel-websites-with-one-codebase-fc6f0202c2e1"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Managing and scaling different white label development and testing environments | Agoda Engineering & Design","link":{"type":"url","url":"https://medium.com/agoda-engineering/managing-and-scaling-different-white-label-development-and-testing-environments-4e90748fcb3b"}}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Testing"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lowering the Noise Floor | TripAdvisor Engineering and Product Blog","link":{"type":"url","url":"https://www.tripadvisor.com/engineering/lowering-the-noise-floor/"}}}]}}]}}],"questionsMarkdown":null,"answerMarkdown":null,"time":"30 mins"},{"title":"Photo Sharing (e.g. Instagram)","difficulty":"Medium","url":"https://www.greatfrontend.com/questions/system-design/photo-sharing-instagram?practice=practice&tab=system-design","questionBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Question"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design a photo sharing application that contains a list of photo posts created by users. Users can create new posts containing photos."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/photo-sharing-instagram/photo-sharing-example.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Real-life examples"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.instagram.com","link":{"type":"url","url":"https://www.instagram.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.flickr.com","link":{"type":"url","url":"https://www.flickr.com/"}}}]}}],"answerBlocks":[{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This application shares many similarities with the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"News Feed system design","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/news-feed-facebook"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" application and the image carousels within the feed post will benefit from the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image Carousel system design","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/image-carousel"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". Please have a read of that question before starting on this. For this question, we will focus on things that haven't been covered, the discussion will be centered around the photos and images."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requirements exploration","link":{"type":"url","url":"#requirements-exploration"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What are the core features to be supported?","link":{"type":"url","url":"#what-are-the-core-features-to-be-supported"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Browse a feed containing image and video posts by people a user follows."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Upload photos, add captions and apply filters to them before posting."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What pagination UX should be used for the feed?","link":{"type":"url","url":"#what-pagination-ux-should-be-used-for-the-feed"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Infinite scrolling, meaning more posts will be added when the user reaches the end of their feed."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Is the user able to add captions to individual photos/images or only one overall caption to the post?","link":{"type":"url","url":"#is-the-user-able-to-add-captions-to-individual-photosimages-or-only-one-overall-caption-to-the-post"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Only one overall caption to the post."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What devices will the application be used on?","link":{"type":"url","url":"#what-devices-will-the-application-be-used-on"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Primarily mobile, but should be usable on desktop and tablet as well."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Architecture / high-level design","link":{"type":"url","url":"#architecture--high-level-design"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering approach","link":{"type":"url","url":"#rendering-approach"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Photo sharing applications have the following characteristics:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Posts are viewable by non-logged in users."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Posts are searchable via search engines."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Application is interaction heavy due to post composing and liking/commenting functionality on posts."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fast initial loading speed is desired."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These are also characteristics of a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"News Feed system design","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/news-feed-facebook"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" where there's a good amount of static content which also require interaction. Hence a combination of server-side rendering with hydration and subsequent client-side rendering would be ideal. In reality, instagram.com is built using the same technology stack as facebook.com which uses React server-side rendering with hydration."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Architecture diagram","link":{"type":"url","url":"#architecture-diagram"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/photo-sharing-instagram/photo-sharing-architecture.png"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Provides HTTP APIs to fetch feed posts, upload images, and to create new image posts."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Controller"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Controls the flow of data within the application and makes network requests to the server."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client store"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Stores data needed across the whole application. In the context of a photo sharing application, most of the data in the store will be server-originated data needed by the feed UI."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed UI"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Contains a list of image posts and the UI for creating new posts."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image post"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A post containing a list of one to many images."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Post composer"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": UI for uploading images, applying filters to them and adding a caption before submitting to the server."}}]}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data model","link":{"type":"url","url":"#data-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A photo feed shows a list of image posts fetched from the server, hence most of the data involved in the application will be server-originated data. The only client-side data needed is for user-uploaded images and user-written captions in the post composer."}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Entity"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Source"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Belongs to"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fields"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Feed"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed UI"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"posts"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (list of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Post"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s), "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pagination"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (pagination metadata)"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Post"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed Post"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"id"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"created_time"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"caption"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"image"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"author"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"User"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"), "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"images"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"User"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client store"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"id"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"name"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"profile_photo_url"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"NewPost"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User input (Client)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Post composer UI"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"caption"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"images"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Image"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Image"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server/client"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Multiple"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"url"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"alt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"width"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"height"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Just like in the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"News Feed system design","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/news-feed-facebook"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", a normalized client-side store will also be useful for a Photo Sharing application."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interface definition (API)","link":{"type":"url","url":"#interface-definition-api"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed list API","link":{"type":"url","url":"#feed-list-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"News Feed's","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/news-feed-facebook"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" list API, the photo sharing application's feed list API should also use a "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"cursor-based pagination approach"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Post creation API","link":{"type":"url","url":"#post-creation-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"All posts in a photo sharing application has attached images. Hence the post creation process in such apps is more complex."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Let's break down the post creation into steps:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User selects photos from their device."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User is able to perform light edits on their photos: resize/crop/filter."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User adds a caption to the post."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User submits post."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are two common ways to implement post creation functionality involving images:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Create a single API for both image uploading and post creation."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Create separate APIs for image uploading and post creation."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"1. Create a single API for both image uploading and post creation","link":{"type":"url","url":"#1-create-a-single-api-for-both-image-uploading-and-post-creation"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/photo-sharing-instagram/photo-sharing-api-single.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pros:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Simple to implement, upload all required data in one request."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cons:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"API logic is more complex because it has to do multiple things on the back end (though that's not really a concern of the front end)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Upload will take longer because the post images have to be uploaded within one request."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"API has to take in both text-based data and media data."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2. Create separate APIs for image uploading and post creation","link":{"type":"url","url":"#2-create-separate-apis-for-image-uploading-and-post-creation"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/photo-sharing-instagram/photo-sharing-api-separate.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pros:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image upload stage can be done in a an async fashion. Images can be uploaded after the image editing stage in the background while the user is drafting the post caption."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Images can be uploaded in parallel across multiple HTTP requests which is faster than uploading all the images in a single HTTP request which will take longer."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Can leverage existing general image uploading APIs, if any."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cons:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"More coordination needed in the client. The client needs to wait for all the images to be uploaded and get a reference to the uploaded images and use them when creating the post."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Comparing the two approaches, approach #2 of separate APIs would be better. The image uploading API can be a general one that is used across the entire website and not just for the post creation flow."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimizations and deep dive","link":{"type":"url","url":"#optimizations-and-deep-dive"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed optimizations","link":{"type":"url","url":"#feed-optimizations"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These optimizations done in "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"News Feed system design","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/news-feed-facebook"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" also apply to the feed of photo sharing applications."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering approach"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Infinite scrolling implementation"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Virtualized lists"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Code splitting JavaScript"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Loading indicators"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Preserving feed scroll position"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lazy load code"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimistic updates"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Timestamp rendering"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Icon rendering"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image carousel optimizations","link":{"type":"url","url":"#image-carousel-optimizations"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The images within a post are shown as a carousel, so the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image Carousel system design article","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/image-carousel"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is also useful for this question and the same optimizations apply."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering images","link":{"type":"url","url":"#rendering-images"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use modern image formats such as "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WebP","link":{"type":"url","url":"https://developers.google.com/speed/webp"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" which provides superior lossless and lossy image compression."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s should use proper "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"alt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" text."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Instagram allows users to provide "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"alt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" text for each image. If the user doesn't specify the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"alt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" text, Machine Learning and Computer Vision techniques can be used to process the images and generate a description."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image loading based on device screen properties"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Send the browser dimensions in the initial request (or subsequent is also fine) and server can decide what image size to return."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"srcset"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" if there are image processing (resizing) capabilities to load the most suitable image file for the current viewport."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Adaptive image loading based on network speed"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Devices with good internet connectivity/on WiFi"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Prefetch offscreen images that are not in the viewport yet but about to enter viewport."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Poor internet connection"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Render a low-resolution placeholder image and require users to explicitly click on them to load the high-resolution image."}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image editing","link":{"type":"url","url":"#image-editing"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cropping and resizing","link":{"type":"url","url":"#cropping-and-resizing"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cropping and resizing of the images can be done via HTML5' "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<canvas>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"const canvas = document.getElementById('image-editor');\nconst context = canvas.getContext('2d');\nconst image = new Image();\nimage.src = 'https://greatimages.com/example.jpg';\ncontext.drawImage(image /* Other parameters */);"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Instagram website allows editing by simulating the result with inline styles to modify the transform styling and positioning of the image."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Filters","link":{"type":"url","url":"#filters"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"CSS provides a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"filter","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/CSS/filter"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" property which allows applying filter functions like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"blur"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contrast"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"hue"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"sepia"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to name a few. By using a combination of these filter functions, you can achieve Instagram-like filtering functionalities right within your browser."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Here are examples of filter functions to achieve the Clarendon and Gingham filter effects from Instagram, taken from the awesome "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Instagram.css","link":{"type":"url","url":"https://picturepan2.github.io/instagram.css/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":".filter-1977 {\n  filter: sepia(0.5) hue-rotate(-30deg) saturate(1.4);\n}\n\n\n.filter-brannan {\n  filter: sepia(0.4) contrast(1.25) brightness(1.1) saturate(0.9) hue-rotate(-2deg);\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The following images are enhanced right within your browser using these CSS filters."}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Original"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"1977"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Brannan"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[],[],[]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Ultimately, the final image still has to be converted into an image blob before sending to the server and this conversion can be done with libraries like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"html2canvas","link":{"type":"url","url":"https://github.com/niklasvh/html2canvas"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accessibility (a11y)","link":{"type":"url","url":"#accessibility-a11y"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Screen readers","link":{"type":"url","url":"#screen-readers"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags should have a meaningful "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"alt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" description specified or use an empty string."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Add "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-label"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s to the prev/next buttons within an image carousel."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Icon-only buttons should have the appropriate "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-label"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s if there are no accompanying labels (e.g. heart, share, bookmark)."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard support","link":{"type":"url","url":"#keyboard-support"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<button>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" HTML tag for the Prev/Next buttons where possible so that the buttons are focusable."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Add "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<div role=\"region\" aria-label=\"Image Carousel\" tabindex=\"0\">"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to make the carousel focusable and attach Left/Right keydown handlers to allow scrolling through the images with the keyboard."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"References","link":{"type":"url","url":"#references"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Making Instagram.com faster: Part 1","link":{"type":"url","url":"https://instagram-engineering.com/making-instagram-com-faster-part-1-62cc0c327538"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Making Instagram.com faster: Part 2","link":{"type":"url","url":"https://instagram-engineering.com/making-instagram-com-faster-part-2-f350c8fba0d4"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Making Instagram.com faster: Part 3 — cache first","link":{"type":"url","url":"https://instagram-engineering.com/making-instagram-com-faster-part-3-cache-first-6f3f130b9669"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Making instagram.com faster: Code size and execution optimizations (Part 4)","link":{"type":"url","url":"https://instagram-engineering.com/making-instagram-com-faster-code-size-and-execution-optimizations-part-4-57668be796a8"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Launching Instagram Messaging on desktop","link":{"type":"url","url":"https://about.instagram.com/blog/engineering/launching-instagram-messaging-on-desktop"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Crafting an Accessible Instagram Feed","link":{"type":"url","url":"https://about.instagram.com/blog/engineering/crafting-an-accessible-instagram-feed"}}}]}}],"questionsMarkdown":null,"answerMarkdown":null,"time":"30 mins"},{"title":"Dropdown Menu","difficulty":"Medium","url":"https://www.greatfrontend.com/questions/system-design/dropdown-menu?practice=practice&tab=system-design","questionBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Companies"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Google ByteDance"}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Question"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design a dropdown menu component that can reveal a menu containing a list of actions."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/dropdown-menu/dropdown-menu-example.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Real-life examples"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dropdowns · Bootstrap v5.3","link":{"type":"url","url":"https://getbootstrap.com/docs/5.3/components/dropdowns"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React Menu component - Material UI","link":{"type":"url","url":"https://mui.com/material-ui/react-menu/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dropdown Menu — Radix UI","link":{"type":"url","url":"https://www.radix-ui.com/docs/primitives/components/dropdown-menu"}}}]}}],"answerBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requirements exploration","link":{"type":"url","url":"#requirements-exploration"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Can there be multiple dropdown menus open at once?","link":{"type":"url","url":"#can-there-be-multiple-dropdown-menus-open-at-once"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Yes, there can be."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What contents will the menu contain?","link":{"type":"url","url":"#what-contents-will-the-menu-contain"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Only text, no focusable elements."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Is there a maximum number of items allowed in the menu?","link":{"type":"url","url":"#is-there-a-maximum-number-of-items-allowed-in-the-menu"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There's no fixed maximum, but preferably, there should not be more than 20 items for better user experience."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What amount of flexibility does the user have in customizing the design?","link":{"type":"url","url":"#what-amount-of-flexibility-does-the-user-have-in-customizing-the-design"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Users should be able to customize colors, fonts, padding, etc to match their branding."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What devices will this component be used on?","link":{"type":"url","url":"#what-devices-will-this-component-be-used-on"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"All devices — mobile, tablet, desktop."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Architecture / high-level design","link":{"type":"url","url":"#architecture--high-level-design"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"An example usage of the dropdown menu in React, with event handlers omitted."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<DropdownMenu>\n  <DropdownMenu.Button>Actions</DropdownMenu.Button>\n  <DropdownMenu.List>\n    <DropdownMenu.Item>New File</DropdownMenu.Item>\n    <DropdownMenu.Item>Save</DropdownMenu.Item>\n    <DropdownMenu.Item>Delete</DropdownMenu.Item>\n  </DropdownMenu.List>\n</DropdownMenu>"}}],"language":"plain text"}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Component"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Role"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dropdown Menu ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DropdownMenu"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Root component, coordinates events between the inner components."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Menu Button ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DropdownMenu.Button"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Button that toggles the display state of the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DropdownMenu.List"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Menu List ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DropdownMenu.List"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Contains the list of items."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Menu List Item ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DropdownMenu.Item"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Individual list items."}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In React, components can communicate with its parents using context or props. We choose to use context here since we are using a composition model here and passing props is inconvenient. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<DropdownMenu>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" should contain a context provider that provides the state values (see Data Model section) to all its child components."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data model","link":{"type":"url","url":"#data-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note that for designing components, it might make sense to design the interface/API first or both data model and API concurrently. It depends on the component at hand. Feel free to jump between the two sections."}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"State"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"isOpen"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"boolean"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Whether the menu is currently open or closed."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"activeItem"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"string"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Menu item that is focused. The reason we need this is that hovering over menu items will change the active item. By keeping track of this value in state, we can respond to keyboard interactions, either focusing on the prev/next item or activating it."}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These state values are housed within "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<DropdownMenu>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and provided to all components via React context."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"See below for configuration options which are also part of the data model."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interface definition (API)","link":{"type":"url","url":"#interface-definition-api"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"General props","link":{"type":"url","url":"#general-props"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These props apply to most of the components."}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Prop"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"children"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"React.Node"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Children of the component. If using TypeScript/Flow, you can enforce specific components to be used as "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"children"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"as"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"string | Component"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In case there is a need to customize the underlying DOM element/component."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"className"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"string"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Classnames to add to components in case further visual customization is needed. May or may not be needed depending on theming approach."}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DropdownMenu","link":{"type":"url","url":"#dropdownmenu"}}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Prop"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"isInitiallyOpen"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"boolean"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Whether the menu is initially open or closed."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"size"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"string"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Prop to customize size. Needed only if customization is desired."}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DropdownMenu.Button","link":{"type":"url","url":"#dropdownmenubutton"}}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Prop"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"onClick"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"function"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Although the opening/closing will be handled within "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DropdownMenu"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", exposing an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"onClick"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" prop is useful if additional logic needs to be performed (e.g. analytics logging)"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Other "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"button"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" props"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"*"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since this component is usually a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<button>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", it should also allow other props that "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<button>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s expect, such as "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"disabled"}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DropdownMenu.List","link":{"type":"url","url":"#dropdownmenulist"}}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Prop"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"maxHeight"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"number | undefined"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Max height of the menu list. There should be a sensible default of around 200-300px."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"position"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"string"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Position of the list relative to the button."}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DropdownMenu.Item","link":{"type":"url","url":"#dropdownmenuitem"}}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Prop"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"onClick"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"function"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Triggered when item is activated. Possible responses include navigating to another page."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"disabled"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"boolean"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Whether the item is disabled. Disabled items cannot be activated and optionally skipped when interacting with menu using a keyboard."}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Customizing Appearance","link":{"type":"url","url":"#customizing-appearance"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Designing good APIs for customizing UI components can be found in the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Front End Interview Guidebook's UI Components API Design Principles Section","link":{"type":"url","url":"https://www.greatfrontend.com/front-end-interview-guidebook/user-interface-components-api-design-principles"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimizations and deep dive","link":{"type":"url","url":"#optimizations-and-deep-dive"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering","link":{"type":"url","url":"#rendering"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering the dropdown menu can be quite tricky due to the menu being \"floating\" and not exactly following the normal flow of page elements."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Layout","link":{"type":"url","url":"#layout"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are two common ways to render the dropdown menu near the button. We've provided minimal code samples for each layout approach."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Relative to Button"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In this approach, we wrap a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<div>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" with "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"position: relative"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" around the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<button>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and the menu. The menu is using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"position: absolute"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" which makes it positioned relative to its closest positioned ancestor, which is the root "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<div>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dropdown menu which is relative to the button trigger","link":{"type":"url","url":"https://codesandbox.io/embed/dropdown-menu-relative-button-emxn9u?fontsize=14&hidenavigation=1&theme=dark&module=/src/App.js,/src/styles.css&view=split"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This method is straightforward and does not require much calculation of elements and their positions to the page, but parent containers with "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"overflow: hidden"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" can possibly clip the menu and its contents, or there could be "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"z-index"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" issues."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This approach is used by "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Headless UI","link":{"type":"url","url":"https://headlessui.com/react/menu"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bootstrap","link":{"type":"url","url":"https://getbootstrap.com/docs/5.3/components/dropdowns/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Relative to Page"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In this approach, the menu is rendered as a direct child of the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<body>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and positioned "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"absolute"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"-ly to the "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"page"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" by getting the element's "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"offsetTop"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"offsetLeft"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to get the coordinates of the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<button>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" relative to the page and adding its height ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"offsetHeight"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") to get the final Y position to render the menu."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In React, this can be done using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React Portals","link":{"type":"url","url":"https://beta.reactjs.org/reference/react-dom/createPortal"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", which lets you render outside the DOM hierarchy of the parent component. A typical use case for portals is when a parent component has an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"overflow: hidden"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" or "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"z-index"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" style, but you need the child to visually \"break out\" of its container. Common examples include dropdown menus, tooltips, modals."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dropdown menu which is relative to page, implemented using React Portal","link":{"type":"url","url":"https://codesandbox.io/embed/dropdown-menu-relative-page-r4zoiu\n?fontsize=14&hidenavigation=1&theme=dark&module=/src/App.js,/src/styles.css&view=split"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The downside of this approach is that if the window is resized or if contents of the page changes such that the height of the page is shorter than when the menu was first shown, the menu's position will be incorrect. As a workaround, you can watch the window for height changes and re-render the menu with the correct position."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This approach is used by "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Radix UI","link":{"type":"url","url":"https://www.radix-ui.com/docs/primitives/components/dropdown-menu"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reach UI","link":{"type":"url","url":"https://reach.tech/menu-button"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Position","link":{"type":"url","url":"#position"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The component can also allow customization of alignment, in all directions around the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<button>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". Examples of left/right-aligned menu lists can be found in the example below. Supporting more alignments is a matter of finding the right values for "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"top"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"left"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"right"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"bottom"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/CSS translations to use."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dropdown Menu Positions","link":{"type":"url","url":"https://codesandbox.io/embed/dropdown-menu-relative-button-emxn9u?fontsize=14&hidenavigation=1&theme=dark&module=/src/App.js,/src/styles.css&view=split"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Maximum height","link":{"type":"url","url":"#maximum-height"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since there is no maximum allowable number of items in the menu, we can set a default maximum height for the menu such that the excess items can be accessed by scrolling within the menu. This height can also be customized."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering in HTML or JavaScript","link":{"type":"url","url":"#rendering-in-html-or-javascript"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The dropdown menu can either be :"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendered into the HTML like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bootstrap's Dropdowns","link":{"type":"url","url":"https://getbootstrap.com/docs/5.3/components/dropdowns/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". The menu is initially hidden from view via "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"display: none"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" / "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"opacity: 0"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" / "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"hidden"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute, and those styles are toggled when the menu is to be shown."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendered on the fly via JavaScript after the menu button is activated."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The pros of rendering in the HTML first is better runtime performance due to fewer DOM operations needed to show the menu. The downside is that the HTML can be unnecessarily bloated especially if the user never interacts with the dropdown menu at all. Since the menu items usually don't contribute towards SEO and there likely won't be that many elements, the benefits of rendering the menu beforehand in HTML are relatively minor."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Automatic flipping when near the edge","link":{"type":"url","url":"#automatic-flipping-when-near-the-edge"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Smart dropdown menus will know its position relative to the viewport and can flip itself when there is insufficient space to display the full menu in its current position. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reach UI's Menu","link":{"type":"url","url":"https://reach.tech/menu-button"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" has autoflipping implemented."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optionally, scrolling can be disabled on the window when a menu is open (by adding "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"overflow: hidden"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<body>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"). This limits the user experience but avoids the need for automatic flipping which can be complicated to implement. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Material UI's Menu","link":{"type":"url","url":"https://mui.com/material-ui/react-menu"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" component takes this approach."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/dropdown-menu/dropdown-menu-autoflip.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The core idea here is to know how tall the menu will be and autoflip when the bottom of the menu will exceed the viewport's height."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Viewport height"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"window.innerHeight"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Position of menu's bottom edge"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": which is a combination of:"}}],"children":[{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Button position relative to viewport ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"buttonEl.getBoundingClientRect().y"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Button height ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"buttonEl.getBoundingClientRect().height"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Menu height ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"menuEl.getBoundingClientRect().height"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Spacing between button and menu"}}]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Here's an example on how to implement the menu autoflipping behavior in React. Make sure to make the preview height short enough in order to see the autoflipping in action."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dropdown Menu Autoflipping","link":{"type":"url","url":"https://codesandbox.io/embed/dropdown-menu-autoflip-ybqbeu?fontsize=14&hidenavigation=1&theme=dark&module=/src/App.js,/src/styles.css&view=split"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accessibility (a11y)","link":{"type":"url","url":"#accessibility-a11y"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mouse Interactions","link":{"type":"url","url":"#mouse-interactions"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Clicking on the button toggles the display state of the menu. Clicking outside an open menu will close that menu. We have to ensure that clicks within the menu do not close it."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pseudocode for how to implement close on click outside behavior based on the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React hook ","link":{"type":"url","url":"https://usehooks.com/useOnClickOutside/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"useOnClickOutside","link":{"type":"url","url":"https://usehooks.com/useOnClickOutside/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":":"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"function clickListener(event) {\n  // No-op if clicked element is button or a\n  // descendant of the menu.\n  if (\n    $buttonElement.contains(event.target) ||\n    $menuElement.contains(event.target)\n  ) {\n    return;\n  }\n\n\n  closeMenu();\n}\n\n\ndocument.addEventListener('mousedown', clickListener);\ndocument.addEventListener('touchstart', clickListener);"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Remember to remove the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"clickListener"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s when the menu is closed."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Here's how to implement click outside to dismiss behavior in React:"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"dropdown-menu-click-outside-lq040x","link":{"type":"url","url":"https://codesandbox.io/embed/dropdown-menu-click-outside-lq040x?fontsize=14&hidenavigation=1&theme=dark&module=/src/App.js,/src/styles.css&view=split"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Focus management","link":{"type":"url","url":"#focus-management"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When the menu is open, focus is trapped and pressing "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Tab"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" shouldn't shift focus on another element. When the menu is closed, focus returns to the button."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard interactions","link":{"type":"url","url":"#keyboard-interactions"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are two WAI-ARIA patterns to follow: the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Menu Button pattern","link":{"type":"url","url":"https://www.w3.org/WAI/ARIA/apg/patterns/menubutton/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Menu pattern","link":{"type":"url","url":"https://www.w3.org/WAI/ARIA/apg/patterns/menubar/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". The latter is needed after the menu is open."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Button"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When the focus is on the button:"}}]}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Key"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Enter"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Opens the menu and places focus on the first menu item."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Space"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Opens the menu and places focus on the first menu item."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ArrowDown"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (Optional)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Opens the menu and moves focus on the first menu item."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ArrowUp"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (Optional)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Opens the menu and moves focus on the last menu item."}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Menu"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When the focus is on the menu items:"}}]}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Key"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Enter"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Activates the item and closes the menu."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Space"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (Optional)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Activates the item and closes the menu."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ArrowDown"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Moves focus to the next item, optionally wrapping from the last to the first."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ArrowUp"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Moves focus to the previous item, optionally wrapping from the first to the last."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Home"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If arrow key wrapping is not supported, moves focus to the first item."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"End"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If arrow key wrapping is not supported, moves focus to the last item."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Esc"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Closes the menu that contains focus and returns focus to the button."}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WAI-ARIA roles, states, and properties","link":{"type":"url","url":"#wai-aria-roles-states-and-properties"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Button"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The element that opens the menu has role "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"button"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The element with role "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"button"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" has "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-haspopup"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" set to either "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"menu"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" or "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"true"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When the menu is displayed, the element with role button has "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-expanded"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" set to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"true"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". When the menu is hidden, it is recommended that "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-expanded"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is not present. If "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-expanded"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is specified when the menu is hidden, it is set to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"false"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The element that contains the menu items displayed by activating the button has role "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"menu"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optionally, the element with role button has a value specified for "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-controls"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" that refers to the element with role "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"menu"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Menu/Menuitems"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The element serving as the menu has a role of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"menu"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The items contained in a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"menu"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" are child elements of the containing menu and have the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"menuitem"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" role. menuitem"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When a menu item is disabled, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-disabled"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is set to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"true"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"An element with role "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"menu"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" either has:"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-labelledby"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" set to a value that refers to the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"menuitem"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" or "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"button"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" that controls its display."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A label provided by "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-label"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Internationalization (i18n)","link":{"type":"url","url":"#internationalization-i18n"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since all user-facing strings are provided by the user, strings can be displayed as-is. However, do note that some strings can be long in certain languages, so overflowing text should either be truncated or wrapped. Text shouldn't overflow out of the menu/button."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For RTL languages, the menu button and contents have to be horizontally flipped. To achieve this, the menu component can take in a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"direction"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" config option/prop and render contents depending on the value."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/dropdown-menu/dropdown-menu-rtl.png"}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"References","link":{"type":"url","url":"#references"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Themed Examples"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dropdowns · Bootstrap v5.3","link":{"type":"url","url":"https://getbootstrap.com/docs/5.3/components/dropdowns"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React Menu component - Material UI","link":{"type":"url","url":"https://mui.com/material-ui/react-menu/"}}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Headless Examples"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dropdown Menu — Radix UI","link":{"type":"url","url":"https://www.radix-ui.com/docs/primitives/components/dropdown-menu"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Menu Button — Reach UI","link":{"type":"url","url":"https://reach.tech/menu-button"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Menu (Dropdown) - Headless UI","link":{"type":"url","url":"https://headlessui.com/react/menu"}}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Aria Authoring Practices Guide (APG)"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Menu Button Pattern","link":{"type":"url","url":"https://www.w3.org/WAI/ARIA/apg/patterns/menubutton/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Menu Pattern","link":{"type":"url","url":"https://www.w3.org/WAI/ARIA/apg/patterns/menu/"}}}]}}]}}],"questionsMarkdown":null,"answerMarkdown":null,"time":"30 mins"},{"title":"Image Carousel","difficulty":"Medium","url":"https://www.greatfrontend.com/questions/system-design/image-carousel?practice=practice&tab=system-design","questionBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Companies"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Amazon Dropbox Google Microsoft"}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Question"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design an image carousel component that displays a list of images one at a time, allowing the user to browse through them with pagination buttons."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/image-carousel/image-carousel-example.png"}}]}}],"answerBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requirements exploration","link":{"type":"url","url":"#requirements-exploration"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How are the images specified?","link":{"type":"url","url":"#how-are-the-images-specified"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It will be a configuration option on the component and the list of images have to be specified before initializing the component."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What devices should the component support?","link":{"type":"url","url":"#what-devices-should-the-component-support"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Desktop, tablet, and mobile."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How will the pagination buttons behave when the user is at the start/end of the image list?","link":{"type":"url","url":"#how-will-the-pagination-buttons-behave-when-the-user-is-at-the-startend-of-the-image-list"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It should cycle through infinitely."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Will there be animation when transitioning between images?","link":{"type":"url","url":"#will-there-be-animation-when-transitioning-between-images"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Yes the images should animate with horizontal translation."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Architecture / high-level design","link":{"type":"url","url":"#architecture--high-level-design"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since this component doesn't need any server data, our architecture will just consist of the client side components."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/image-carousel/image-carousel-architecture.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Component responsibilities","link":{"type":"url","url":"#component-responsibilities"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"ViewModel + Model"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The brain of the component, holds the configuration and state of the component, orchestrates events between the components and informs the \"Image\" component which image to render."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Displays the currently selected image."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Prev/Next Buttons"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Tells the \"ViewModel\" to change to the prev/next image depending on which button is clicked."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Progress Dots"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Tells the \"ViewModel\" which image to show when the respective dot/page is being clicked/selected."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There's no need to separate the \"Model\" and the \"ViewModel\" in this component because it's a small component."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Flux architecture","link":{"type":"url","url":"#flux-architecture"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Flux","link":{"type":"url","url":"https://facebook.github.io/flux/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Redux","link":{"type":"url","url":"https://redux.js.org/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reducer","link":{"type":"url","url":"https://beta.reactjs.org/learn/scaling-up-with-reducer-and-context"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"-like architecture is recommended to abstract away the action sources from the action logic/implementation. Some actions can be triggered by interacting with various UI elements, periodically by a timer, or keypresses."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data model","link":{"type":"url","url":"#data-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Only the \"ViewModel\" will hold any state and data, the other components are part of the view and won't hold data. It can contain the following fields:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Configuration"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"List of images, which includes both the image URL and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"alt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" value, if provided."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Transition duration."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Size: Height and width of the image."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"State"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Index of current image. This value can be modified by the interactive elements (Prev/Next buttons, Progress Dots)."}}]}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interface definition (API)","link":{"type":"url","url":"#interface-definition-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since we're talking about designing a UI component here, API will focus on the external API of the components: what configuration options are provided so that developers can use the component in a customized fashion."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Basic API","link":{"type":"url","url":"#basic-api"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"List of images"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": An array of image URLs to be displayed within the carousel with any associated metadata (optional but good to have)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Transition duration (ms)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Duration for the translation animation during image transitions."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Height (px)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Height of the image."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Width (px)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Width of the image."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"An example of an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ImageCarousel"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" component defined in React:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<ImageCarousel\n  images={[\n    { src: 'https://example.com/images/foo.jpg', alt: 'A foo' },\n    { src: 'https://example.com/images/bar.jpg', alt: 'A bar' },\n    /* More images if desired. */\n  ]}\n  transitionDuration={300}\n  height={500}\n  width={800}\n/>"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Advanced API","link":{"type":"url","url":"#advanced-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These are non-essential APIs but worth a discussion if there's time."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Autoplay"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Whether the carousel will automatically progress to the next image after some time."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A timer state value will be needed to keep incrementing the image."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The timer should be cancelled/reset if the current image was manually changed by the user (either through Prev/Next buttons or Progress dots)."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Delay"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Delay between transitions. Only needed if the carousel is in autoplay mode."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Event listeners"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": It'd be useful to add event listeners to buttons of the component so that developers can implement their own extra functionality (e.g. logging user interactions)"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"onLoad"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": When the first image is done loading and shown in the carousel."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"onPageSelect"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": When a page is selected."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"onNextClick"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": When the next image button is triggered."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"onPrevClick"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": When the prev image button is triggered."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Theming"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": See "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Front End Interview Guidebook's UI Components API Design Principles Section","link":{"type":"url","url":"https://www.greatfrontend.com/front-end-interview-guidebook/user-interface-components-api-design-principles"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Loop"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Enable a looping behavior where clicking on \"Next\" button while the last image is presented returns to the first and clicking on \"Prev\" button while the first image is presented shows the last image."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Internal API","link":{"type":"url","url":"#internal-api"}}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"API"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Source"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"prevImage()"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Prev Button / Keyboard events"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Shows the previous image"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"nextImage()"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Next Button / Keyboard events / Timer (if autoplay)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Shows the next image"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"showImage(index)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Progress Dots"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Skips to a specific image"}}]]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These behaviors are encapsulated within APIs because they can be called from multiple places (UI elements, timers) and can contain a fair amount of logic depending on whether looping behavior is turned on."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"prevImage()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"nextImage()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" can call "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"showImage(index)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" internally."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These internal APIs can be implemented as Flux/Redux actions if using a Flux/Redux architecture."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimizations and deep dive","link":{"type":"url","url":"#optimizations-and-deep-dive"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Layout implementation","link":{"type":"url","url":"#layout-implementation"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Images","link":{"type":"url","url":"#images"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A simple version to achieve the layout is to use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"display: flex"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to make the images render in a horizontal row and programatically change the horizontal scroll offset to show the various images."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"You can draw out such a diagram on the whiteboard to illustrate the layout:"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/image-carousel/image-carousel-layout.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The box with the black border indicates the currently visible window."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sample Code"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<div class=\"carousel-images\">\n  <img class=\"carousel-image\" alt=\"...\" src=\"...\" />\n  <img class=\"carousel-image\" alt=\"...\" src=\"...\" />\n  <img class=\"carousel-image\" alt=\"...\" src=\"...\" />\n  <!-- More images -->\n</div>"}}],"language":"plain text"}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":".carousel-images {\n  display: flex;\n  height: 400px;\n  width: 600px;\n  overflow: hidden;\n}\n\n\n.carousel-image {\n  height: 400px;\n  width: 600px;\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"To scroll to a particular image smoothly, we can do:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"document.querySelector('.carousel-images').scrollTo({\n  left: selectedIndex * 600,\n  behavior: 'smooth',\n});"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fitting Images","link":{"type":"url","url":"#fitting-images"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The layout above assumes that all the images are of the same size. However, it is unlikely that the user will provide images that are of that exact size."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Here are a few ways we can get around this:"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"CSS "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"background-size"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This requires a change in the HTML to render the image using CSS "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"background"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"background-image"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" instead of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img src=\"...\">"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". The advantage of this is that we can use the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"background-size"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" property that has these two modes:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contain"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Scales the image as large as possible within its container without cropping or stretching the image. If the container is larger than the image, this will result in image tiling, unless the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"background-repeat"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" property is set to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"no-repeat"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"cover"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Scales the image (while preserving its ratio) to the smallest possible size to fill the container (that is: both its height and width completely cover the container), leaving no empty space. If the proportions of the background differ from the element, the image is cropped either vertically or horizontally."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Source: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"background-size - CSS: Cascading Style Sheets | MDN","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/CSS/background-size"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Both advantages has its merits and which to use really depends on the provided images. One way is to allow the developer to customize whether to use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contain"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" or "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"cover"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" for all the images or even allowing customizing this setting for individual images."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"CSS "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"object-fit"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": CSS "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"object-fit"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is a feature that is similar to how "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"background-size"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" works for "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"background-image"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s, but for "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" HTML tags. It has "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contain"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"cover"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" properties as well which work the same way as "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"background-size"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"'s version."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This way is preferred since it's more semantic to use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags than "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<div>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s with "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"background-image"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Vertically-center buttons","link":{"type":"url","url":"#vertically-center-buttons"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"To vertically center the buttons, we can use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"position: absolute"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" on the buttons along with some "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"transform: translateY(-50%)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to shift it up by half its height."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<div class=\"carousel-image-container\">\n  <div class=\"carousel-images\">\n    <img class=\"carousel-image\" alt=\"...\" src=\"...\" />\n    <img class=\"carousel-image\" alt=\"...\" src=\"...\" />\n    <!-- More images -->\n  </div>\n  <button class=\"carousel-button carousel-button-prev\">...</button>\n  <button class=\"carousel-button carousel-button-next\">...</button>\n</div>"}}],"language":"plain text"}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":".carousel-image-container {\n  height: 400px;\n  width: 600px;\n  position: relative; /* So that position: absolute will be relative to this element. */\n}\n\n\n.carousel-button {\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%); /* Shifts the button up by half its height. */\n}\n\n\n.carousel-button-prev {\n  left: 30px;\n}\n\n\n.carousel-button-next {\n  right: 30px;\n}"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User experience","link":{"type":"url","url":"#user-experience"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Scroll snapping"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"CSS scroll snapping","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-snap-type"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and show the scrollbar so that users can still use native scrollbars to scroll through the images but the images will \"snap\" nicely and the scroll position will nicely align to show a full image once scrolling stops. Mobile users expect to be able to swipe through the images and CSS scroll snap helps you achieve this on mobile devices easily."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interactive elements should be large enough"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". The Prev/Next buttons should be at least 44px tall and wide to be easy to tap on mobile devices. One trick is to increase the hit area of the button to the entire leftmost/rightmost section. The dots are probably too small on mobile for precise interactions and can just be hidden or made non-interactive."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reposition Prev/Next buttons"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": It's more convenient to have the Prev/Next buttons close to each other. This goes against the example design but speeds up navigation because the distance between the buttons is minimized."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance","link":{"type":"url","url":"#performance"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Defer loading of images that aren't on-screen","link":{"type":"url","url":"#defer-loading-of-images-that-arent-on-screen"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Most images on the carousel are never shown to the user, especially those at the back. It'd be a waste of bandwidth to load all the images if they are not being shown."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Hence the images can be loaded only when they are on-screen (or about to be shown). This can be implemented using JavaScript or just via HTML. A pure HTML methods involves using the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img loading=\"lazy\">","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-loading"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute, which defers loading images that aren't currently within the visible viewport."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Preloading of images","link":{"type":"url","url":"#preloading-of-images"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"JavaScript can be used if fine-grain control regarding image loading is desired. To help minimize the scenario where an image needs to be shown but hasn't finished loading, the component can pre-emptively load the next image with the following code:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"const preloadImage = new Image();\npreloadImage.src = url;"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Airbnb optimized the image carousel experience in their room listings with a combination of lazy loading and preloading","link":{"type":"url","url":"https://medium.com/airbnb-engineering/building-a-faster-web-experience-with-the-posttask-scheduler-276b83454e91"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" behavior:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Initially, only the first image is loaded (the remaining images will be lazily loaded)."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The second image is preloaded when the user shows possible intent of viewing more images:"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cursor hovers over the image carousel."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Focuses on the \"Next\" button via tabbing."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image carousel comes into view (on mobile devices)."}}]}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If the user does view the second image (which signals high intent to browse even more images), the next three images (3rd to 5th) are preloaded."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As the user clicks \"Next\" again to browse more images, the (n + 3)th image is preloaded."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/travel-booking-airbnb/airbnb-image-loading.gif"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Airbnb image carousel lazy loading example on mobile"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Device-specific images","link":{"type":"url","url":"#device-specific-images"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It'd be a waste to load high resolution images on a mobile device where the screen size is too small to display the details anyway. A good feature to add would be to allow the user to provide images of different sizes to be displayed on different devices. This can be implemented using JavaScript, the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"srcset"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute on "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags, or the new "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<picture>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tag."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Virtualized lists","link":{"type":"url","url":"#virtualized-lists"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If there are too many images, we can use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"virtualized lists","link":{"type":"url","url":"https://www.patterns.dev/posts/virtual-lists/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to render only the visible images in the DOM."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Internationalization (i18n)","link":{"type":"url","url":"#internationalization-i18n"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"i18n is not extremely relevant to this question but the user should be able to customize the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-label"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" strings for the Prev/Next buttons for the current language of the page. These strings can be specified as configuration options."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accessibility (a11y)","link":{"type":"url","url":"#accessibility-a11y"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image carousels are notorious for having poor accessibility due to how much effort it takes to build them right. For this reason, you should probably not build your own custom image carousels without expecting to dedicate significant amount of time to achieve a top quality component. Some things to take note of when building accessible image carousels."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mobile-friendliness","link":{"type":"url","url":"#mobile-friendliness"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interactive elements should be large enough to for mobile (at least 44px x 44px)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Enable swiping to scroll through images (this is already the case with an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"overflow-x: scroll"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" + "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"CSS scroll snap","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-snap-type"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" implementation)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Progress dots be spaced further apart or made non-interactive."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Screen readers","link":{"type":"url","url":"#screen-readers"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags should have a meaningful "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"alt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" description specified or use an empty string."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Add "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-label"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s to the Prev/Next buttons since there's no visible label within them."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard support","link":{"type":"url","url":"#keyboard-support"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<button>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" HTML tag for the Prev/Next buttons where possible so that the buttons are focusable."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Add "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<div role=\"region\" aria-label=\"Image Carousel\" tabindex=\"0\">"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to make the carousel focusable and attach Left/Right keydown handlers to allow scrolling through the images with the keyboard."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Changelog","link":{"type":"url","url":"#changelog"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2023/01/22"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mention about Flux architecture."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Expand on the theming section."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Add Airbnb image carousel example."}}]}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"References","link":{"type":"url","url":"#references"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Creating an Accessible Image Carousel","link":{"type":"url","url":"https://www.aleksandrhovhannisyan.com/blog/image-carousel-tutorial/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Designing A Perfect Carousel UX","link":{"type":"url","url":"https://www.smashingmagazine.com/2022/04/designing-better-carousel-ux/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A Content Slider","link":{"type":"url","url":"https://inclusive-components.design/a-content-slider/"}}}]}}],"questionsMarkdown":null,"answerMarkdown":null,"time":"30 mins"},{"title":"Modal Dialog","difficulty":"Medium","url":"https://www.greatfrontend.com/questions/system-design/modal-dialog?practice=practice&tab=system-design","questionBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Companies"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Tiktok"}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Question"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design a modal/dialog component that shows content in a window overlaying the page."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/modal-dialog/modal-dialog-example.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Real-life examples"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Modal · Bootstrap v5.3","link":{"type":"url","url":"https://getbootstrap.com/docs/5.3/components/modal"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React Modal component - Material UI","link":{"type":"url","url":"https://mui.com/material-ui/react-modal/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dialog — Radix UI","link":{"type":"url","url":"https://www.radix-ui.com/docs/primitives/components/dialog"}}}]}}],"answerBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requirements exploration","link":{"type":"url","url":"#requirements-exploration"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What are the components of the modal?","link":{"type":"url","url":"#what-are-the-components-of-the-modal"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It's up to you to decide. At the basic level it should allow customization of the contents. Whether to add built-in support for close buttons, titles, footer actions will be up to you."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What amount of flexibility does the user have in customizing the design?","link":{"type":"url","url":"#what-amount-of-flexibility-does-the-user-have-in-customizing-the-design"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Users should be able to customize colors, fonts, padding, etc, of the modal elements to match their branding."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What devices will this component be used on?","link":{"type":"url","url":"#what-devices-will-this-component-be-used-on"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"All devices — mobile, tablet, desktop."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Architecture / high-level design","link":{"type":"url","url":"#architecture--high-level-design"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Modals, like many components that reveal content, have a trigger element and the contents elements. Modals can be opened through user actions or background actions, so we should decouple the trigger source from the modal contents."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Basic modals that only include the contents don't have complicated architecture. However, many modals from UI libraries have three distinct sections: header, body, footer."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"An example usage of modal components in React, with event handlers omitted."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<Modal>\n  <Modal.Header>My Modal Title</Modal.Header>\n  <Modal.Body>\n    <p>Modal body text goes here.</p>\n  </Modal.Body>\n  <Modal.Footer>\n    <button>Close</button>\n    <button>Confirm</button>\n  </Modal.Footer>\n</Modal>"}}],"language":"plain text"}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Component"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Role"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Modal Root ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Modal"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Root component, coordinates events between the inner components."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Modal Overlay"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Component that renders the background overlay, usually dimming out the page contents."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Modal Header ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Modal.Header"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The top section of the modal, contains the title and a close button."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Modal Body ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Modal.Body"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The main contents of the modal."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Modal Footer ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Modal.Footer"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optional bottom section of the modal, usually contains close/submit buttons."}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In React, components can communicate with its parents using context or props. We choose to use context here since we are using a composition model here and passing props is inconvenient. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<Modal>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" should contain a context provider that provides the config options ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<Modal>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"'s "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"props"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") to all its child components in case they need it."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data model","link":{"type":"url","url":"#data-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note that for designing components, it might make sense to design the interface/API first or both data model and API concurrently. It depends on the component at hand. Feel free to jump between the two sections."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Modal components do not need much state. We'll build the modal as a controlled component, which is the usual approach taken by libraries. Hence the open/closed state is managed outside the component."}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"State"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"previousFocusElement"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"HTMLElement"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The DOM element in focus before the modal was shown. Read more on why this is needed in the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Focus Management","link":{"type":"url","url":"#focus-management"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" section."}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"See below for configuration options which are also part of the data model."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interface definition (API)","link":{"type":"url","url":"#interface-definition-api"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"General props","link":{"type":"url","url":"#general-props"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These props apply to most of the components."}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Prop"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"children"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"React.Node"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Children of the component. If using TypeScript/Flow, you can enforce specific components to be used as "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"children"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"as"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"string | Component"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In case there is a need to customize the underlying DOM element/component."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"className"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"string"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Classnames to add to components in case further visual customization is needed. May or may not be needed depending on theming approach."}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Modal","link":{"type":"url","url":"#modal"}}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Prop"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"isOpen"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"boolean"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Whether the modal is open or closed."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"onClose"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Function"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Callback to be triggered when the modal is closed, possibly from pressing the close button or hitting the \"Escape\" key\"."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"maxHeight"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"number | undefined"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Max height of the modal. There should be a sensible default of around 80% of the viewport height."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"width"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"number | undefined"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Width of the modal. There should be a sensible default of 500-600px."}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Modal.Header","link":{"type":"url","url":"#modalheader"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Basic version doesn't need props other than "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"children"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Modal.Body","link":{"type":"url","url":"#modalbody"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Basic version doesn't need props other than "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"children"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Modal.Footer","link":{"type":"url","url":"#modalfooter"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Basic version doesn't need props other than "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"children"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Customizing appearance","link":{"type":"url","url":"#customizing-appearance"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Designing good APIs for customizing UI components can be found in the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Front End Interview Guidebook's UI Components API Design Principles Section","link":{"type":"url","url":"https://www.greatfrontend.com/front-end-interview-guidebook/user-interface-components-api-design-principles"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Most of the modal's contents in the header/body/footer will be provided by the user, hence there isn't that much default styling a modal component need to provide."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimizations and deep dive","link":{"type":"url","url":"#optimizations-and-deep-dive"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering","link":{"type":"url","url":"#rendering"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Breaking out of DOM hierarchy","link":{"type":"url","url":"#breaking-out-of-dom-hierarchy"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering the modal is more tricky than it seems due to the fact that modals are being displayed over the page and does not follow the normal flow of page elements. It's important to render the modal outside of the DOM hierarchy of the parents, because if the parents contain styling that clips its contents, the modal contents might not be fully visible. Here's an example from the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React docs","link":{"type":"url","url":"https://beta.reactjs.org/reference/react-dom/createPortal#rendering-a-modal-dialog-with-a-portal"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" demonstrating the issue."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Modal Clipping Example","link":{"type":"url","url":"https://codesandbox.io/embed/wnr51p?fontsize=14&hidenavigation=1&theme=dark&module=/App.js,/NoPortalExample.js,/PortalExample.js,/ModalContent.js,/styles.css&view=split"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In React, rendering outside the DOM hierarchy of the parent component can be achieved using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React Portals","link":{"type":"url","url":"https://beta.reactjs.org/reference/react-dom/createPortal"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". Common use cases of portals include tooltips, dropdown menus, popovers."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Overlay","link":{"type":"url","url":"#overlay"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"To help users focus on the content within the modal, there is usually an overlay/backdrop to dim out the page's contents. To render an element that covers the whole page, we can use the following CSS:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":".modal-overlay {\n  /* Black color with some opacity. */\n  background-color: rgba(0, 0, 0, 0.7);\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n}"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Centered modal","link":{"type":"url","url":"#centered-modal"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"To center the modal contents within the modal overlay, we can add the following styles to the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":".modal-overlay"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":":"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":".modal-overlay {\n  /* Original styles are omitted. */\n  display: flex;\n  justify-content: center;\n  padding: 20px;\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"which will work with the following HTML structure."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<div className=\"modal-overlay\">\n  <div className=\"modal-contents\">...</div>\n</div>"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If vertical centering of the contents is desired, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"align-items: center"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" can be added to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":".modal-overlay"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Here's a basic example of a modal with an overlay and optional vertical center mode:"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Modal Example","link":{"type":"url","url":"https://codesandbox.io/embed/t1oldf?fontsize=14&hidenavigation=1&theme=dark&module=/src/App.js,/src/styles.css&view=split"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Maximum height","link":{"type":"url","url":"#maximum-height"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since the modal can contain a lot of contents, we can set a default maximum height for the modal such that the excess items will be scrollable within "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Modal.Body"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". This height can also be customized by specifying the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"maxHeight"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" prop."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Scroll lock","link":{"type":"url","url":"#scroll-lock"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When the modal is shown, the modal contents are in focus. To prevent the user from scrolling the background contents, the page should lock page-level scrolling. One way is to add "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"overflow: hidden"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<body>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering in HTML or JavaScript","link":{"type":"url","url":"#rendering-in-html-or-javascript"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The modal can either be:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendered into the HTML like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bootstrap's Modals","link":{"type":"url","url":"https://getbootstrap.com/docs/5.3/components/modal/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". The modal is initially hidden from view via "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"display: none"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" / "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"opacity: 0"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" / "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"hidden"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute, and those styles are toggled when the modal is to be shown."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendered on the fly via JavaScript after the modal trigger button is activated."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The pros of rendering in the HTML first is better runtime performance due to fewer DOM operations needed to show the modal. The downside is that the HTML can be unnecessarily bloated especially if the modal is never shown at all. Since modal contents usually contain secondary information, they shouldn't contribute towards SEO and doesn't need to be server side-rendered. The benefits of rendering the modal beforehand in HTML are relatively minor."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accessibility (a11y)","link":{"type":"url","url":"#accessibility-a11y"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mouse interactions","link":{"type":"url","url":"#mouse-interactions"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Typically, clicking outside the modal (on the overlay) will close the modal. We have to ensure that clicks within the modal do not close the modal."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"function clickListener(event) {\n  // No-op if clicked element is a\n  // descendant of the modal contents.\n  if ($modalContentsElement.contains(event.target)) {\n    return;\n  }\n\n\n  closeModal();\n}\n\n\ndocument.addEventListener('mousedown', clickListener);\ndocument.addEventListener('touchstart', clickListener);"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Remember to remove the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"clickListener"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s when the modal is closed."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Here's an example in React:"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Modal Dismiss On Click Outside","link":{"type":"url","url":"https://codesandbox.io/embed/74fyqc?fontsize=14&hidenavigation=1&theme=dark&module=/src/App.js,/src/styles.css&view=split"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Focus management","link":{"type":"url","url":"#focus-management"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The most complicated aspect of implementing a modal is probably focus management. Contents within modals are meant to be treated like a separate document; using the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Tab"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" key cycles through focusable elements within the dialog only and focus can never be on elements outside of the component for as long as the modal is shown. This behavior/phenomenon is known as \"focus trapping\"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When a modal opens, focus moves to an element inside the modal. Generally, focus is set on the first focusable element, but there are some exceptions as mentioned in "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dialog (Modal) pattern","link":{"type":"url","url":"https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When a modal closes, focus returns to the element that opened the modal (unless the element no longer exists, then focus on another reasonable element)."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How to implement focus management for modals"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":":"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When the modal is first opened, keep a reference to the element that opened the modal in the modal's state."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Focus on an element inside the modal."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Add "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"keydown"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" listeners for the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Tab"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" key that contains the following logic:"}}],"children":[{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Tab"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" key is pressed, determine if the focus should be shifted to the next or previous tabbable element by checking if the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Shift"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" key is also pressed (via the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"shiftKey"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" value on the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"KeyboardEvent"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Find all tabbable elements within the modal."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"From the current focused element, find the next/previous tabbable element."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Focus on that new element."}}]}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When the modal is closed, hide the modal and move focus to the element that opened the modal."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In practice, focus trapping can be done via "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"focus-trap","link":{"type":"url","url":"https://focus-trap.github.io/focus-trap/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" libraries. If using React, the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"react-focus-lock","link":{"type":"url","url":"https://github.com/theKashey/react-focus-lock"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" library which is what "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reach UI's Dialog component","link":{"type":"url","url":"https://reach.tech/dialog"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" uses."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard interactions","link":{"type":"url","url":"#keyboard-interactions"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The following is extracted from the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dialog (Modal) pattern","link":{"type":"url","url":"https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":":"}}]}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Key"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Tab"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Moves focus to the next tabbable element inside the modal. If focus is on the last tabbable element inside the modal, moves focus to the first tabbable element inside the modal."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Shift"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" + "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Tab"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Moves focus to the previous tabbable element inside the modal. If focus is on the first tabbable element inside the modal, moves focus to the last tabbable element inside the modal."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Esc"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Closes the modal."}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Focus trapping is essential for the required "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Tab"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"-ing behavior, otherwise the focus will \"leak\" out of the modal:"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WAI-ARIA roles, states, and properties","link":{"type":"url","url":"#wai-aria-roles-states-and-properties"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The following is extracted from the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dialog (Modal) pattern","link":{"type":"url","url":"https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The element that serves as the modal container has a role of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"dialog"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"All elements required to operate the modal are descendants of the element that has role "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"dialog"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The modal container element has "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-modal"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" set to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"true"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The modal has either:"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A value set for the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-labelledby"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" property that refers to a visible modal title."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A label specified by "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-label"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optional "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-describedby"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" property is set on the element with the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"dialog"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" role to indicate which element or elements in the dialog contain content that describes the primary purpose or message of the dialog. Read the full guidance at "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dialog (Modal) pattern","link":{"type":"url","url":"https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<dialog>","link":{"type":"url","url":"#dialog-element"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element","link":{"type":"url","url":"#dialog-element"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTML now has a native "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<dialog>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element that can be used in creating modal dialogs as it provides usability and accessibility features that must be replicated if using other elements for a similar purpose."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, it is still relatively new and browser compatibility is not great. Moreover, behaviors like focus trapping still has to be manually implemented, which makes using a native "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<dialog>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element less compelling."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Animations and transitions","link":{"type":"url","url":"#animations-and-transitions"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If animation of the modal elements is desired and the transitions of the overlay and the contents need to be independent (e.g. overlay fades in while the contents translates up vertically), the DOM structure will have to be changed and the contents cannot be rendered within the overlay's DOM. A structure similar to like this will be required:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<div>\n  <!-- The overlay, rendered as a fixed sibling to the contents. -->\n  <div class=\"modal-overlay\" aria-hidden=\"true\"></div>\n  <!-- Full screen container to center the panel. -->\n  <div class=\"modal-contents-container\">\n    <div class=\"modal-contents\">...</div>\n  </div>\n</div>"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Here's an example of the entrance animation in React:"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Modal Animations","link":{"type":"url","url":"https://codesandbox.io/embed/imlco8?fontsize=14&hidenavigation=1&theme=dark&module=/src/App.js,/src/styles.css&view=split"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Exit transitions are non-trivial to implement properly in React because conditional rendering causes the DOM elements to be removed from the document when they are no longer needed on the page. Here's an example of a modal where the entrance and exit are both animated."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Modal Animations","link":{"type":"url","url":"https://codesandbox.io/embed/t3wwxr?fontsize=14&hidenavigation=1&theme=dark&module=/src/App.js,/src/styles.css&view=split"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Internationalization (i18n)","link":{"type":"url","url":"#internationalization-i18n"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since all user-facing strings are provided by the user, strings can be displayed as-is. However, do note that some strings can be long in certain languages, so overflowing text should either by truncated or wrapped. Text shouldn't overflow out of the modal elements. You usually don't want the modal title/footer to be more than a line long, so truncation is recommended here."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For RTL languages, the modal elements have to be horizontally flipped. To achieve this, the root modal component can take in a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"direction"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" config option/prop and render contents depending on the value."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/modal-dialog/modal-dialog-rtl.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Stacked modals","link":{"type":"url","url":"#stacked-modals"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It is possible for modal contents to contain triggers that present even more modals, so the following needs to be considered:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Decide whether there should be an overlay per modal level, which will visually make the backdrop darker the higher the level of stacking."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dismissing a modal via the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Esc"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" key or clicking outside the topmost modal's contents should only dismiss the topmost modal and not all the modals."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dismissing a lower layer modal should also dismiss all the modals on top of it (or make this behavior customizable)."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Advanced topics","link":{"type":"url","url":"#advanced-topics"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Tooltips and dropdown menus within a modal."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alert dialog role and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"ARIA pattern","link":{"type":"url","url":"https://www.w3.org/WAI/ARIA/apg/patterns/alertdialog/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"References","link":{"type":"url","url":"#references"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Themed examples"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Modal · Bootstrap v5.3","link":{"type":"url","url":"https://getbootstrap.com/docs/5.3/components/modal"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React Modal component - Material UI","link":{"type":"url","url":"https://mui.com/material-ui/react-modal/"}}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Headless examples"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dialog — Radix UI","link":{"type":"url","url":"https://www.radix-ui.com/docs/primitives/components/dialog"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dialog (Modal) — Reach UI","link":{"type":"url","url":"https://reach.tech/dialog"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dialog (Modal) - Headless UI","link":{"type":"url","url":"https://headlessui.com/react/dialog"}}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Aria Authoring Practices Guide (APG)"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dialog (Modal) Pattern","link":{"type":"url","url":"https://www.w3.org/WAI/ARIA/apg/patterns/dialog-modal/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alert and Message Dialogs Pattern","link":{"type":"url","url":"https://www.w3.org/WAI/ARIA/apg/patterns/alertdialog/"}}}]}}]}}],"questionsMarkdown":null,"answerMarkdown":null,"time":"30 mins"},{"title":"Email Client (e.g. Microsoft Outlook)","difficulty":"Medium","url":"https://www.greatfrontend.com/questions/system-design/email-client-outlook?practice=practice&tab=system-design","questionBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Companies"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Microsoft"}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Question"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design a "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"desktop"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" email client that can send and receive email messages given an email provider service."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/email-client-outlook/email-client-example.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It's important to distinguish between "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"webmail"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and email client apps. Websites like gmail.com, outlook.com, Yahoo Mail which allow you to use the browser to access email is called webmail. Email clients are desktop apps that have to be installed on your computer and can usually be used even when offline. They usually allow access to multiple email services like Gmail, Outlook, iCloud, etc and view messages from different services within the app."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Real-life examples"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Outlook for "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Windows","link":{"type":"url","url":"https://apps.microsoft.com/store/detail/outlook-for-windows/9NRX63209R7B"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"macOS","link":{"type":"url","url":"https://apps.apple.com/sg/app/microsoft-outlook/id985367838"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Apple Mail","link":{"type":"url","url":"https://support.apple.com/en-sg/guide/mail/welcome/mac"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Airmail","link":{"type":"url","url":"https://airmailapp.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mailspring","link":{"type":"url","url":"https://getmailspring.com/"}}}]}}],"answerBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note: Work in Progress!"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The solution is still being worked on but we'd like to share the drafts so that interested users can still benefit from it in the meanwhile and provide feedback."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requirements exploration","link":{"type":"url","url":"#requirements-exploration"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What are the core functionalities needed?","link":{"type":"url","url":"#what-are-the-core-functionalities-needed"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sending email messages to an SMTP server."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Retrieving email messages from an IMAP server."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Access email messages already on the device."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What operating systems does the app need to support?","link":{"type":"url","url":"#what-operating-systems-does-the-app-need-to-support"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The popular ones: Windows, macOS, and Linux/Ubuntu."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What email services/accounts need to be supported?","link":{"type":"url","url":"#what-email-servicesaccounts-need-to-be-supported"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We don't have to focus on that aspect for this question. Assume that the user can make authenticated requests to preconfigured SMTP/IMAP servers to send/retrieve emails successfully."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Many native desktop email clients like Apple Mail, Outlook, and Mailspring allow users to connect to multiple email services like iCloud Mail, Gmail, Exchange to show emails from multiple services within the app. However, that is beyond the scope for this question."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Does the application need to work offline?","link":{"type":"url","url":"#does-the-application-need-to-work-offline"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Yes, where possible. Outgoing email messages should be saved and sent out when the application goes online. Users should still be allowed to browse and search for emails on the device even if they are offline."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Should emails between the same sender and topic be threaded?","link":{"type":"url","url":"#should-emails-between-the-same-sender-and-topic-be-threaded"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Threading of message conversations will be good but not required."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Background knowledge","link":{"type":"url","url":"#background-knowledge"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Email client applications are quite different from your traditional web applications due to the fact that server requests are made using non-HTTP protocols like SMTP and IMAP. It is unlikely interviewers will require candidates to be familiar with how the common email protocols work, so you can assume you are working with HTTP-based APIs for sending and retrieving emails."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Nevertheless, we'll cover some fundamental email system concepts for the sake of learning."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parts of email systems","link":{"type":"url","url":"#parts-of-email-systems"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mail User Agent (MUA)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": An application where users can compose, send, receive, and read email messages. Other non-core functionalities include searching, flagging, address books, etc. These can be desktop applications with graphical user interfaces (Outlook, Apple Mail), or command line programs."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mail Transfer Agent (MTA)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A software that transfers email messages from one host to another using the SMTP protocol. MTAs can exist on both users' devices and mail servers."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mail Servers"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Computers which host the MTAs and stores the email messages in a mailbox."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mailbox"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A mailbox is a conceptual entity that does not necessarily pertain to storage and is identified by an email address. It contains email messages and typically exists on mail servers."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mail transport protocols","link":{"type":"url","url":"#mail-transport-protocols"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If you have set up email clients before, you might have come across the terms SMTP, POP and IMAP. SMTP is an outgoing email protocol used to send messages while POP and IMAP are incoming email protocols that email servers support to allow clients to retrieve messages."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The benefit of having standardized protocols for sending and retrieving messages is that email services can send messages between each other and email clients can connect to any email service."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Simple Mail Transport Protocol (SMTP)","link":{"type":"url","url":"#simple-mail-transport-protocol-smtp"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Simple Mail Transport Protocol","link":{"type":"url","url":"https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is a protocol for sending email messages over the internet used by mail servers, MTAs, and MUAs (non-webmail)."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SMTP uses a simple set of commands to transfer messages, including commands to authenticate the sender, specify the recipient(s), and sending the message."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Nylas discussed about SMTP relays in detail in their blog post "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"SMTP vs. Web API: The Best Methods for Sending Email\"","link":{"type":"url","url":"https://www.nylas.com/blog/smtp-vs.-web-api-the-best-methods-for-sending-email/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". Here's an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"example SMTP conversation","link":{"type":"url","url":"https://en.wikipedia.org/wiki/Simple_Mail_Transfer_Protocol#SMTP_transport_example"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" with an SMTP server over the command line. Lines starting with "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"S:"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" are sent from the server and line starting with "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"C:"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" are written from the user."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"$ openssl s_client -connect smtp.example.com:465 -crlf\n\n\nS: 220 smtp.example.com ESMTP Postfix\nC: HELO relay.example.org\nS: 250 Hello relay.example.org, I am glad to meet you\nC: AUTH LOGIN\nS: 334 VXNlcm5hbWU6\nC: dXNlcm5hbWUuY29t # Username encoded in Base64\nS: 334 UGFzc3dvcmQ6\nC: bXlwYXNzd29yZA== # Password encoded in Base64\nS: 235 Authentication succeeded\nC: MAIL FROM:<bob@example.org>\nS: 250 Ok\nC: RCPT TO:<alice@example.com>\nS: 250 Ok\nC: RCPT TO:<theboss@example.com>\nS: 250 Ok\nC: DATA\nS: 354 End data with <CR><LF>.<CR><LF>\nC: From: \"Bob Example\" <bob@example.org>\nC: To: \"Alice Example\" <alice@example.com>\nC: Cc: theboss@example.com\nC: Date: Tue, 15 Jan 2008 16:02:43 -0500\nC: Subject: Test message\nC:\nC: Hello Alice.\nC: This is a test message with 5 header fields and 4 lines in the message body.\nC: Your friend,\nC: Bob\nC: .\nS: 250 Ok: queued as 12345\nC: QUIT\nS: 221 Bye\n{The server closes the connection}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Specification of SMTP can be found in "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"RFC5321","link":{"type":"url","url":"https://www.rfc-editor.org/rfc/rfc5321"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Post Office Protocol (POP)","link":{"type":"url","url":"#post-office-protocol-pop"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Post Office Protocol","link":{"type":"url","url":"https://en.wikipedia.org/wiki/Post_Office_Protocol"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is a traditional standard protocol for accessing email messages on a mail server. Messages are kept on the server only until the first device accesses and downloads them. As the name suggests, once an email is downloaded, it is usually deleted from the server, just like how post offices act as temporary storage for physical mail before they get delivered to recipients."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"POP3 is the most recent widely-used version of POP but is older than newer protocols like IMAP and less feature. POP is generally considered less desirable than IMAP as it is less flexible and does not allow for server-side searching or message flagging."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The specification for POP3 can be found in "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"RFC1939","link":{"type":"url","url":"https://www.rfc-editor.org/rfc/rfc1939"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Internet Message Access Protocol (IMAP)","link":{"type":"url","url":"#internet-message-access-protocol-imap"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Internet Message Access Protocol","link":{"type":"url","url":"https://en.wikipedia.org/wiki/Internet_Message_Access_Protocol"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is a standard protocol for accessing email messages on a mail server with the latest version being IMAP4. IMAP allows users to retrieve and manage their email messages within webmail and email clients, without having to download them to the local computer. IMAP also allows users to access their email from multiple devices and locations, and provides features such as server-side searching and message flagging."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"IMAP addresses many of the shortcomings of POP, at the cost of server storage. Nylas published a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"deep dive into IMAP","link":{"type":"url","url":"https://www.nylas.com/blog/nylas-imap-therefore-i-am/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" on their engineering blog which we highly recommend checking out."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The specification for IMAP4 can be found in "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"RFC3501","link":{"type":"url","url":"https://www.rfc-editor.org/rfc/rfc3501"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"POP vs IMAP","link":{"type":"url","url":"#pop-vs-imap"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Here's a table comparing the POP (POP3) and IMAP (IMAP4) protocols."}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feature"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"POP3"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"IMAP"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Source of truth"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client(s)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"No. of simultaneous clients"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"One"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Multiple"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"No. of mailboxes"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"One"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Multiple"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Message downloading"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Entire message"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Individual parts"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Message "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"flagging","link":{"type":"url","url":"https://www.rfc-editor.org/rfc/rfc3501#section-2.3.2"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (seen, answered, deleted)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"No"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Yes"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Deleted from server after downloading"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Yes by default"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"No"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server-side search"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"No"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Yes"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server storage usage"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Low"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"High"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Reference: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"IMAP vs. POP3: What's the Difference? Which One Should You Use?","link":{"type":"url","url":"https://www.makeuseof.com/tag/pop-vs-imap/"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It is an expectation to access emails on multiple devices today and view a consistent mailbox state across different client devices, so POP's model is outdated. The main advantage of POP is that less server storage space is needed, but that is usually not a concern these days since storage is relatively cheap."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"IMAP is the prevalent email protocol in the current age but many email clients still support retrieving emails from both IMAP and POP servers."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Email server configurations","link":{"type":"url","url":"#email-server-configurations"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Popular email services have the following configurations."}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Service"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SMTP"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"IMAP"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"POP"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Gmail","link":{"type":"url","url":"https://support.google.com/mail/answer/7126229"}}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"smtp.gmail.com"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"imap.gmail.com"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pop.gmail.com"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Outlook","link":{"type":"url","url":"https://support.microsoft.com/en-us/office/pop-imap-and-smtp-settings-for-outlook-com-d088b986-291d-42b8-9564-9c414e2aa040"}}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"smtp-mail.outlook.com"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"outlook.office365.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (port 993)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"outlook.office365.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (port 995)"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"iCloud","link":{"type":"url","url":"https://support.apple.com/en-us/HT202304"}}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"smtp.mail.me.com"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"imap.mail.me.com"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Unsupported"}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Email Flow","link":{"type":"url","url":"#email-flow"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Let's assume the following users with the respective roles, services, and types of clients:"}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Role"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Service"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client Type"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sender"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Gmail"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Desktop App"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bob"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Receiver"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Outlook"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Desktop App"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Carol"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sender"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Gmail"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Webmail"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"David"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Receiver"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Outlook"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Webmail"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We'll go through the flows detailing how messages are sent between the various types of clients."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/email-client-outlook/email-flow.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How email messages travel from senders to recipient"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Important notes"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":":"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mail services can be running SMTP servers and IMAP/POP servers on the same machine or on different machines. The decision is not important for our discussion as long as the servers for a mail service have access to the same email message database."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The arrows directions indicate the flow of the email message, and not the origin of the request. IMAP/POP requests are initiated by clients, not pushed from the mail servers."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Gmail's IMAP servers are not shown because in the above scenario, Gmail is only used for sending and not receiving."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The DNS lookup stage for the MX (Mail Exchange) record is omitted for simplicity. SMTP servers use the domain name of the recipient's email address to look up DNS records for that domain (MX records in particular) to determine the address of the mail server."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"MTAs are pretty general terms but they all use SMTP to send messages. SMTP servers are MTAs."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Email client -> Email client","link":{"type":"url","url":"#email-client---email-client"}}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"alice@gmail.com","link":{"type":"url","url":"mailto:alice@gmail.com"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") wants to send an email to Bob ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"bob@outlook.com","link":{"type":"url","url":"mailto:bob@outlook.com"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice's email client desktop app sends the message to the MTA, a software running on her computer."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice's computer's MTA sends the message to Gmail's SMTP server ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"smtp.gmail.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") over SMTP."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Gmail's SMTP servers send the message to Outlook's SMTP servers ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"smtp-mail.outlook.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") over SMTP and the message is saved into Outlook's database."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bob's email desktop client makes IMAP requests to Outlook's IMAP servers ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"outlook.office365.com:993"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Outlook's IMAP servers retrieve the message from the database and send it back to Bob's desktop client over IMAP."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bob's email desktop client displays the new email message from Alice."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Email client -> Webmail","link":{"type":"url","url":"#email-client---webmail"}}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"alice@gmail.com","link":{"type":"url","url":"mailto:alice@gmail.com"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") wants to send an email to David ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"david@outlook.com","link":{"type":"url","url":"mailto:david@outlook.com"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice's email client desktop app sends the message to the MTA, a software running on her computer."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice's computer's MTA to send the message to Gmail's SMTP server ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"smtp.gmail.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") over SMTP."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Gmail's SMTP servers send the message to Outlook's SMTP servers ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"smtp-mail.outlook.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") over SMTP and the message is saved into Outlook's database."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"David accesses Outlook webmail by visiting "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"https://outlook.live.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" in his browser."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The servers hosting "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"outlook.live.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" makes IMAP requests to Outlook's IMAP servers ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"outlook.office365.com:993"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Outlook's IMAP servers retrieve the message from the database and send it back to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"outlook.live.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The servers hosting "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"outlook.live.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" sends the response to David's browser over HTTP."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"David's browser displays the new email message from Alice."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Webmail -> Email client","link":{"type":"url","url":"#webmail---email-client"}}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Carol ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"carol@gmail.com","link":{"type":"url","url":"mailto:carol@gmail.com"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") wants to send an email to Bob ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"bob@outlook.com","link":{"type":"url","url":"mailto:bob@outlook.com"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Carol accesses Gmail webmail by visiting "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"https://www.gmail.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" in her browser."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Carol sends out an email message from Gmail webmail, which makes a HTTP request to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"gmail.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" servers."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"gmail.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" servers uses its MTA software to send the message to Gmail's SMTP server ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"smtp.gmail.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") over SMTP."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Gmail's SMTP servers send the message to Outlook's SMTP servers ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"smtp-mail.outlook.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") over SMTP and the message is saved into Outlook's database."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bob's email desktop client makes IMAP requests to Outlook's IMAP servers ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"outlook.office365.com:993"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Outlook's IMAP servers retrieve the message from the database and send it back to Bob's desktop client over IMAP."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bob's email desktop client displays the new email message from Carol."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Webmail -> Webmail","link":{"type":"url","url":"#webmail---webmail"}}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Carol ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"carol@gmail.com","link":{"type":"url","url":"mailto:carol@gmail.com"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") wants to send an email to David ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"david@outlook.com","link":{"type":"url","url":"mailto:david@outlook.com"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Carol accesses Gmail webmail by visiting "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"https://www.gmail.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" in her browser."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Carol sends out an email message from Gmail webmail, which makes a HTTP request to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"gmail.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" servers."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"gmail.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" servers uses its MTA software to send the message to Gmail's SMTP server ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"smtp.gmail.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") over SMTP."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Gmail's SMTP servers send the message to Outlook's SMTP servers ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"smtp-mail.outlook.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") over SMTP and the message is saved into Outlook's database."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"David accesses Outlook webmail by visiting "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"https://outlook.live.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" in his browser."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The servers hosting "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"outlook.live.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" makes IMAP requests to Outlook's IMAP servers ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"outlook.office365.com:993"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Outlook's IMAP servers retrieve the message from the database and send it back to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"outlook.live.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" over IMAP."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The servers hosting "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"outlook.live.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" sends the response to David's browser over HTTP."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"David's browser displays the new email message from Carol."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Types of email systems","link":{"type":"url","url":"#types-of-email-systems"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Email systems can be broadly categorized into the following types:"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Store and forward servers","link":{"type":"url","url":"#store-and-forward-servers"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Store and forward email servers usually run on POP, where messages are kept on the server only until a user first accesses and downloads them. It is a simple and straightforward design."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Advantages"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Messages do not remain on the server for long (until a client accesses them) and server doesn't need to do much processing on them."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client devices usually store the downloaded messages, so users can still access old messages even when there is no internet connection, the mail server is unavailable due to outages."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server does not require much storage space as messages are deleted after downloading."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Disadvantages"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since messages are stored locally, if the server is accessed from multiple client devices, there's no consistent view for all the messages."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Users are responsible for backing up and restoring their messages. Without any backup, messages will be lost forever if devices are spoilt/stolen."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Functionality such as searching/sorting of messages has to be done locally on the device, which can be computationally intensive for mailboxes containing large amount of messages. In the case of messages being stored across multiple devices, searching is only within the messages on the current device which can be inconvenient."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server-only mailboxes","link":{"type":"url","url":"#server-only-mailboxes"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In such system, servers act as the source of truth for the messages and even after clients download the messages, the server retains them. Clients do not cache or persist the messages after downloading them. Such servers can run on IMAP and webmail is a common example of such a model."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Advantages"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"All devices have a consistent view of the mailboxes."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Backups can be done by the email service providers without users going through any hassle."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Functionality that can be computationally intensive or difficult to be done by clients can be performed on the server. Less powerful devices like mobile phones will benefit from this."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Disadvantages"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requires internet connection to view the messages."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sufficient server storage space is required as it is the source of truth for messages."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server mailbox with client-side cache","link":{"type":"url","url":"#server-mailbox-with-client-side-cache"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A hybrid model combines the best characteristics of both the store and forward servers and the server-only mailbox by having a permanent server mailbox with clients caching/persisting the downloaded messages. Most desktop email clients operate using this model and is the most complex out of the above."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Advantages"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Most advantages of store and forward model:"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Can access messages even when offline or the email server is unavailable."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Advantages of server-only mailboxes:"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"All devices have a consistent view of the mailboxes."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Backup done by email service providers."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Leverage server-side features like searching."}}]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Disadvantages"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Complex synchronization logic between client and server."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sufficient server storage space is required as it is still the source of truth for messages."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Reference: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"NinjaMail: the Design of a High-Performance Clustered, Distributed E-mail System","link":{"type":"url","url":"https://people.eecs.berkeley.edu/~kubitron/papers/ninja/pdf/ninjamail-workshop.pdf"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Native HTML apps","link":{"type":"url","url":"#native-html-apps"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How to build native apps"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Talk about examples (Electron/Nativefier/Tauri) and their differences:"}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Architecture / high-level design","link":{"type":"url","url":"#architecture--high-level-design"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Desktop client vs Webmail","link":{"type":"url","url":"#desktop-client-vs-webmail"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Separate into Client app vs Isomorphic core."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Abstract out database layer so can select db depending on runtime environment."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Values of a native desktop app:"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Menubar"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Notifications"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard shortcuts that don't conflict with the browser's"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Badge"}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Flux/Redux architecture","link":{"type":"url","url":"#fluxredux-architecture"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use a Flux architecture reducer architecture/Command query request separation. Many different actions in the application which can be abstracted out as application-wide commands and have multiple trigger sources (e.g. UI element interaction, File menu interaction, Keyboard shortcut)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Central store. Many parts of the UI rely on the same data store."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Namespaced commands for better organization and lower chance of collision."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Easily implement undo/redo."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mailspring's list of actions","link":{"type":"url","url":"https://github.com/Foundry376/Mailspring/blob/master/app/src/flux/actions.ts"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server-side rendering vs Client-side rendering","link":{"type":"url","url":"#server-side-rendering-vs-client-side-rendering"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"CSR because it's an app."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Task queue","link":{"type":"url","url":"#task-queue"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mutable operations will update the local data store immediately, and queue changes to sync back to your mail provider."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data model","link":{"type":"url","url":"#data-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Work-in-progress"}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interface definition (API)","link":{"type":"url","url":"#interface-definition-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Work-in-progress"}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimizations and deep dive","link":{"type":"url","url":"#optimizations-and-deep-dive"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Go through the different email protocols: IMAP, SMTP, POP, etc."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Synchronizing with the mail server"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.rfc-editor.org/rfc/rfc4549","link":{"type":"url","url":"https://www.rfc-editor.org/rfc/rfc4549"}}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Email List"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How to do threading"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.jwz.org/doc/threading.html","link":{"type":"url","url":"https://www.jwz.org/doc/threading.html"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.rfc-editor.org/rfc/rfc5256","link":{"type":"url","url":"https://www.rfc-editor.org/rfc/rfc5256"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Identifying Quoted Text in Emails","link":{"type":"url","url":"https://patents.google.com/patent/US7222299"}}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Searching through emails"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sorting through emails"}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reading"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Read email's HTML"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Inject a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"browser default stylesheet","link":{"type":"url","url":"https://github.com/Foundry376/Mailspring/tree/master/app"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" or use webview."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Composing"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Email address autocompletion"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Implementing undo send feature"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rich Text/WYSIWYG"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Attachments format"}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Virtual lists"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lazy load emoji picker, etc."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"a11y"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard shortcuts"}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Networking"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sync frequency"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Retries with exponential backoff"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Handle offline mode"}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"UX"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Offline indicator"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Swipe gestures"}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Notifications"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"i18n"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"RTL"}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Extra features"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Theming"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Spellcheck","link":{"type":"url","url":"https://github.com/Foundry376/Mailspring/app/src/spellchecker.ts"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Saving drafts"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Blocking open tracking"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How open tracking works","link":{"type":"url","url":"https://nylas-mail-lives.gitbooks.io/nylas-mail-docs/content/tracking_and_notifications/226411088-how-does-nylas-perform-open-tracking.html"}}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mail rules"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Playing sounds"}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Composing","link":{"type":"url","url":"#composing"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Work-in-progress"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Message format","link":{"type":"url","url":"#message-format"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Work-in-progress"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Attachments","link":{"type":"url","url":"#attachments"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Resume attachment."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Async attachment flow."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard shortcuts","link":{"type":"url","url":"#keyboard-shortcuts"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Implement different shortcuts in popular clients like Gmail, Apple Mail, Outlook, etc."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Undo/redo","link":{"type":"url","url":"#undoredo"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Made easy with action history and centralized store."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Toasts"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance","link":{"type":"url","url":"#performance"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Not that much need for performance."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lazy loading is optional and not a priority since the assets are bundled as part of the app. Network request latency is short, only affects JavaScript boot up and execution time."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"References","link":{"type":"url","url":"#references"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"http://www.slate.com/articles/technology/technology/2015/02/email_overload_building_my_own_email_app_to_reach_inbox_zero.html","link":{"type":"url","url":"http://www.slate.com/articles/technology/technology/2015/02/email_overload_building_my_own_email_app_to_reach_inbox_zero.html"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://people.eecs.berkeley.edu/~kubitron/papers/ninja/pdf/ninjamail-workshop.pdf","link":{"type":"url","url":"https://people.eecs.berkeley.edu/~kubitron/papers/ninja/pdf/ninjamail-workshop.pdf"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://github.com/nylas/nylas-mail","link":{"type":"url","url":"https://github.com/nylas/nylas-mail"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://en.wikipedia.org/wiki/Internet_Message_Access_Protocol","link":{"type":"url","url":"https://en.wikipedia.org/wiki/Internet_Message_Access_Protocol"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.rfc-editor.org/rfc/rfc3501","link":{"type":"url","url":"https://www.rfc-editor.org/rfc/rfc3501"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://github.com/Foundry376/Mailspring","link":{"type":"url","url":"https://github.com/Foundry376/Mailspring"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://web.dev/mailru-cwv/","link":{"type":"url","url":"https://web.dev/mailru-cwv/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://zapier.com/blog/best-email-client-for-mac/","link":{"type":"url","url":"https://zapier.com/blog/best-email-client-for-mac/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Email Architecture, Gmail two Step Verification, SMTP POP3 IMAP","link":{"type":"url","url":"https://www.electroniclinic.com/email-architecture-gmail-two-step-verification-smtp-pop3-imap"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Email Program Classifications","link":{"type":"url","url":"https://web.mit.edu/rhel-doc/5/RHEL-5-manual/Deployment_Guide-en-US/s1-email-types.html"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How does email work?","link":{"type":"url","url":"https://www.namecheap.com/guru-guides/how-does-email-work"}}}]}}],"questionsMarkdown":null,"answerMarkdown":null,"time":"30 mins"},{"title":"E-commerce Marketplace (e.g. Amazon)","difficulty":"Medium","url":"https://www.greatfrontend.com/questions/system-design/e-commerce-amazon?practice=practice&tab=system-design","questionBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Question"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design an e-commerce website that allows users to browse products and purchase them."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/e-commerce-amazon/e-commerce-amazon-plp.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/e-commerce-amazon/e-commerce-amazon-pdp.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/e-commerce-amazon/e-commerce-amazon-cart.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/e-commerce-amazon/e-commerce-amazon-checkout.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Real-life examples"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.amazon.com","link":{"type":"url","url":"https://www.amazon.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.ebay.com","link":{"type":"url","url":"https://www.ebay.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.walmart.com","link":{"type":"url","url":"https://www.walmart.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.flipkart.com","link":{"type":"url","url":"https://www.flipkart.com/"}}}]}}],"answerBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requirements exploration","link":{"type":"url","url":"#requirements-exploration"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What are the core features to be supported?","link":{"type":"url","url":"#what-are-the-core-features-to-be-supported"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Browsing products."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Adding products to cart."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Checking out successfully."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What are the pages in the website?","link":{"type":"url","url":"#what-are-the-pages-in-the-website"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Product listing page (PLP)"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Product details page (PDP)"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cart page"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Checkout page"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What product details will be shown on the PLPs and PDPs?","link":{"type":"url","url":"#what-product-details-will-be-shown-on-the-plps-and-pdps"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"PLPs: Product name, Product image, Price."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"PDPs: Product name, Product images (multiple), Product description, Price."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What does the user demographics look like?","link":{"type":"url","url":"#what-does-the-user-demographics-look-like"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"International users of a wide age range: US, Asia, Europe, etc."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What are the non-functional requirements?","link":{"type":"url","url":"#what-are-the-non-functional-requirements"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Each page should load under 2 seconds. Interactions with page elements should respond quickly."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What devices will the application be used on?","link":{"type":"url","url":"#what-devices-will-the-application-be-used-on"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"All possible devices: laptop, tablets, mobile, etc."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Do users have to be signed in to purchase?","link":{"type":"url","url":"#do-users-have-to-be-signed-in-to-purchase"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Users can purchase as a guest without being signed in."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Architecture / high-level design","link":{"type":"url","url":"#architecture--high-level-design"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/e-commerce-amazon/e-commerce-amazon-architecture.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Component responsibilities","link":{"type":"url","url":"#component-responsibilities"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Provides HTTP APIs to fetch products data, cart items, modify the carts and create orders."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Controller"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Controls the flow of data within the application and makes network requests to the server."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client Store"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Stores data needed across the whole application. Since there are many pages with data some amount of overlapping data, a client store is useful for sharing data across sections of a page and across pages."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pages"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":":"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Product List"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Displays a list of product items that can be added to the cart."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Product Details"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Displays details of a single product along with additional details."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cart"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Displays added cart items and allows changing of quantity and deleting added items."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Checkout"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Displays address and payment forms the user has to complete in order to place the order."}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server-side rendering or client-side rendering?","link":{"type":"url","url":"#server-side-rendering-or-client-side-rendering"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Firstly let's understand what the two terms mean:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server-side rendering (SSR)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The traditional way of building websites where the server fetches all necessary data, uses them to create the final markup and sends down the HTML needed every time a user visits a page. Most of the rendering work is done on the server."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client-side rendering (CSR)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The server sends down initial HTML which contains the JavaScript to bootstrap the application. The client then fetches the necessary data, combines it with templates and creates the final page, all within the browser. CSR is typically used with Single-page Application models and subsequent navigation don't require a full page refresh. Most of the rendering work is done on the client."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Benefits of SSR:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance is generally better, First Contentful Paint score is high and SSR-ed pages appear faster than CSR."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lower Cumulative Layout Shift score as the final HTML is already present."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SSR allows for personalization of pages (user-specific content) as opposed to static site generation. Personalization is an important factor for conversion as e-commerce platforms scale up."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Downsides of SSR:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Page transitions are slower because the entire page has to be constructed on the server for every request."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SEO is important for e-commerce websites, hence SSR should be a priority."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Single-page application (SPA) or Multi-page application (MPA)?","link":{"type":"url","url":"#single-page-application-spa-or-multi-page-application-mpa"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SPAs by default use CSR and MPAs by default use SSR. While CSR and SSR are two ends of the rendering spectrum, somewhere in the middle lies a hybrid mode called universal rendering (or SSR with hydration) where the server renders the full HTML but after that, rendering and navigation becomes client-side."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Most universal rendered-sites use popular UI frameworks (e.g. React, Vue, and Angular) and the page will need to be hydrated (add event handlers) after initial load. Hydration also brings about the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"double data problem","link":{"type":"url","url":"https://web.dev/rendering-on-the-web/#a-rehydration-problem-one-app-for-the-price-of-two"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Which application architecture should be used? The most important factor is that SSR is being used, whether SPA or MPA doesn't matter as much. As seen above, both are viable, as long as your website has good performance."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Real world technologies to implement the following rendering and architecture choices:"}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SSR"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"CSR"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SPA"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Next.js, Remix, Nuxt"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Create React App"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"MPA"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Ruby on Rails, Django*"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This combination isn't practical"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"* Refers to the default mode of server-side web frameworks which render HTML and routing is done on server side."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What top e-commerce sites use","link":{"type":"url","url":"#what-top-e-commerce-sites-use"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Let's take a look at e-commerce sites in the wild and their rendering choices:"}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Architecture"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"UI Framework"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Amazon"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"MPA"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SSR"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In-house"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"eBay"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"MPA"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SSR"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Marko","link":{"type":"url","url":"https://markojs.com/"}}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Walmart"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SPA"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SSR"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Flipkart"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SPA"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SSR"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"All these e-commerce sites use SSR!"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" This suggests the importance of using SSR for e-commerce sites."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The discussion below assumes that we'll be using a universal rendering approach of SSR + SPA."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data model","link":{"type":"url","url":"#data-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are quite a number of entities involved in an e-commerce website due to the complexity of the user flow spanning across multiple pages."}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Entity"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Source"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Belongs To"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fields"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ProductList"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Product Listing Page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"products"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (list of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Product"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s), "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pagination"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (pagination metadata)"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Product"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Product Listing Page, Product Details Page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"name"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"description"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"unit_price"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"currency"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"primary_image"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"image_urls"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Cart"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client Store"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"items"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (list of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"CartItem"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s), "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"total_price"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"currency"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"CartItem"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client Store"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"quantity"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"product"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"price"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"currency"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"AddressDetails"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User input (Client)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Checkout Page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"name"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"country"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"street"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"city"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", etc."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"PaymentDetails"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User input (Client)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Checkout Page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"card_number"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"card_expiry"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"card_cvv"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Few points for discussion:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Cart"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" entity belongs to the Client Store because some websites might want to show the number of cart items in the navbar or have a popup to allow users to quickly access the cart items and make modifications. If there's no such need then it's acceptable for the cart to belong to the Cart page."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Cart"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"CartItem"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" have "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"total_price"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"price"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" fields respectively fetched as part of the server response instead of having the client compute the price (multiply the quantity by the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"unit_price"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") to give the flexibility of applying discounts due to bulk purchase or use of promo codes. The price computation logic is defined on the server, so the final price should be computed on the server and the client should rely on the server to calculate the total price instead of making its own calculations."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since our website has an international audience, we should have localized prices in the user's currency, hence the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"currency"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" field."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interface definition (API)","link":{"type":"url","url":"#interface-definition-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We need the following HTTP APIs:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Product Information"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fetch products listing"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fetch a particular product's detail"}}]}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cart Modification"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Add a product to the cart"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Change quantity of a product in the cart"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Remove a product from the cart"}}]}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Complete the order"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We will omit discussing about the APIs between the client components because the data format and functionalities are similar to the HTTP APIs."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We can also assume that a user only has a maximum of one cart and the user's current cart can be retrieved on the server. Hence we can omit passing the cart ID as arguments for any APIs related to cart modification."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fetch products listing","link":{"type":"url","url":"#fetch-products-listing"}}}]}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Field"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Value"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP Method"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"GET"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Path"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"/products"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fetches a list of products."}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameters","link":{"type":"url","url":"#parameters"}}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameter"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"size"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Number of results per page"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Page number to fetch"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"country"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"string"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Country for the user, determines the currency"}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sample response","link":{"type":"url","url":"#sample-response"}}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"pagination\": {\n    \"size\": 5,\n    \"page\": 2,\n    \"total_pages\": 4,\n    \"total\": 20\n  },\n  \"results\": [\n    {\n      \"id\": 123, // Product ID.\n      \"name\": \"Cotton T-shirt\",\n      \"primary_image\": \"https://www.greatcdn.com/img/t-shirt.jpg\",\n      \"unit_price\": 12,\n      \"currency\": \"USD\"\n    }\n    // ... More products.\n  ]\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We use offset-based pagination here as opposed to cursor-based pagination because:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Having page numbers is useful for navigating between search results and jumping to specific pages."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Product results do not suffer from the stale results issue that much as new products are not added that quickly/frequently."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It's useful to know how many total results there are."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For a more in-depth comparison between offset-based pagination and cursor-based pagination, refer to the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"News Feed system design article","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/news-feed-facebook"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fetch product details","link":{"type":"url","url":"#fetch-product-details"}}}]}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Field"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Value"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP Method"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"GET"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Path"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"/products/{productId}"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fetches the details of a product."}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameters","link":{"type":"url","url":"#parameters-1"}}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameter"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"productId"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"ID of product to be fetched"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"country"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"string"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Country for the user, determines the currency"}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sample response","link":{"type":"url","url":"#sample-response-1"}}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"id\": 123, // Product ID.\n  \"name\": \"Cotton T-shirt\",\n  \"primary_image\": \"https://www.greatcdn.com/img/t-shirt.jpg\",\n  \"image_urls\": [\n    \"https://www.greatcdn.com/img/t-shirt.jpg\",\n    \"https://www.greatcdn.com/img/t-shirt-black.jpg\",\n    \"https://www.greatcdn.com/img/t-shirt-red.jpg\"\n  ],\n  \"unit_price\": 12,\n  \"currency\": \"USD\"\n}"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Add a product to cart","link":{"type":"url","url":"#add-a-product-to-cart"}}}]}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Field"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Value"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP Method"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"POST"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Path"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"/cart/products"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Add a product to the cart"}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameters","link":{"type":"url","url":"#parameters-2"}}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameter"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"productId"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"ID of product to be added"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"quantity"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Number of items to be added"}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sample response","link":{"type":"url","url":"#sample-response-2"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The updated cart object is returned."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"id\": 789, // Cart ID.\n  \"total_price\": 24,\n  \"currency\": \"USD\",\n  \"items\": [\n    {\n      \"quantity\": 2,\n      \"price\": 24,\n      \"currency\": \"USD\",\n      \"product\": {\n        \"id\": 123, // Product ID.\n        \"name\": \"Cotton T-shirt\",\n        \"primary_image\": \"https://www.greatcdn.com/img/t-shirt.jpg\"\n      }\n    }\n  ]\n}"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Change quantity of product in cart","link":{"type":"url","url":"#change-quantity-of-product-in-cart"}}}]}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Field"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Value"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP Method"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"PUT"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Path"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"/cart/products/{productId}/"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Change quantity of a product in the cart"}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameters","link":{"type":"url","url":"#parameters-3"}}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameter"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"productId"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"ID of product to be modified"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"quantity"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"New quantity of the product"}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sample response","link":{"type":"url","url":"#sample-response-3"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The updated cart object is returned."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"id\": 789, // Cart ID.\n  \"total_price\": 24,\n  \"currency\": \"USD\",\n  \"items\": [\n    {\n      \"quantity\": 3,\n      \"price\": 36,\n      \"currency\": \"USD\",\n      \"product\": {\n        \"id\": 123, // Product ID.\n        \"name\": \"Cotton T-shirt\",\n        \"primary_image\": \"https://www.greatcdn.com/img/t-shirt.jpg\"\n      }\n    }\n  ]\n}"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Remove product from cart","link":{"type":"url","url":"#remove-product-from-cart"}}}]}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Field"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Value"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP Method"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DELETE"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Path"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"/cart/products/{productId}"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Remove a product from the cart"}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameters","link":{"type":"url","url":"#parameters-4"}}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameter"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"productId"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"ID of product to be removed"}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sample response","link":{"type":"url","url":"#sample-response-4"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The updated cart object is returned."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"id\": 789, // Cart ID.\n  \"total_price\": 0,\n  \"currency\": \"USD\",\n  \"items\": []\n}"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Place order","link":{"type":"url","url":"#place-order"}}}]}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Field"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Value"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP Method"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"POST"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Path"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"/order"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Create an order from a cart"}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameters","link":{"type":"url","url":"#parameters-5"}}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameter"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"cartID"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"ID of the cart containing the items"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"address_details"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"object"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Object containing address fields"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"payment_details"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"object"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Object containing payment method fields (credit card)"}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sample response","link":{"type":"url","url":"#sample-response-5"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The order object is returned upon successful order creation."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"id\": 456, // Order ID.\n  \"total_price\": 36,\n  \"currency\": \"USD\",\n  \"items\": [\n    // ... Same items as per the cart.\n  ],\n  \"address_details\": {\n    \"name\": \"John Doe\",\n    \"country\": \"US\",\n    \"address\": \"1600 Market Street\",\n    \"city\": \"San Francisco\"\n    // ... Other address fields.\n  },\n  \"payment_details\": {\n    // Only show the last 4 digits.\n    // We shouldn't be storing the credit card number\n    // unencrypted anyway.\n    \"card_last_four_digits\": \"1234\"\n  }\n}"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Notes","link":{"type":"url","url":"#notes"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Depending on whether we want to optimize for returning users, we might want to save the address and payment details on the cart object so that people who abandoned the cart after filling up the checkout form but before placing the order and resume from where they left off without having to fill up the forms again."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimizations and deep dive","link":{"type":"url","url":"#optimizations-and-deep-dive"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance","link":{"type":"url","url":"#performance"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance is absolutely critical for e-commerce websites. Seemingly small performance improvements can lead to significant revenue and conversion increases. A "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"study by Google and Deloitte","link":{"type":"url","url":"https://web.dev/milliseconds-make-millions/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" showed that even a 0.1 second improvement in load times can improve conversion rates across the purchase funnel. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"web.dev by Google has a long list of case studies of how improving site performance led to improved conversions","link":{"type":"url","url":"https://web.dev/tags/case-study/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"General performance tips","link":{"type":"url","url":"#general-performance-tips"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Code split JavaScript by routes/pages."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Split content into separate sections and prioritize above-the-fold content while lazy loading below-the-fold content."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Defer loading of non-critical JavaScript (e.g. code needed to show modals, dialogs, etc.)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Prefetch JavaScript and data needed for the next page upon hover of links/buttons."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Prefetch full product details needed by PDPs when users hover over items in PLPs."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Prefetch checkout page while on the cart page."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimize images with lazy loading and adaptive loading."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Prefetching top search results."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Core Web Vitals","link":{"type":"url","url":"#core-web-vitals"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Know the various core web vital metrics, what they are, and how to improve them."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Largest Contentful Paint (LCP)","link":{"type":"url","url":"https://web.dev/lcp/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The render time of the largest image or text block visible within the viewport, relative to when the page first started loading."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimize performance – loading of JavaScript, CSS, images, fonts, etc."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"First Input Delay (FID)","link":{"type":"url","url":"https://web.dev/fid/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Measures load responsiveness because it quantifies the experience users feel when trying to interact with unresponsive pages. A low FID helps ensure that the page is usable."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reduce the amount of JavaScript needed to be executed on page load."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cumulative Layout Shift (CLS)","link":{"type":"url","url":"https://web.dev/cls/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Measures visual stability because it helps quantify how often users experience unexpected layout shifts. A low CLS helps ensure that the page is delightful."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Include size attributes on images and video elements or reserve space for these elements using CSS "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aspect-ratio","link":{"type":"url","url":"https://developer.mozilla.org/docs/Web/CSS/aspect-ratio"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to reserve the required space for images while the images are loading. Use CSS "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"min-height","link":{"type":"url","url":"https://developer.mozilla.org/docs/Web/CSS/min-height"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to minimize layout shifts while elements are lazy loaded."}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Search engine optimization","link":{"type":"url","url":"#search-engine-optimization"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SEO is extremely important for e-commerce websites as organic search is the primary way people discover products."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"PDPs should have proper "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<title>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<meta>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags for description, keywords, and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"open graph tags","link":{"type":"url","url":"https://ahrefs.com/blog/open-graph-meta-tags/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Generate a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"sitemap.xml"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to tell crawlers the available pages of the website."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"JSON structured data","link":{"type":"url","url":"https://web.dev/structured-data/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to help search engines understand the kind of content on your page. For the e-commerce case, the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Product","link":{"type":"url","url":"https://developers.google.com/search/docs/appearance/structured-data/product"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" type","link":{"type":"url","url":"https://developers.google.com/search/docs/appearance/structured-data/product"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" would be the most relevant."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use semantic markup for elements on the page, which also helps accessibility."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Ensure fast loading times to help the website rank better in Google search."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use SSR for better SEO because search engines can index the content without having to wait for the page to be rendered (in the case of CSR)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pre-generate pages for popular searches or lists."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Travel Booking (Airbnb) system design article","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/travel-booking-airbnb"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" goes into more details about SEO."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Images","link":{"type":"url","url":"#images"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Images are one of the largest contributors to page size and serving optimized images is absolutely essential on e-commerce websites which are image heavy where every product has at least one image."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WebP image format","link":{"type":"url","url":"https://web.dev/serve-images-webp/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" which is the most efficient image format that currently exists. eBay uses WebP format across all their web, Android and iOS apps. Ensure you are able to articulate on a high level why WebP format is superior."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Images should be hosted on a CDN."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Define the priority of the images and divide them into critical and non-critical assets."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lazy load below-the-fold images."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img loading=\"lazy\">"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" for non-critical images."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Load critical images early."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Inline the image within the HTML as a data blob so that there's no need to make a separate HTTP request to fetch the image."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<link rel=\"preload\">"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" so they download as soon as possible."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Adaptive loading","link":{"type":"url","url":"https://web.dev/adaptive-loading-cds-2019/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" of images, loading high-quality images for devices on fast networks and using lower-quality images for devices on slow networks."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Form optimizations","link":{"type":"url","url":"#form-optimizations"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Filling in forms is a huge part of the checkout flow and a very troublesome one at that. It is the last step of the checkout process and nailing a good checkout experience will greatly help in the conversion rate."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Completing forms is especially painful for mobile devices and extra attention has to be given to optimize forms for mobile. There are two kinds of forms to fill out during checkout, which are the shipping address forms and credit card forms."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Country-specific address forms","link":{"type":"url","url":"#country-specific-address-forms"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Different countries have different address formats. To optimize for global shipping, having localized address forms help greatly in improving conversions and that users do not drop off when filling out the address forms because they do not know how to understand certain fields. For example:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"ZIP Code\"s are called \"Postal Code\"s in the United Kingdom."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are no states in the Japan, only prefectures."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Different countries have their own postal/zip code formats and require different validation."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It is a hassle to have to find out these country-specific knowledge and also build these yourself, this is where services like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Stripe Checkout","link":{"type":"url","url":"https://checkout.stripe.dev/preview"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" come in helpful by providing a localized checkout form. Users will complete the rest of the payment flow on Stripe's platform."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Examples of Stripe checkout form for different countries"}}]}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"US"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"UK"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[],[]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Further reading: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Frank's Compulsive Guide to Postal Addresses","link":{"type":"url","url":"http://www.columbia.edu/~fdc/postal/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":" provides useful links and extensive guidance for address formats in over 200 countries."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimize autofilling","link":{"type":"url","url":"#optimize-autofilling"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Filling up forms, especially long ones, are prone to typo errors. Most modern browsers have a feature called autofill, where they help users enter data faster and avoid filling up the same form data again by using values from similar forms filled previously."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Help users autofill their address forms by specifying the right "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"type"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autocomplete"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" values for the form "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s for the shipping address forms and credit card forms."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Shipping Address Form"}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Field"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autocomplete"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Others"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Name"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"text"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"shipping name"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autocorrect=\"off\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"spellcheck=\"false\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Country"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<select>"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"shipping country"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"N/A"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Address line 1"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"text"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"shipping address-line1"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autocorrect=\"off\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"spellcheck=\"false"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Address line 2"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"text"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"shipping address-line1"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autocorrect=\"off\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"spellcheck=\"false"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"City"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"text"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"shipping address-level2"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autocorrect=\"off\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"spellcheck=\"false"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"State"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<select>"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"shipping address-level1"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"N/A"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Postal Code"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"text"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"shipping postal-code"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autocorrect=\"off\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"spellcheck=\"false"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"inputmode=\"numeric\""}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Credit Card Form"}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Field"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autocomplete"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Others"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Card Number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"text"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"cc-number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autocorrect=\"off\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"spellcheck=\"false"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"inputmode=\"numeric\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Card Expiry"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"text"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"cc-exp"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autocorrect=\"off\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"spellcheck=\"false"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"inputmode=\"numeric\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Card CVC"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"text"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"cc-csc"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autocorrect=\"off\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"spellcheck=\"false"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"inputmode=\"numeric\""}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Notes"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"inputmode=\"numeric\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" provides a hint to browsers for devices with onscreen keyboards to help them decide which keyboard to display. Unlike "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input type=\"number\">"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"inputmode=\"numeric\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" does not prevent users from typing non-numeric values, they simply affect the keyboard being shown. As these numeric fields are not related to quantity, the chevrons which appear when using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input type=\"number\">"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" are not too helpful. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input type=\"text\" inputmode=\"numeric\">"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" also works with the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"maxlength"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"minlength"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pattern"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attributes, but do not work with "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input type=\"number>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Read more about forms:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Autofilling | web.dev","link":{"type":"url","url":"https://web.dev/learn/forms/autofill/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Autofill on Browsers: A Deep Dive | eBay Engineering Blog","link":{"type":"url","url":"https://tech.ebayinc.com/engineering/autofill-deep-dive/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alternative ways of address input","link":{"type":"url","url":"#alternative-ways-of-address-input"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Instead of making users fill up a form containing granular address fields, there are other approaches which may be easier, at the cost of engineering complexity or reliance on external services:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Address search/autocomplete"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Allow users to search for an address by typing in their street number and letting them select from a list of suggestions. This reduces typos and is generally faster. However, users should still be given the option to override some values in case none of the suggestions are correct, which can happen due to an outdated address database. Google Maps JavaScript API provides this via "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Place Autocomplete library","link":{"type":"url","url":"https://developers.google.com/maps/documentation/javascript/place-autocomplete"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Selecting address location from a map"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Open up a map and allow users to pinpoint a location on the map. This is less common for checkout addresses and more common for ridehailing applications."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Error messages","link":{"type":"url","url":"#error-messages"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Leverage client-side validation and clearly communicate any form errors. Connect the error message to the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" via "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-describedby"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-live=\"assertive\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" for the error message."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<form>\n  <div>\n    <label for=\"name\">Name</label>\n    <input\n      required\n      minlength=\"6\"\n      type=\"text\"\n      id=\"name\"\n      name=\"name\"\n      aria-describedby=\"name-error-message\" />\n    <span\n      id=\"name-error-message\"\n      aria-live=\"assertive\"\n      class=\"name-error-message\">\n      Name must have at least 6 characters!\n    </span>\n  </div>\n  <button>Submit</button>\n</form>"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Source: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Help users find the error message for a form control | web.dev","link":{"type":"url","url":"https://web.dev/learn/forms/accessibility/#help-users-find-the-error-message-for-a-form-control"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Focus states","link":{"type":"url","url":"#focus-states"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Make the currently focused form control visually different from the other form inputs to help users identify which element is being focused."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Best practices for payment and address forms","link":{"type":"url","url":"#best-practices-for-payment-and-address-forms"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Read more about building good "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Payment forms","link":{"type":"url","url":"https://web.dev/learn/forms/payment/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Address forms","link":{"type":"url","url":"https://web.dev/learn/forms/address/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"general form best practices","link":{"type":"url","url":"https://web.dev/payment-and-address-form-best-practices/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" on web.dev."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Internationalization (i18n)","link":{"type":"url","url":"#internationalization-i18n"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Have pages translated in the supported languages."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Set the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"lang"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute on the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"html"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tag (e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<html lang=\"zh-cn\">"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") to tell browsers and search engines the language of the page which helps browsers offer a translation of the page."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Provide support for RTL languages by using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"CSS Logical Properties","link":{"type":"url","url":"https://web.dev/learn/css/logical-properties/"}}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Forms"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use a single form fields for names."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Allow for various address formats. This is covered in the section above on address forms."}}]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Read more:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Internationalization and localization | Forms | web.dev","link":{"type":"url","url":"https://web.dev/learn/forms/internationalization/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Internationalization | Design | web.dev","link":{"type":"url","url":"https://web.dev/learn/design/internationalization/"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accessibility","link":{"type":"url","url":"#accessibility"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use semantic elements where possible: headings, buttons, links, inputs instead of styled "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<div>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags should have the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"alt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute specified or left empty if the merchant did not provide a description for them."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Building accessible forms has been covered in detail above. In summary:"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s should have associated "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<label>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s are linked to their error messages via "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-describedby"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and error messages are announced with "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-live=\"assertive\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s of the correct "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"type"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s and appropriate validation-related attributes like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pattern"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"minlength"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"maxlength"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Visual order matches DOM order."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Make the currently focused form control obvious."}}]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Reference: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Accessibility | Forms | web.dev","link":{"type":"url","url":"https://web.dev/learn/forms/accessibility/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"WebAIM: Creating Accessible Forms","link":{"type":"url","url":"https://webaim.org/techniques/forms/"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Security","link":{"type":"url","url":"#security"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since payment details are highly sensitive, we have to make sure the website is secure:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Use HTTPS so that all communication with the server is encrypted and that other users on the same Wi-FI network cannot intercept and obtain any sensitive details."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Payment details submission API should not be using HTTP "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"GET"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" because the sensitive details will be included as a query string in the request URL which will get added to the browsing history which is potentially unsafe if the browser is shared by other users. Use HTTP "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"POST"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" or "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"PUT"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" instead."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Source: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Security and privacy | web.dev","link":{"type":"url","url":"https://web.dev/learn/forms/security-privacy/"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User experience","link":{"type":"url","url":"#user-experience"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Make the checkout page clean (e.g. minimal navbar and footer) and remove distractions to reduce bounce rate."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Allow persisting cart contents (either in database or cookies) as some people spend time researching and considering, only making the purchase during subsequent sessions. You don't want them to have to add all of the items to their cart again."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Make promo code fields less prominent so that people without promo codes will not leave the page to search the web for a promo code. Those who have a promo code beforehand will take the effort to find the promo code input field."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"References","link":{"type":"url","url":"#references"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Shopping for speed on eBay.com | web.dev","link":{"type":"url","url":"https://web.dev/shopping-for-speed-on-ebay/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Case Study | web.dev","link":{"type":"url","url":"https://web.dev/tags/case-study/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How Rakuten 24's investment in Core Web Vitals increased revenue per visitor by 53.37% and conversion rate by 33.13% | web.dev","link":{"type":"url","url":"https://web.dev/rakuten/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Speed By A Thousand Cuts","link":{"type":"url","url":"https://tech.ebayinc.com/engineering/speed-by-a-thousand-cuts/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How focusing on web performance improved Tokopedia's click-through rate by 35% | web.dev","link":{"type":"url","url":"https://web.dev/tokopedia/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Autofill on Browsers: A Deep Dive","link":{"type":"url","url":"https://tech.ebayinc.com/engineering/autofill-deep-dive/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering on the Web | web.dev","link":{"type":"url","url":"https://web.dev/rendering-on-the-web/"}}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Changelog","link":{"type":"url","url":"#changelog"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024/08/21"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Allow add product API to specify the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"quantity"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" field"}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024/02/27"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Revised API routes to be more REST-ful"}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024/01/12"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fix incorrect image for product details page"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update architecture and rendering choices for top e-commerce websites"}}]}}]}}],"questionsMarkdown":null,"answerMarkdown":null,"time":"40 mins"},{"title":"Pinterest","difficulty":"Hard","url":"https://www.greatfrontend.com/questions/system-design/pinterest?practice=practice&tab=system-design","questionBlocks":[{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Masonry layout is a popular and flexible grid-based layout design. Unlike traditional grids, where elements in the same row have the same height, elements are placed within columns but can have varying heights, resulting in a more organic and visually interesting arrangement."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Such a layout uses space efficiently as it fills up most of the available screen estate with its contents and leaves little white space between elements. It is commonly used for presenting user-generated media like images and GIFs. The most famous site with this layout is "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pinterest","link":{"type":"url","url":"https://pinterest.com/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Question"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pinterest homepage","link":{"type":"url","url":"https://pinterest.com/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", with a focus on the masonry layout."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/pinterest/pinterest-example.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pinterest front end system design questions are commonly asked in two manners:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design the Pinterest homepage which covers page architecture, masonry layout, data fetching, etc."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design a masonry component, discussing the props, layout approach, etc."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We will focus on the former but also provide enough content and guidance for the latter. In fact, the actual masonry component Pinterest uses on their homepage is built in "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React and open sourced","link":{"type":"url","url":"https://gestalt.pinterest.systems/web/masonry"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"! You can dive into the source code to know the ins and outs of the component and also use it on your own sites."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Pinterest is essentially an image feed with a multi-column layout. Hence it shares many similarities with the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"News Feed system design","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/news-feed-facebook"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Instagram system design","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/photo-sharing-instagram"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". Please have a read of those questions before starting on this. For this question, the discussion will be centered around the masonry layout and less about general feed optimizations."}}]}}],"answerBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requirements exploration","link":{"type":"url","url":"#requirements-exploration"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What are the core features to be supported?","link":{"type":"url","url":"#what-are-the-core-features-to-be-supported"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Masonry layout of feed items (pins)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"More items should be loaded in as the user scrolls down."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How should the pins be ordered?","link":{"type":"url","url":"#how-should-the-pins-be-ordered"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As much as possible, the pins should be placed respecting their position within the feed, i.e. pins that are at the front of the returned results should appear higher on the page."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What kind of pins/items are supported?","link":{"type":"url","url":"#what-kind-of-pinsitems-are-supported"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Focus on just images. Exclude videos and GIFs."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What devices will the application be used on?","link":{"type":"url","url":"#what-devices-will-the-application-be-used-on"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Primarily desktop, but should be usable on mobile and tablet as well."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Glossary","link":{"type":"url","url":"#glossary"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We'll refer to \"feed items\" as \"pins\" and use them interchangeably below. A pin contains basic metadata such as the image, subtitle, etc."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Architecture / high-level design","link":{"type":"url","url":"#architecture--high-level-design"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server-side rendering (SSR) or Client-side rendering (CSR)?","link":{"type":"url","url":"#server-side-rendering-ssr-or-client-side-rendering-csr"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For a website like Pinterest, which is known for its visual content and user interactivity, a hybrid approach might be a good choice. Pinterest has a complex user interface with endless scrolling and dynamic content. Initially, you might use SSR for the landing page and critical content (for SEO and fast initial load), and then switch to CSR for interactivity as users browse pins and boards."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In reality, Pinterest uses a hybrid rendering strategy that involves SSR with hydration. The initial pins markup and data are included in the initial HTML, but without any positioning data. This will be covered in more detail below."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Single-page application (SPA) or Multi-page application (MPA)?","link":{"type":"url","url":"#single-page-application-spa-or-multi-page-application-mpa"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In feed applications, it's a common UX for the full contents of a pin to be opened within a modal, overlaying the feed. When the user closes the modal, users can continue scrolling the feed from where they left off. This UX is present on Facebook and Instagram, as well as Pinterest."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Hence it's crucial to use SPAs, at least for the feed and the pin details routes so that browsing individual pins can use a client-side navigation to the pin details route. In MPAs, a full page navigation will destroy the current's page DOM and feed data stored in-memory, causing the scroll position of the previous page to be lost if the user clicks the \"Back\" button."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Component responsibilities","link":{"type":"url","url":"#component-responsibilities"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/pinterest/pinterest-architecture.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The architecture diagram of a Pinterest feed is relatively simple since we are only focusing on the feed and layout."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Provides HTTP APIs to fetch the feed of pins and also subsequent pages of pins as the user scrolls through the feed."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client store"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Stores data needed across the whole application. For this question there's a list of pins to be stored."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Homepage"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Displays the list of pins."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Masonry component"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": UI component that takes in a list of pins and displays them in a masonry layout."}}]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Conventionally, we have \"controller\" and \"client store\" as separate entities, but since the types of data involved and data fetching required for the feed is fairly limited, we can combine the controller into the client store and make the client store take up data fetching responsibilities. However, in practice there are many more state values and interactions to handle and a separation would be beneficial."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data model","link":{"type":"url","url":"#data-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The homepage feed shows a list of pins fetched from the server, hence most of the data involved in this application will be server-originated data. These pins data will be augmented with positioning data used by the masonry layout."}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Entity"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Source"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Belongs to"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fields"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Feed"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Homepage"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pins"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (list of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Pin"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s), "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pagination"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (pagination metadata)"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Pin"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Homepage"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"id"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"created_time"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"image_url"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"alt_text"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", ...and more, see below"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Although the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Feed"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Pin"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" entities belong to the homepage, all server-originated data can be stored in the client store and queried by components which need them. E.g. for a pin details page, assuming no additional data is needed, it can read the pin details from the client store and display additional details such as the author, title, description."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The shape of the client store is not particularly important here, as long as it is in a format that can be easily retrieved from the components. A normalized store like the one mentioned in "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"News Feed system design","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/news-feed-facebook#advanced-normalized-store"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" will allow efficient lookup via the pin ID. New pins fetched from the second page should be joined with the previous pins into a single list with the pagination parameters ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"cursor"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") updated."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pinterest-specific data","link":{"type":"url","url":"#pinterest-specific-data"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Due to the masonry layout requirements of Pinterest, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Pin"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s include additional metadata that enables the layout and an improved user experience like:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image dimensions (height & width)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": So that we can use the data for calculating layout without having to first load the image."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Ordering"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Where to place the pin. Details covered in the section below on \"implementing masonry layout\". "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"More details below.","link":{"type":"url","url":"#ordering-items-within-columns"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Responsive image dimensions"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This is a list of image URLs and their corresponding sizes, to facilitate responsive and performant masonry layout. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"More details below.","link":{"type":"url","url":"#responsive-images"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pin state"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Whether a pin's image is loaded, painted/displayed, or errored. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"More details below.","link":{"type":"url","url":"#advanced-paint-scheduling"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dominant color (hex value)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The dominant color to be used as the background for the placeholder while the image loads. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"More details below.","link":{"type":"url","url":"#loading-states"}}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interface definition (API)","link":{"type":"url","url":"#interface-definition-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For this question, all we need is a single HTTP API for fetching the feed data:"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed API","link":{"type":"url","url":"#feed-api"}}}]}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Field"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Value"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP Method"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"GET"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Path"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"/feed"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fetches a list of pins."}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameters","link":{"type":"url","url":"#parameters"}}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Parameter"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"size"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"number"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Number of results per page."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"cursor"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"string"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"An identifier for the last item fetched. The server will continue from this item."}}]]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sample response","link":{"type":"url","url":"#sample-response"}}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"pagination\": {\n    \"size\": 20,\n    \"next_cursor\": \"=dXNlcjpVMEc5V0ZYTlo\"\n  },\n  \"pins\": [\n    {\n      \"id\": 123, // Pin ID.\n      \"created_at\": \"Sun, 01 Oct 2023 17:59:58 +0000\",\n      \"alt_text\": \"Pixel art turnip\",\n      \"dominant_color\": \"#ffd4ec\",\n      \"image_url\": \"https://www.greatcdn.com/img/941b3f3d917f598577b4399b636a5c26.jpg\"\n      // In practice, the images payload is more complex, see below.\n      // More metadata is also included.\n    }\n    // ... More pins.\n  ]\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In practice, Pinterest's feed API doesn't include a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"size"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" parameter and always returns 25 pins. If you're interested to see the full feed payload for yourself:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Visit "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://pinterest.com","link":{"type":"url","url":"https://pinterest.com/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" in your browser."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Open the network tab."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Scroll down to fetch the next page of feed data."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Filter for the request URL starting with \""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.pinterest.com/resource/UserHomefeedResource/get","link":{"type":"url","url":"https://www.pinterest.com/resource/UserHomefeedResource/get"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alternatively, log in to Pinterest and visit \""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.pinterest.com/resource/UserHomefeedResource/get","link":{"type":"url","url":"https://www.pinterest.com/resource/UserHomefeedResource/get"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pagination approach","link":{"type":"url","url":"#pagination-approach"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For infinite scrolling feeds there isn't a need to jump to a specific page, hence cursor-based pagination can be used here for reasons similar to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"News Feed system design","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/news-feed-facebook#cursor-based-pagination"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimizations and deep dive","link":{"type":"url","url":"#optimizations-and-deep-dive"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For conventional feeds, a reasonable flow for displaying feed images is as follows:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Load data"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Fetch feed data containing a list of feed items from the server."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Render"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Display the image by adding an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tag to the DOM."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image loading + Painting"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The browser downloads the image from the CDN and paints it to the screen."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However for Pinterest, the flow is a bit different due to the following:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Multi-column layout"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The multi-column layout makes things more complex than a single-column news feed. Traditional CSS layouts using flex and grid aren't well-suited for producing masonry layouts."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Multiple images present on-screen"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Many images are present on the screen at once. It'd be a poor experience for the images to be painted out-of-order."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Taking these into account, the most important aspects of a Pinterest homepage feed to dive into are:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Resource loading (feed and media)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Masonry layout implementation."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"An advanced technique, paint scheduling will also be discussed."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are two types of resources to be loaded: feed item (pins) data and each pin's images. For a fast initial load and paint, Pinterest does the following optimizations:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The homepage is SSR-ed, meaning the initial HTML returned by the server already contains the near-final markup and includes the pins' "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags. Because of this, there's no need for the client to make a client-side request to the feed API and fetch pins data over the network. The pins data can be serialized into JSON and injected into the client store."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Preload images using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<link rel=\"preload\">"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Feed loading","link":{"type":"url","url":"#feed-loading"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Beyond the initial page, when the user scrolls to the bottom of the loaded items, the next page of feed items has to be loaded and then displayed. This experience is called infinite scrolling and are two ways to trigger the loading:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Load the next page when the user has reached the bottom of the list. This is bad because the user has to wait for next page of items to be loaded, and then for the next page's images to be loaded, before the images are visible."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Load the next page when the user is near the bottom of the list, before the user reaches the bottom of the list. By doing this, the next page and their images will likely have already been loaded and can be shown immediately. The user does not have to wait for the image to load and won't see any loading states."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dynamic page size","link":{"type":"url","url":"#dynamic-page-size"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When fetching feed items, Pinterest uses a page size of 24 regardless of device, but this can be improved. For large displays, the feed API is requested very often as the user quickly reaches the end of the current feed. To prevent this, clients can specify a different value for "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"size"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" depending on the device dimensions:"}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Device"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Columns"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Possible "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"size"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" value"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Large/tall display"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"6 and above"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"40+"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Laptop"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"4 to 5"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"20 - 40"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Tablet"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"3"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"10 - 20"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mobile"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"10 - 20"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A plausible heuristic is to fetch around two to three screens worth of pins each time."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Infinite scrolling","link":{"type":"url","url":"#infinite-scrolling"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The common ways to implement infinite scrolling has been covered in "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"News Feed system design","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/news-feed-facebook#infinite-scrolling"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Media loading","link":{"type":"url","url":"#media-loading"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>","link":{"type":"url","url":"#img-tag-attributes"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tag attributes","link":{"type":"url","url":"#img-tag-attributes"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pinterest uses "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags with the following attributes:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"alt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Text description of the image, used when images fail to load and for screen readers."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"fetchpriority"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Provides a hint of the relative priority to use when fetching the image. It's not a standard yet. Pinterest uses "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"fetchpriority=\"auto\""}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"loading"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Indicates how the browser should load the image. Pinterest uses "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"loading=\"auto\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", which is the default value and not sure why it's necessary. Possible values include "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"lazy\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", which defers the load until the image or iframe reaches a distance threshold from the viewport."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"src"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The image URL."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"srcset"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Enables multiple image sources, each with different resolutions or sizes."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Responsive images","link":{"type":"url","url":"#responsive-images"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As mentioned above, the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"srcset"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute allows the browser to choose the most appropriate image source to display based on the user's device's screen size and resolution. It is a part of responsive web design techniques and helps optimize the loading of images for different screen sizes, which can enhance the user experience and save bandwidth."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In reality, Pinterest's feed API returns images in the following format and not just a single "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"image_url"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" string:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"id\": \"809944314208458040\",\n  \"alt_text\": \"Year End Sale Font Bundle\",\n  \"images\": {\n    \"170x\": {\n      \"width\": 170,\n      \"height\": 113,\n      \"url\": \"https://i.pinimg.com/170x/b5/5c/de/b55cde4a2ec2f7827b2deac1312cbd93.jpg\"\n    },\n    \"236x\": {\n      \"width\": 236,\n      \"height\": 157,\n      \"url\": \"https://i.pinimg.com/236x/b5/5c/de/b55cde4a2ec2f7827b2deac1312cbd93.jpg\"\n    },\n    \"474x\": {\n      \"width\": 474,\n      \"height\": 316,\n      \"url\": \"https://i.pinimg.com/474x/b5/5c/de/b55cde4a2ec2f7827b2deac1312cbd93.jpg\"\n    },\n    \"736x\": {\n      \"width\": 736,\n      \"height\": 491,\n      \"url\": \"https://i.pinimg.com/736x/b5/5c/de/b55cde4a2ec2f7827b2deac1312cbd93.jpg\"\n    },\n    \"orig\": {\n      \"width\": 1160,\n      \"height\": 774,\n      \"url\": \"https://i.pinimg.com/originals/b5/5c/de/b55cde4a2ec2f7827b2deac1312cbd93.jpg\"\n    }\n  }\n  // Other data fields omitted.\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"And results in such an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<img\n  alt=\"This contains an image of: Year End Sale Font Bundle\"\n  fetchpriority=\"auto\"\n  loading=\"auto\"\n  src=\"https://i.pinimg.com/236x/b5/5c/de/b55cde4a2ec2f7827b2deac1312cbd93.jpg\"\n  srcset=\"\n    https://i.pinimg.com/236x/b5/5c/de/b55cde4a2ec2f7827b2deac1312cbd93.jpg      1x,\n    https://i.pinimg.com/474x/b5/5c/de/b55cde4a2ec2f7827b2deac1312cbd93.jpg      2x,\n    https://i.pinimg.com/736x/b5/5c/de/b55cde4a2ec2f7827b2deac1312cbd93.jpg      3x,\n    https://i.pinimg.com/originals/b5/5c/de/b55cde4a2ec2f7827b2deac1312cbd93.jpg 4x\n  \" />"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"An alternative approach to achieve responsive images is to use the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<picture>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tag. The differences between "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img srcset=\"...\">"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" or "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<picture>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" are subtle and for most cases you can use either. The article "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Picture Tags vs Img Tags. Their Uses and Misuses\"","link":{"type":"url","url":"https://medium.com/@truszko1/picture-tags-vs-img-tags-their-uses-and-misuses-4b4a7881a8e1"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" does a decent job covering the differences."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image preloading","link":{"type":"url","url":"#image-preloading"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The images present in the initial load are preloaded via "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<link rel=\"preload\">"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". This tells the browser about critical resources that should be loaded as soon as possible, before they are discovered in HTML. This is especially useful for resources that are not easily discoverable, such as fonts included in stylesheets, background images, or resources loaded from a script. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Read more about this on web.dev","link":{"type":"url","url":"https://web.dev/articles/preload-responsive-images"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<!-- Sample extracted from Pinterest's HTML -->\n<link\n  rel=\"preload\"\n  nonce=\"7deba0d15af118e95df9c836e67724dc\"\n  href=\"https://i.pinimg.com/236x/83/84/3a/83843ab4e2cbdea8b99ead3e1f0654d1.jpg\"\n  imagesrcset=\"https://i.pinimg.com/236x/83/84/3a/83843ab4e2cbdea8b99ead3e1f0654d1.jpg 1x, https://i.pinimg.com/474x/83/84/3a/83843ab4e2cbdea8b99ead3e1f0654d1.jpg 2x, https://i.pinimg.com/736x/83/84/3a/83843ab4e2cbdea8b99ead3e1f0654d1.jpg 3x, https://i.pinimg.com/originals/83/84/3a/83843ab4e2cbdea8b99ead3e1f0654d1.jpg 4x\"\n  as=\"image\" />\n<link\n  rel=\"preload\"\n  nonce=\"7deba0d15af118e95df9c836e67724dc\"\n  href=\"https://i.pinimg.com/236x/02/f8/ac/02f8acb5e46eaa42a909f9be862f519b.jpg\"\n  imagesrcset=\"https://i.pinimg.com/236x/02/f8/ac/02f8acb5e46eaa42a909f9be862f519b.jpg 1x, https://i.pinimg.com/474x/02/f8/ac/02f8acb5e46eaa42a909f9be862f519b.jpg 2x, https://i.pinimg.com/736x/02/f8/ac/02f8acb5e46eaa42a909f9be862f519b.jpg 3x, https://i.pinimg.com/originals/02/f8/ac/02f8acb5e46eaa42a909f9be862f519b.png 4x\"\n  as=\"image\" />\n<!-- Preload 10 images in total -->"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Progressive JPEGs","link":{"type":"url","url":"#progressive-jpegs"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pin images are served as "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Progressive JPEGs","link":{"type":"url","url":"https://www.hostinger.com/tutorials/website/improving-website-performance-using-progressive-jpeg-images"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", which improve image quality with each scan. The conventional JPEG format (called baseline JPEG) loads images sequentially, rendering them line by line from top to bottom, with each line being pixel-perfect. As a result, it may take some time for the entire image to load completely."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"On the other hand, with progressive JPEG, the entire image initially appears as a single entity, albeit in a blurry and pixelated state. Over time, it progressively sharpens and refines until a clear, fully loaded image emerges."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Media formats","link":{"type":"url","url":"#media-formats"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are multiple image formats to use, each with their own pros and cons. The general recommendation these days is use the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WebP format by Google","link":{"type":"url","url":"https://developers.google.com/speed/webp"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" if browser compatibility is not the highest priority."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pinterest uses the JPEG format for images likely due to JPEGs having wider browser support (WebP isn't supported on IE11 and older versions of Safari) and because progressive JPEGs already provide a great loading experience. Pinterest's audience is the average consumer and hence browser support is crucial."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Layout and rendering","link":{"type":"url","url":"#layout-and-rendering"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"With feed and media loading covered, we can discuss how to present these data in a masonry layout and in an order that provides the best user experience."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Masonry layout implementation","link":{"type":"url","url":"#masonry-layout-implementation"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A masonry layout is notoriously difficult to implement. Achieving the signature \"brick wall\" or staggered layout of masonry requires precise positioning of items. This can be complex, especially when we want items to fit together neatly and utilize the available space optimally. Traditional CSS layouts using flex and grid aren't well-suited for producing masonry layouts."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are two popular ways to achieve a masonry layout on the web:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rows of columns"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Absolute positioning"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Row of columns"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This method involves rendering equal-width columns then placing items within each column. This approach heavily leverages the browser for positioning."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The pros of this approach are that it is easy to implement as it leverages "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"display: flex"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and the required CSS is not very complex. If the height of any item changes, the positions of the items within that column will be updated automatically."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, one huge downside is that the DOM order is now column-first. Imagine a keyboard user wants to get to the top pin in the rightmost column. With such a DOM:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<div class=\"container\">\n  <div class=\"column\">\n    <!-- Focus is currently here -->\n    <div class=\"item\">1</div>\n    <div class=\"item\">2</div>\n    <div class=\"item\">3</div>\n    <div class=\"item\">4</div>\n  </div>\n  <div class=\"column\">\n    <div class=\"item\">5</div>\n    <div class=\"item\">6</div>\n    <div class=\"item\">7</div>\n    <div class=\"item\">8</div>\n    <div class=\"item\">9</div>\n  </div>\n  <div class=\"column\">\n    <!-- Desired pin requires pressing the \"Tab\" key 9 times -->\n    <div class=\"item\">10</div>\n    <div class=\"item\">11</div>\n    <div class=\"item\">12</div>\n    <div class=\"item\">13</div>\n  </div>\n</div>"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The keyboard user has to tab through two columns of pins before finally reaching that item. This is counter-intuitive and frustrating when the desired pin is right at the top. This layout approach results in an inefficient DOM order for keyboard users, and is a deal-breaker."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The following example is implemented using the \"row of columns\" layout and the numbers within the items indicate the elements tabbing order."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pinterest layout row of columns","link":{"type":"url","url":"https://codesandbox.io/embed/f7s8vt?fontsize=14&hidenavigation=1&theme=dark&module=/src/index.html,/src/styles.css&view=split"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Absolute positioning"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A better approach is to calculate exactly where the pins should be positioned within a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"position: relative"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" parent container and place them exactly where they should be via "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"position: absolute; top: Y; left: X"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The following diagram demonstrates the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"top"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"left"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" CSS style values of the items for a 3-column layout container."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<div class=\"container\">\n  <div class=\"item\" style=\"height: 250px; top: 0px; left: 0px;\">1</div>\n  <div class=\"item\" style=\"height: 300px; top: 0px; left: 80px;\">2</div>\n  <div class=\"item\" style=\"height: 110px; top: 0px; left: 160px;\">3</div>\n  <div class=\"item\" style=\"height: 200px; top: 260px; left: 0px;\">4</div>\n  <div class=\"item\" style=\"height: 70px; top: 310px; left: 80px;\">5</div>\n  <div class=\"item\" style=\"height: 330px; top: 120px; left: 160px;\">6</div>\n</div>"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/pinterest/pinterest-layout-absolute-position.svg"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"With absolute positioning, the DOM order of the items does not affect the visual result at all. Hence we are free to arrange the DOM in the way the tabbing order should be."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The following example is implemented using the absolute positioning approach and the numbers within the items indicate the elements' tabbing order. Notice that there's only one layer of children nodes within the container; there's no nesting involved and the markup is very clean."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pinterest layout position absolute","link":{"type":"url","url":"https://codesandbox.io/embed/dqtrlk?fontsize=14&hidenavigation=1&theme=dark&module=/src/index.html,/src/styles.css&view=split"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Typically, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"absolute"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"-positioned elements are taken out of the normal document flow and usually do not affect the positioning or layout of other elements on the page. As a result, changes to these elements, such as their size or position, usually do not trigger a browser reflow. However, adding more pins to the bottom of the container, even though they are "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"absolute"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"-ly positioned, will increase the height of the container and result in reflows."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Another advantage of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"absolute"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" positioning is that list virtualization is easier to implement, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"more details below","link":{"type":"url","url":"#list-virtualization"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The downside of this approach is that the client has to write code to calculate where the pins should be as opposed to the \"rows of columns\" approach where the browser does it for us. Beyond the initial calculations, calculations will need to be done again for the whole feed if the window resizes past the breakpoints such that the number of columns is different."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Additionally, if any item's height changes, items below it will not be repositioned unless calculations are performed manually for the affected items and their positions are also updated."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"By default, the container isn't fluid and has a fixed width for a few predefined breakpoints. Even if the browser resizes slightly, as long as the number of columns remain the same, the calculated positions can still be used."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In practice, Pinterest uses CSS transforms (e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"transform: translateY(100px) translateX(100px)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") instead of using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"top: 100px"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"left: 100px"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", presumably because it is more performant to use CSS transforms. CSS transforms such as "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"translate"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"scale"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"rotate"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" are typically hardware-accelerated by modern web browsers. This means that the browser offloads the rendering of transformed elements to the GPU (Graphics Processing Unit), which can handle these operations more efficiently. Absolute positioning, on the other hand, doesn't always benefit from GPU acceleration to the same extent."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The general approach is the same though – the items are still positioned relative to the top left corner of the pins container."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pinterest's "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"open source Masonry React component","link":{"type":"url","url":"https://gestalt.pinterest.systems/web/masonry"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"renders the items offscreen to measure the height of the item","link":{"type":"url","url":"https://github.com/pinterest/gestalt/blob/master/packages/gestalt/src/Masonry/README.md#getpositions"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" before laying it out on the grid. This is because that component is a generic one built for use cases beyond the homepage feed, where items can contain contents (e.g. photo captions) where the height of the items are not known beforehand. For a Pinterest homepage feed where the entire item is an image, we already know the intrinsic ratio of the image. With a fixed column width, we can calculate the required height of the image/item. Hence there's no need to render offscreen to measure."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Even though this layout approach's implementation is more complex, it is more flexible and allows for better accessibility as we can control the tab order of elements.."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Ordering items within columns","link":{"type":"url","url":"#ordering-items-within-columns"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Now that we have established we should use absolute positioning for the items layout, the next thing we need to decide is how to order the items. Remember that pins that appear earlier in the feed should be placed above than the pins that appear later."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are two common ways to order the pins:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Round robin"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Height balancing"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Round robin placement"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": In round robin placement, we put the pins in order into each column, wrapping around to the first column after the last, until all pins have been placed. In a three-column layout, pins are placed in these respective columns:"}}]}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Column"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pins position (within feed)"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"1"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"1st, 4th, 7th, ..."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2nd, 5th, 8th, ..."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"3"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"3rd, 6th, 9th, ..."}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The example below shows some pins that are ordered in a round robin fashion within a 3-column layout using absolute positioning, as well as the round robin algorithm to achieve it."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pinterest order sequential","link":{"type":"url","url":"https://codesandbox.io/embed/gnszl2?fontsize=14&hidenavigation=1&theme=dark&module=/src/App.js,/src/styles.css&view=split"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The benefit of this approach is that the algorithm runs in O(N) and is easy to implement (just modulo by the columns size)."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, this approach does not factor in the items height at all. As a result, some columns might end up taller than others. Taking the above example, the first column contains a few tall items and ends up being substantially taller than the second column. The result might not be visually pleasing."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Height balancing"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": In height balancing placement, the pins are placed within the shortest column, at the time of arrangement."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For a three-column layout, we can use an array of size 3 ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"columnHeights"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") where the value at the index represents the running total height of items in that column. For each pin, by looping through the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"columnHeights"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" array once, we can determine the shortest column. Next, we calculate the pin's position based on the left-most column with the shortest current height and update that column's height for the newly-added pin."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"const pins = [\n  { height: 160, id: 1 },\n  { height: 70, id: 2 },\n  { height: 130, id: 3 },\n  { height: 160, id: 4 },\n  // ...\n];\n\n\nconst NUM_COLS = 3;\nconst GAP = 10;\nconst COL_WIDTH = 70;\n\n\nfunction arrangeHeightBalanced(pins) {\n  const columnHeights = Array(NUM_COLS).fill(0);\n\n\n  // For each pin, augment with position data.\n  return pins.map((pin) => {\n    // Find the shortest column.\n    let shortestCol = 0;\n    for (let i = 1; i < NUM_COLS; i++) {\n      if (columnHeights[i] < columnHeights[shortestCol]) {\n        shortestCol = i;\n      }\n    }\n\n\n    // Calculate the `left` value of the current pin.\n    const left = shortestCol * COL_WIDTH + Math.max(shortestCol, 0) * GAP;\n    // Calculate the `top` value of the current pin.\n    const top = GAP + columnHeights[shortestCol];\n    // Update the column height.\n    columnHeights[shortestCol] = top + pin.height;\n\n\n    return {\n      ...pin,\n      left,\n      top,\n      width: COL_WIDTH,\n    };\n  });\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pinterest order balanced","link":{"type":"url","url":"https://codesandbox.io/embed/tl4c5w?fontsize=14&hidenavigation=1&theme=dark&module=/src/App.js,/src/styles.css&view=split"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The result is a layout that the columns have generally balanced heights, which is more visually pleasing. Even though the algorithm now runs in O(N * columns), columns is a constant and at the scale of a realistic page containing hundreds of pins, the difference is negligible."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"columnHeights"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" computation should be preserved within the Masonry component as state so that when the next page of pins is loaded and need to be arranged on the page, the column heights are immediately known, there's no need to tally the height of the columns again or arrange the pins that are already on-screen."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server computations"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Currently, the computations are done on the client. For Pinterest, although SSR is being used, the initial HTML for the pins does not contain positioning data and the positions are calculated on the client. This is probably because the server does not know the viewport dimensions of the client."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pinterest grids have a few breakpoint widths for varying number of columns, so the total width of the container for each number of column is already known beforehand. It's technically possible to calculate the pins' positions on the server for all possible breakpoints and send them down to the client. The client just has to pick the pre-calculated values for the current breakpoint."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Assuming each pin is meant to be "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"200px wide"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and have a gap of "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"20px"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" between them, the total width of the container for each column:"}}]}},{"object":"block","type":"table","table":{"table_width":2,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Columns"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Container width"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"420px"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"3"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"640px"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"4"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"860px"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"5"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"1080px"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"6"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"1300px"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For laptops that have a display width of 1200px, there's only enough space for 5 columns, so they can directly use the pre-calculated pin positions for a 5-column layout. For mobile devices (usually under 600px), there's only enough space for 2 columns, so they can use the pre-calculated pin positions for a 2-column layout."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, this is probably a micro-optimization and server computations are hard to reuse for the subsequent feed loads as the positioning of the next page rely on what is currently displayed on the clients. It is also cleaner from an engineering perspective to offload all the positioning computation work to clients."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Responsiveness and resizing","link":{"type":"url","url":"#responsiveness-and-resizing"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"By using absolute positioning, we're not leveraging much of the browser's layout capabilities and thus have to reimplement the position calculations on our own. As mentioned above, the position calculations done are only good for the current number of columns, if the number of available columns change (e.g. due to resizing), the position calculations have to be done again."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We can add a listener to the page for the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"'resize'"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" event and recalculate the pin positions for the window width when the resize event is fired. However, the resize event fires very often, and recalculating so frequently can be expensive, especially if there are many pins on the page. Debouncing or throttling the event handler can reduce the number of times the positions are calculated. In reality, Pinterest uses debounce and only recalculate the layout when the window stops resizing."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"One possible optimization is to calculate the positions for every possible number of columns while the browser is idle."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Another edge case to consider is when the scroll position is very far down the page and the user resizes from 5 columns to 2 columns, assuming the scroll position stays the same, the user will be seeing pins far higher up from before resizing and the user probably won't be able to resume from where they left off."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Ideally, the scroll position is adjusted so that the user is still viewing the same pins. We can remember the pins that are being shown before resizing, then calculate an average y-position of the pins post-resizing and set that as the scroll position, which is quite complicated to execute. In Pinterest's case, users are scrolled all the way to the top when the number of column changes. Resizing is not a common occurrence so it's probably not worth handling."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pinterest's Masonry component","link":{"type":"url","url":"#pinterests-masonry-component"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"One awesome thing about Pinterest is that they have open sourced their React design system components, including the coveted "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Masonry component","link":{"type":"url","url":"https://gestalt.pinterest.systems/web/masonry"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"! There's even a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"short writeup","link":{"type":"url","url":"https://github.com/pinterest/gestalt/blob/master/packages/gestalt/src/Masonry/README.md"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" about how it works."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Some interesting things about the Masonry component:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It accepts a list of items and does not do any data fetching. It fires a callback to inform the parent when the user scrolls past a given threshold based on the height of the container, to fetch the next page of items."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Multiple layout strategies are supported:"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Default"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Yields a grid of items with a constant column width. This is the layout we have discussed above. ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"source","link":{"type":"url","url":"https://github.com/pinterest/gestalt/blob/master/packages/gestalt/src/Masonry/defaultLayout.js"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Uniform row"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Yields a grid of items in rows of uniform height. The height of the row will be the tallest item in the row. this is the same as a normal table behavior. ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"source","link":{"type":"url","url":"https://github.com/pinterest/gestalt/blob/master/packages/gestalt/src/Masonry/uniformRowLayout.js"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Full-width"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Yields a grid of items with flexible column widths. The grid will expand or shrink (by expanding or shrinking all column widths) to accommodate the width of its container; there are no breakpoints. ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"source","link":{"type":"url","url":"https://github.com/pinterest/gestalt/blob/master/packages/gestalt/src/Masonry/fullWidthLayout.js"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Virtualization can be enabled/disabled."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Read their "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"component docs","link":{"type":"url","url":"https://gestalt.pinterest.systems/web/masonry"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to see the full list of props and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"try out the component here","link":{"type":"url","url":"https://codesandbox.io/s/rhtyq2?file=/index.js"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Boundary dimensions for images","link":{"type":"url","url":"#boundary-dimensions-for-images"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since the columns are fixed and the images try to preserve their original aspect ratios, some weird results can occur."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Very tall images"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Very tall images can take up the entire column, making the page look odd when one of the columns takes up the entire page."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Very wide images"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Very wide images will have a very small height as they have to maintain the aspect ratio within the column width. As a result, users might only see a thin horizontal line and appear barely visible. An image that that is 1000px wide and 20px tall will only have a height of 2px when put within a 100px-wide column while maintaining the aspect ratio."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Hence there should be a maximum and minimum heights for the images. For such images, they can be positioned using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"object-fit: cover"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" so that the user can still get a glimpse some parts of the image."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Advanced: paint scheduling","link":{"type":"url","url":"#advanced-paint-scheduling"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In the discussion above, we never really bothered with when the image is being painted to the screen. We assumed that when the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tag is added to the DOM, the image shows up instantaneously."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The term \"painting\" is often used in the context of web rendering engines and web browsers. It refers to the final step in the rendering process, where the browser takes the calculated layout and style information and creates the actual pixels that make up the visible content of the web page. This involves determining the position, size, and appearance of every element on the page, and then rendering them as pixels on the user's screen."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For users with a fast internet connection, images show up as soon as the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags are added to the DOM. The images load very quickly and are painted to the screen almost immediately, within half a second. However, for users with slow internet connections, images take longer to load and take vastly different durations depending on the image size. This will result in images being painted in a random fashion which can look disorientating."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A more complex flow can be adopted to solve this problem:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Load data"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Fetch feed data containing a list of pins from the server."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Calculate layout"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Determine where to place a pin."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image loading"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The browser downloads the pin's image from the CDN. Images can be loaded without adding "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags to the DOM by doing "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"new Image()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" in JavaScript and then setting the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"src"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" field on the newly-created "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Image"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" object."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Paint scheduling"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Paints the image to the screen by adding an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tag to the DOM."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Steps 2 and 3 can be done in parallel. Step 4 requires step 2 and step 3 to be fully completed first. A naive and basic way is to wait for all the images to be loaded (Step 3 to be fully complete) before painting them to the screen."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Painting approaches","link":{"type":"url","url":"#painting-approaches"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Overall, there are the following painting approaches:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Simple default."}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" Render all the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags and images will appear as soon as they're loaded. This is the case we covered at the start and provides a poor experience for users with slow internet connection."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Load and paint sequentially."}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" This means loading a image, painting it, then repeat for the next image until there are no remaining images. This results in waterfall loading and painting, which is slow and makes little sense because image loading can be done in parallel across all the images. It's worse than the approach above."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Load in parallel, paint all at once."}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" This is not ideal as users will have to wait for the slowest image to be loaded before they see any images at all."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Load in parallel, paint in order."}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" This is the ideal approach where images are only shown if all images that come before it have been fully loaded."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"To achieve the ideal approach, significant coordination is required and can be complex to implement, but thankfully the awesome React team has a solution to this. The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Suspense","link":{"type":"url","url":"https://react.dev/reference/react/Suspense#revealing-content-together-at-once"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" component is able to coordinate rendering/painting and let us easily decide which parts of the UI should \"pop in\" together at the same time. There's also the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"SuspenseList"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" component that allows revealing of items in order. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"SuspenseList"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is not yet released but you can see how it works from the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React 2019 keynote","link":{"type":"url","url":"https://youtu.be/Tl0S7QkxFE4?t=921"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"try out these examples","link":{"type":"url","url":"https://react-suspense-img.netlify.app/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"To reduce the coordination needed, images that are not yet on screen can also be preloaded in the background so that they're ready to be painted into view as the user scrolls down."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance","link":{"type":"url","url":"#performance"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"List virtualization","link":{"type":"url","url":"#list-virtualization"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Virtualization in the context of the DOM typically refers to a technique used in web development to improve the performance and efficiency of rendering large lists or collections of elements, such as those found in long tables, lists, or grids. Virtualization is employed to render only the elements that are currently visible in the viewport, rather than rendering the entire list. This technique helps optimize web page performance, especially when dealing with a large amount of dynamic content."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The basic idea of DOM virtualization is to:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Render only the elements that are within the visible portion of the web page."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dynamically load or render additional elements as the user scrolls or interacts with the content."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reuse and recycle DOM elements to minimize memory and performance overhead."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"With an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"absolute"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"ly-positioned layout:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The container knows exactly how tall it should be (the height of the tallest column) and can set its "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"height"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" style value."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Offscreen DOM nodes that are meant to removed can be done so without affecting the position of the other items."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The container has the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"height"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" set, so removing items at the bottom do not cause the container to shrink, and there won't be scroll position changes."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"On desktop, Pinterest allows a maximum number of 40 pins in the DOM at any one time. On mobile, it's around 10 - 20. It's possible to use dynamic values based on network conditions, device dimensions, device processing abilities, etc. The GIF below shows list virtualization in action on the Pinterest homepage."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Some observations:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The container has an initial height of 5386px but there are only 7 pins in the DOM (its direct children), which is roughly two screens worth of content."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As the user scrolls down, more pins are added to the bottom of the container element."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As the user scrolls further down, pins at the top are removed from the container element. There's a maxiumum of around 12 pins in the DOM at once."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The container height is increased to 10228px when the user has scrolled down far enough such that the next page of items have loaded."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Scrolling up causes the pins at the bottom to be removed from the DOM and pins higher up on the page are inserted back at the top."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reflows and repaints","link":{"type":"url","url":"#reflows-and-repaints"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reflows and repaints have been mentioned earlier, but to recap the terms:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reflow"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A browser reflow, often referred to as a layout or re-layout, is a process that web browsers go through to calculate the geometry and position of elements in a web page's Document Object Model (DOM) when certain changes are made to the page. These changes can include modifications to the content, structure, or style of the page, such as adding, removing, or altering elements, changing their dimensions, or adjusting their position."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Repaint"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A browser repaint, often referred to as \"painting\", is the process by which a web browser draws or renders the visible content of a web page on the user's screen. This involves creating and updating the pixels that make up the visual representation of the webpage, including text, images, backgrounds, and other graphical elements. A repaint operation is typically triggered when there are changes to the appearance of elements on a web page, such as updates to CSS styles, content changes, or user interactions that require redrawing parts of the page. Repaints occur after reflow, if a reflow was done."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Re-rendering a lot and quickly causes reflow and repainting which can result in browser lag. Since there are many images on the page, if images were painted one at a time to the screen, it would cause a significant reflow and repainting operations."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Techniques to reduce reflows and repaints include:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Batching DOM changes"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Make multiple changes to the DOM in a single operation, which can reduce the number of reflows triggered."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Using CSS transforms"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Applying transformations like translation, rotation, or scaling using CSS transforms generally doesn't trigger a reflow, making them a more efficient way to update the appearance of elements."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Avoiding forced synchronous layout"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Some DOM and style properties, when accessed, force the browser to perform a reflow. Avoiding these properties when not necessary can help reduce reflows."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Virtual scrolling and pagination"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": For long lists of items, use virtual scrolling or pagination to limit the number of elements visible at once, reducing the impact of reflows."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Debouncing and throttling"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": When responding to events that trigger reflows, use debouncing and throttling techniques to limit the frequency of these operations."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"To reduce reflow and repaints, we can do the following:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Paint images in order, aka only show an image if all that come before it have been fully loaded."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Multiple images that load within a short period of time only cause one reflow and repaint. This feature is also built into "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React ","link":{"type":"url","url":"https://react.dev/reference/react/Suspense"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Suspense","link":{"type":"url","url":"https://react.dev/reference/react/Suspense"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Debounce/throttle masonry layout recalculation when the window resizes."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"List virtualization, so that the number of elements on the page is lower and fewer calculations are needed during reflows."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Some of them have already been mentioned above."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Automatic refresh when last fetched time was a while ago","link":{"type":"url","url":"#automatic-refresh-when-last-fetched-time-was-a-while-ago"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If you leave your homepage tab open for a while and come back to it (maybe half an hour later), the site will blow away all the loaded items and refetch the entire feed. This serves the purpose of keeping the memory usage low as the loaded items can be purged from the client store. It's a good optimization because it's unlikely the user will be interested in stale pins that they have already scrolled past."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If there's no virtualization done, periodic refreshes can also clear out the DOM state, improving React reconciliation and lowering memory overhead."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/pinterest/pinterest-stale-refresh.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Progressive Web App","link":{"type":"url","url":"#progressive-web-app"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pinterest has made significant efforts to provide a Progressive Web App (PWA) experience for its users. A Progressive Web App is a web application that provides a native app-like experience in a web browser. PWAs aim to combine the best of web and mobile app experiences, offering features like offline access, push notifications, and fast loading times."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Their PWA efforts case study and retrospective have been published publicly:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A Pinterest Progressive Web App Performance Case Study","link":{"type":"url","url":"https://medium.com/dev-channel/a-pinterest-progressive-web-app-performance-case-study-3bd6ed2e6154"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A one year PWA retrospective","link":{"type":"url","url":"https://medium.com/pinterest-engineering/a-one-year-pwa-retrospective-f4a2f4129e05"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Network","link":{"type":"url","url":"#network"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since there are many images to be shown on screen, there are many images to be downloaded, the browser makes multiple simultaneous network requests. Traditionally, browsers have a restriction on the maximum number of parallel HTTP connections per domain. This resulted in web services using different domain names for hosting their images. However, HTTP/2 allows multiple requests over a single connection, reducing the need for multiple parallel connections."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pinterest uses a single domain for their CDN ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pinimg.com"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") and supports HTTP/3, so the page doesn't run into the issue of exceeding the maximum number of parallel connections."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User experience","link":{"type":"url","url":"#user-experience"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Loading states","link":{"type":"url","url":"#loading-states"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For devices on slow networks, images might take a while to load so showing a placeholder for the image improves the user experience. Instead of showing a generic gray-colored box as a placeholder, Pinterest has identified dominant colors for each image and renders a box with that dominant color as the background."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/pinterest/pinterest-loading.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Error handling","link":{"type":"url","url":"#error-handling"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Images might sometimes fail to load, and there are a few ways to handle them:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Ignore the failed images"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". This is possibly the easiest and reasonable way. Pinterest feeds are somewhat random and users will not realize if a particular pin has failed to load."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Retry loading and insert later"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". The client can retry loading the image and if it's successful, insert it at the bottom of the current feed or as part of the next page's rendering."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Show error message"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". An error message can be shown within the allocated space for that pin. However, there might not be enough space to display the message, especially if the message is long (possible in certain languages) and the available pin space is small."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Internationalization (i18n)","link":{"type":"url","url":"#internationalization-i18n"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There isn't too much to discuss in terms of i18n for this question because the focus ins on the layout. For RTL languages, the masonry layout algorithm can be easily tweaked to start from the right instead of the left."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accessibility (a11y)","link":{"type":"url","url":"#accessibility-a11y"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Screen readers","link":{"type":"url","url":"#screen-readers"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"alt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute for "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"role=\"list\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute for feed container."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"role=\"listitem\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute for feed items."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard support","link":{"type":"url","url":"#keyboard-support"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Ensure tabbing order matches browsing order, which can be done with absolute positioned pin."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When the user is far down on the page, pressing "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Tab"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" should focus on a pin within the viewport than the pin at the top of the feed."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Other interactions","link":{"type":"url","url":"#other-interactions"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The focus of this question is on the feed masonry layout and we have intentionally omitted details about other common feed interactions:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Viewing details of a pin"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". This show the pin details within a modal, displaying the image and other details like title, description, author. Dismissing the modal will bring the user back to the feed with the scroll position restored, allowing them to continue browsing from where they left off."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Saving a pin"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". Leverage optimistic updates."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pin creation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". Uploading images and filling in essential information like title and description."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Extra actions only revealed upon interaction"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". Lazy load the code for these non-essential actions only when they're being used or when the page is idle."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These topics are covered in detail in "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"News Feed system design","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/news-feed-facebook"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"References","link":{"type":"url","url":"#references"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A Pinterest Progressive Web App Performance Case Study","link":{"type":"url","url":"https://medium.com/dev-channel/a-pinterest-progressive-web-app-performance-case-study-3bd6ed2e6154"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A one year PWA retrospective","link":{"type":"url","url":"https://medium.com/pinterest-engineering/a-one-year-pwa-retrospective-f4a2f4129e05"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Improving GIF performance on Pinterest","link":{"type":"url","url":"https://medium.com/pinterest-engineering/improving-gif-performance-on-pinterest-8dad74bf92f1"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Gestalt (Pinterest's design system)"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Masonry component","link":{"type":"url","url":"https://gestalt.pinterest.systems/web/masonry"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Masonry source code","link":{"type":"url","url":"https://github.com/pinterest/gestalt/blob/master/packages/gestalt/src/Masonry.js"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How Masonry works","link":{"type":"url","url":"https://github.com/pinterest/gestalt/blob/master/packages/gestalt/src/Masonry/README.md"}}}]}}]}}],"questionsMarkdown":null,"answerMarkdown":null,"time":"30 mins"},{"title":"Chat App (e.g. Messenger)","difficulty":"Hard","url":"https://www.greatfrontend.com/questions/system-design/chat-application-messenger?practice=practice&tab=system-design","questionBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Question"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design a chat application that allows users to send messages to each other."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/chat-application-messenger/chat-application-example.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Real-life examples"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Messenger","link":{"type":"url","url":"https://www.messenger.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WhatsApp Web","link":{"type":"url","url":"https://www.whatsapp.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Slack","link":{"type":"url","url":"https://www.slack.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Discord","link":{"type":"url","url":"https://www.discord.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Telegram","link":{"type":"url","url":"https://www.telegram.org/"}}}]}}],"answerBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requirements exploration","link":{"type":"url","url":"#requirements-exploration"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What are the core functionalities needed?","link":{"type":"url","url":"#what-are-the-core-functionalities-needed"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sending a message to a user."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Receiving messages from a user."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"See one's chat history with a user."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Is the message receiving real-time?","link":{"type":"url","url":"#is-the-message-receiving-real-time"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Yes, users should receive messages in real-time, as fast as possible without having to refresh the page."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What kind of message formats should be supported?","link":{"type":"url","url":"#what-kind-of-message-formats-should-be-supported"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Let's support formats text which can contain emojis. We can discuss supporting images if there's time."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Does the application need to work offline?","link":{"type":"url","url":"#does-the-application-need-to-work-offline"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Yes, where possible. Outgoing messages should be stored and sent out when the application goes online and users should still be allowed to browse messages even if they are offline."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Are there group conversations?","link":{"type":"url","url":"#are-there-group-conversations"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We can assume it's a 1:1 messaging service."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Architecture / high-level design","link":{"type":"url","url":"#architecture--high-level-design"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The main difference between traditional applications vs chat applications that can be used offline is that if the application loses network connectivity, some functionality like browsing on-device messages and searching should ideally still work. This greatly influences the application architecture such and it will differ a great deal from conventional web applications."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Tricky scenarios to be Handled","link":{"type":"url","url":"#tricky-scenarios-to-be-handled"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Firstly, let's be aware of the various tricky scenarios that we need to handle in a chat application and their implications."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Using the application on different tabs in the same browser."}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" The user might do this because they want to chat with different people at once and rather switch between tabs than switch between conversations in the same tab."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Users should see the same messages for each conversation -> Rely on a storage that is accessible across different tabs in the same browser."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Using the application on different devices/browser."}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" The same device, different browser case is rare, but it's not rare for users to be using multiple devices at once (work and personal device at the same time)."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User should see the same messages for each conversation -> Sync with the server on initial load and get the most updated data."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Application goes offline during usage."}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" User could have lost connectivity while on the move and passing through low connectivity areas (common occurrence in the subway)."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Outgoing messages have not been all fulfilled -> They should be retried when the application goes online again, or their statuses should be updated if they were written to the server but didn't receive the updates."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Messages are being sent while application is offline -> These messages should be sent out when the application next goes online. However, this should only be done for messages sent recently. If these messages were sent too long ago, the conversation might have already progressed past the topic (possibly using other devices) and it no longer makes sense to retry sending it."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A combination of the above scenarios."}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" Life just became a lot harder!"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Our chosen architecture should handle all these scenarios."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client-side database","link":{"type":"url","url":"#client-side-database"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"One way to store data on the client is to use a client-side database (henceforth referred to as database). The UI reads data from the database as if it's a client-only application as opposed to traditional applications where the UI directly makes HTTP queries and displays the fetched data. The UI is not and should not be aware of where the database got its data from. Where the database gets its data from should be an implementation detail of the data layer."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Different tabs in the same browser access the same client-side database. This ensures consistent data between tabs and helps to solve the UI consistency issue in the \"using the application on different tabs in the same browser\" scenario. However, we have to take note of not inserting into the database twice when we are notified of a \"new message\" event."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data syncer","link":{"type":"url","url":"#data-syncer"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The Data Syncer is a module that is in-charge of syncing the client database with the server."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sending messages","link":{"type":"url","url":"#sending-messages"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When the user sends out a message (or any update made by the user in general), we want to reflect the changes immediately. It is poor user experience to wait for the server's confirmation before showing an updated UI."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Hence outgoing chat messages/user actions are first inserted into the database instead and they are marked as pending. Pending messages are also reflected immediately in the UI. Notice that messages in chat applications have indicators to indicate the various message delivery statuses."}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Message Status"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Messenger"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WhatsApp"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sending"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Application is attempting to send the message"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Empty circle"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Clock icon"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sent"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Message was sent to the server successfully"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Checkmark in outline circle"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Single gray checkmark"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Delivered"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Message delivered to the recipient"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Checkmark in filled circle"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Double gray checkmark"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Read"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Recipient has read the message"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Tiny version of user profile picture"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Double blue checkmark (or ticks)"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Failed"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Message failed to send"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Exclamation icon in circle"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Exclamation icon in circle"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Source: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Messenger Help Center","link":{"type":"url","url":"https://www.facebook.com/help/messenger-app/926389207386625"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"WhatsApp Help Center","link":{"type":"url","url":"https://faq.whatsapp.com/665923838265756/"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"You might have heard of the phrase \"she double blue ticked me\" to mean someone read the messages without replying. Now you know what the other message statuses are 😎."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"During database syncing, after the server has received and acknowledged the action, it sends back a response to the application and those messages can be marked as \"Sent\"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As there can be multiple messages being sent in parallel across different conversations (and in real applications, even more actions like reactions, deleting messages), there is a need for a scheduler to ensure that actions are sent to the server in the right order, request statuses are tracked, request failures are retried, etc."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Receiving real-time updates","link":{"type":"url","url":"#receiving-real-time-updates"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Because we want to receive message updates in real-time, the application needs to be informed about new messages from the back end as soon as possible. We'll discuss a few ways of getting real-time updates in the \"Optimizations\" section."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server-side rendering or Client-side rendering?","link":{"type":"url","url":"#server-side-rendering-or-client-side-rendering"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Chat applications have the following characteristics:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Highly interactive in nature due to high frequency of sending and receiving messages. The page will probably need a fair amount of JavaScript."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Messages can only be accessed when logged in."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Messages do not have to (and should not!) be indexed by search engines."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fast initial loading speed is desired but not the most crucial."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Considering the above, a pure client-side rendering and single-page application overall architecture will work well. We can use server-side rendering (SSR) with client-side hydration like in "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"News Feed system design","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/news-feed-facebook"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Photo Sharing application system design","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/photo-sharing-instagram"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" for a fast initial load but the benefits of SSR will only be limited to performance gains because chat applications don't need to be SEO-friendly. The additional engineering complexity of enabling SSR might not be worth it."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Architecture diagram","link":{"type":"url","url":"#architecture-diagram"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/chat-application-messenger/chat-application-architecture.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Component responsibilities","link":{"type":"url","url":"#component-responsibilities"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Chat UI"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Contains a list of conversations and the currently selected conversation/conversation"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Conversations List"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Presents a list of conversations (user, last message, last message timestamp)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Selected Conversation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A list of messages in the conversation and a input box to type new messages."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Controller"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Controls the flow of data within the application. Fetches data from the database to show in the UI. Writes data to the database."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data Syncer"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Module that contains the database and also manages the outgoing messages. Also receives updates from the server and updates the database accordingly."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client-side Database"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Database to store all the data needed to be shown in the UI."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Message Scheduler"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Monitors the outgoing messages, schedules them for sending and manages their statuses."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Provides HTTP APIs and real-time APIs to fetch conversation and message data and to send new messages."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data model","link":{"type":"url","url":"#data-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"To keep it simple, we will focus only on the chatting functionality of the application."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client-side database","link":{"type":"url","url":"#client-side-database-1"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Most of the data needed by the application will be stored in the client-side database. Any data that is needed for offline functionality should go into the database. Here's an entity-relationship diagram of the database tables."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/chat-application-messenger/chat-application-data-model.png"}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Table/Entity"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sync to Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Used by"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Conversation"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Yes"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Conversations List"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Conversation between users (only two users for now)"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Message"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Yes"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Conversation"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Text message sent by user. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"status"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is one of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"sending"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"sent"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"delivered"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"read"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"failed"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"User"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Yes"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"All"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User identity"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ConversationUser"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Yes"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"-"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Associates users and conversations to allow a many-to-many relationship. A "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Conversation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" only has maximum of two "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"User"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s for now but with this design it can support as many as required"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DraftMessage"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"No"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Conversation"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Store half-written, unsent messages"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"SendMessageRequest"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"No"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Message Scheduler"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Tracks the status of messages to be sent"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note that the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DraftMessage"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"SendMessageRequest"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tables are not synced to the server and are client-side only. However, they should still be in the database rather than be client-only state as they should be persisted across sessions."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DraftMessage"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This table stores messages the user has typed in a conversation's message input box but hasn't sent. This has to be persisted into the database (as opposed to client-only state) so that if the user quits the application and opens it again, they don't lose their unsent message. Each conversation can have a maximum of one "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DraftMessage"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" per user."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note that draft messages aren't synced with the server, so it stays within the current device. It's totally doable to sync draft messages with the server so that they are accessible across all devices, but that's a product decision and we won't explore this now for the sake of focusing on the core use cases."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"SendMessageRequest"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This table stores data related to each message that the user has sent but hasn't been acknowledged by the server. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"status"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is an enum and can be one of the following:"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pending"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The default state of new messages to be sent."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"in_flight"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The application has sent the message to the server but hasn't received a response."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"fail"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": When the server returns an error or the send request has timed out. We keep track of the number of times it has failed in "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"fail_count"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" so that we know whether to keep retrying (with exponential backoff) or stop retrying after a certain number of failures."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"success"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Indicates that the message has been received and acknowledged by the server. Strictly speaking, this enum value is not needed because when the client receives the server acknowledgement, this row can be removed from the table."}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client-only state","link":{"type":"url","url":"#client-only-state"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These are state fields that do not need to be persisted in the database, i.e. it's ok to lose this data if the user exits the application by closing the browser tab/window."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Selected conversation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The currently selected conversation."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Conversation scroll position"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Scroll position within each conversation. It's useful to restore the scroll position whenever the user switches between conversations."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Conversation outgoing message"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This is whatever the user is typing in a specific conversation. It is almost the same as the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DraftMessage"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" except we shouldn't save into the database on every keystroke. We only persist to the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DraftMessage"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" table after the user has stopped typing (via blur/debounce) or throttle to save the value to the database after every X ms."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interface definition (API)","link":{"type":"url","url":"#interface-definition-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The following APIs are needed:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Send message"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sync outgoing messages"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server events"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fetch conversations"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fetch conversation messages"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Send message","link":{"type":"url","url":"#send-message"}}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Add a row to the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Message"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" table with a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"sending"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" status."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Add a row the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"SendMessageRequest"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" table with "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pending"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" status."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Conversation UI reads from the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Message"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" table and shows the new message with a \"Sending\" indicator."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Any "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DraftMessage"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" rows for the current conversation/conversation are deleted."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"At this point, there are no synchronous steps left to be done. The Message Scheduler will be in-charge of syncing the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pending"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" messages with the server."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sync outgoing messages","link":{"type":"url","url":"#sync-outgoing-messages"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The Message Scheduler will be in-charge of syncing outgoing messages with the server. It will maintain its own task queue and watch the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"SendMessageRequest"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" table. Because the task queue needs to be in-sync across tabs, it should not be stored in browser memory and can also use another table."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Whenever the table is not empty, it will fetch the first X rows (ordered by id) and try to process them by adding tasks to its own task queue. X is a configurable value. Depending on the row's "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"status"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" column:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pending"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Enqueue a task to send the message to the server via the real-time channel. Update the row's "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"status"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to be "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"in_flight"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"in_flight"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Check the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"last_sent_at"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" timestamp. If it has exceeded the timeout threshold, update the row's "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"status"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to be "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"fail"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and update the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"fail_count"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" by 1."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"fail"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Enqueue a task to retry sending this message sometime in the future. The delay duration depends on the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"fail_count"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". With an exponential backoff retry strategy, the delay duration will increase exponentially with the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"fail_count"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server events","link":{"type":"url","url":"#server-events"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The Data Syncer will receive real-time updates from the server in the form of events. Each event can have a type and a payload field. The shape of the payload depends on the actual event."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"// Example event payload pushed from the server.\n{\n  \"event_name\": \"incoming_message\",\n  \"payload\": {\n    \"foo\": \"value_a\",\n    \"bar\": \"value_b\"\n  }\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These are the various events necessary:"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"message_sent","link":{"type":"url","url":"#message_sent-event"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" event","link":{"type":"url","url":"#message_sent-event"}}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Message"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"'s "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"status"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to be "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"sent"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Clean up this message in the Message Scheduler:"}}],"children":[{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Remove the row corresponding to this message in the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"SendMessageRequest"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" table. This message has been received by the server and is no longer "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pending"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" or "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"in_flight"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Remove any tasks in the task queue that are related to this message."}}]}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update UI"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Notify the Conversation UI to be updated if that message's conversation is currently shown."}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"message_delivered","link":{"type":"url","url":"#message_delivered-event"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" event","link":{"type":"url","url":"#message_delivered-event"}}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Message"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"'s "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"status"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to be "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"delivered"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update UI"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Notify the Conversation UI to be updated if that message's conversation is currently shown."}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"message_failed","link":{"type":"url","url":"#message_failed-event"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" event","link":{"type":"url","url":"#message_failed-event"}}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update the row corresponding to this message in the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"SendMessageRequest"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" table's and change the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"status"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to be "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"fail"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and increment "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"fail_count"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" by 1."}}],"children":[{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note that we don't modify the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"status"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" of the row in the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Message"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" table to be "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"fail"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" yet. The message is not deemed to be failed yet until we have retried sending it."}}]}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update UI"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Notify the Conversation UI to be updated if that message's conversation is currently shown."}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"incoming_message","link":{"type":"url","url":"#incoming_message-event"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" event","link":{"type":"url","url":"#incoming_message-event"}}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Append the new message into the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Message"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" table."}}],"children":[{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Create a new row in the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Conversation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" table if it doesn't exist."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Create a new row for the message's sender into the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"User"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" table if it doesn't already exist."}}]}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update UI"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Notify the Conversations List UI to be updated. Update the UI to surface this conversation to the top. If the Conversations List is sorted by decreasing timestamp of each conversation's latest message, it will be automatically surfaced to the top."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Notify the Conversation UI to be updated if that message's conversation is currently shown."}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"sync","link":{"type":"url","url":"#sync-event"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" event","link":{"type":"url","url":"#sync-event"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Work in progress."}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" This event is triggered when a client first connects to the server. When clients first connect to the server, they might be lagging behind in terms of the data it contains The goal here is to get each client up-to-date with the latest server state by the server sending down all data that is missing on the client."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Possible ways of indicating the client state to the server:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client's last update timestamp"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The server will gather all the new entities (messages, conversations) created after the timestamp and send to the client for the client to insert into the db."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Each conversation's cursor"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A database cursor is a mechanism that enables traversal over records in a database. Similar to the cursor-based pagination APIs, a cursor can be used to indicate the last message in the conversation that the client received, and what messages are after the message."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimizations and deep dive","link":{"type":"url","url":"#optimizations-and-deep-dive"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client database","link":{"type":"url","url":"#client-database"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Deciding on client-side storage","link":{"type":"url","url":"#deciding-on-client-side-storage"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are a few ways of storing data on the client: Cookies, Web Storage, and IndexedDB. Refer to the quiz question for a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"comparison between cookies and Web Storage mechanisms","link":{"type":"url","url":"https://www.greatfrontend.com/questions/quiz/describe-the-difference-between-a-cookie-sessionstorage-and-localstorage"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cookies is out of the question due to the extremely small capacity (4kb per domain). "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"localStorage"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (one of the Web Storages) is not well-suited because it doesn't support structured data, which is essential for non-trivial applications like chat."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"IndexedDB","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is our best choice here, which is a low-level API for client-side storage of significant amounts of "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"structured data"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", including files/blobs. Other useful features include database indexes, tables, cursors, transactions, mostly over asynchronous APIs."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Syncing across tabs","link":{"type":"url","url":"#syncing-across-tabs"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since IndexedDB is a client-side storage mechanism, the data is accessible across tabs and it solves the \"users should see the same messages in the application on different tabs in the same browser.\" scenario outlined at the top."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, browsers tabs are not aware of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"IndexedDB"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" data changes in other tabs. To inform the other tabs about changes in the database, use the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"BroadcastChannel","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" which allows communication between different windows/tabs/frames of the same origin."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Syncing client database with the server","link":{"type":"url","url":"#syncing-client-database-with-the-server"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bidirectional syncing of messages between the client and server is complex."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Out-of-order messages"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": There is no guarantee that messages are received in the order they are sent. Should out-of-order messages be inserted in between existing messages according to timestamp or should they always be appended at the bottom of the conversation?"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fetching new messages"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The client needs to tell the server when the last update was (could be the last message received, or the timestamp it last pulled from the server) and the server figures out what messages have not been sent to the client and send them."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sending out pending messages"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Messages sent while the application is offline should be stored in a pending outgoing messages queue and sent out when the application goes online."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Other issues","link":{"type":"url","url":"#other-issues"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Unsupported environments like private/incognito mode on Firefox and Safari."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Storage limits."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Errors initializing/opening the database."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"IndexedDB comes with a number of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"problems, bugs and oddities","link":{"type":"url","url":"https://gist.github.com/pesterhazy/4de96193af89a6dd5ce682ce2adff49a"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Best Practices for Using IndexedDB","link":{"type":"url","url":"https://web.dev/indexeddb-best-practices/"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Real-time updates","link":{"type":"url","url":"#real-time-updates"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Real-time messaging means that recipients of the messages receive new messages instantly (or near instantly) without them having to reboot the application/refresh the page or manually trigger a button to fetch new messages."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The few ways of implementing real-time messaging:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Short Polling (or Regular Polling)"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Long Polling"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Web Sockets"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In Progress"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Evaluate the pros and cons of each real-time mechanism. Web Sockets is the modern choice and the mechanism used by most chat apps."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reference: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WebSockets vs Long Polling","link":{"type":"url","url":"https://ably.com/blog/websockets-vs-long-polling"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Network","link":{"type":"url","url":"#network"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Connection failure is extremely common as users could be using chat applications while on transport and going in and out of poor connectivity areas. Messages could fail to send out, along with other issues:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Offline Usage"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The application should detect if the device is offline and not attempt to send messages if so. The messages should be added to the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"SendMessageRequest"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s table."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Failures"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Failed outgoing messages should be retried using exponential backoff."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Display an error message if after X number of retries the messages weren't successfully delivered."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Batching"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Outgoing messages could be batched and sent as a single message if messages are sent in quick succession (within a few seconds). The application can detect if the user is still typing after their last sent message and perhaps wait for the next message to be completed before making the request (similar to debouncing). This batching logic is best implemented within the Message Scheduler."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Out-of-order"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": If we send each messages in a separate request, there is no guarantee that the messages reaches the server in the order they were being sent from the client. However, sequentially sending messages is also less than ideal. Batching helps to mitigate this problem by sending multiple messages in one payload but also maintaining the order."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Disconnection"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": App should automatically attempt reconnection after a disconnection without the user having to refresh the page."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance","link":{"type":"url","url":"#performance"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lazy load components that aren't needed for initial load (e.g. emoji picker, any popovers/modals)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Leverage windowing/virtualization for long list of messages within a conversation."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accessibility","link":{"type":"url","url":"#accessibility"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Implement basic keyboard shortcuts:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Message composer"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Enter to send a message."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Shift + Enter to add new lines within a message."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Between conversations"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Shortcut to focus on the search bar."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Ctrl"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Cmd"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" + "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Up"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Down"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to traverse between conversations."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"On certain desktop clients, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Ctrl"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Cmd"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" + number brings you to the nth conversation in your list of conversation."}}]}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Offline support","link":{"type":"url","url":"#offline-support"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The application can be built as a Progressive Web Application (PWA) which uses service workers to cache assets (HTML/JS/CSS) so that the application has both the code and data required to be used offline."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Using PWAs also allow for browser notifications which is useful for informing the user that there's a new message even when the tab is not in focus/visible."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User experience","link":{"type":"url","url":"#user-experience"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Maintaining scroll position","link":{"type":"url","url":"#maintaining-scroll-position"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Scroll position is a tricky issue to deal with in messaging apps due to the possibility of new messages being added to the list above and below."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Scroll position should be:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Kept to the bottom of the message list when new messages come in and the scroll position is already at the bottom of the list. This is the default scenario for most situations."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Maintained when the scroll position is not at the bottom such that the currently visible contents are still visible. Scrolling up to read the older chat messages scroll position should be maintained and current visible elements should not move even though more DOM elements will be added to the top. The application can calculate the current scroll offset, the height of the new elements to be appended, and modify the scroll height to add in the new elements height."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The following are events that can change potentially change the (scroll/client) height:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"New messages inserted below (when receiving new messages)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"New messages inserted above (when searching for history)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Window resizing."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Media loading completely that has a different height from the loading placeholder."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Avoid this issue by using a fixed height placeholder and rendering the media within that element."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Page zoom changes."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The scroll positions should be maintained (either at the bottom or showing the same contents) depending on the scenarios listed above."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Other possible improvements","link":{"type":"url","url":"#other-possible-improvements"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Add a \"Scroll to Bottom\" button that's visible when the user has scrolled upwards within the conversation messages."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Gradient effect","link":{"type":"url","url":"#gradient-effect"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This article by CSS Trick shows you various approaches for implementing "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Messenger's chat message gradient background","link":{"type":"url","url":"https://css-tricks.com/recreating-the-facebook-messenger-gradient-effect-with-css/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Stale clients","link":{"type":"url","url":"#stale-clients"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For extremely stale clients, they will have to download the entire list of absent messages since the last sync which can be huge. This leads to a significant delay between starting up the application and being able to use it. Few will enjoy the process of waiting for tens of thousands of messages to be fetched and inserted into the client database before they can use the app."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A plausible approach is to treat it as a fresh load/existing data in the database as non-existent and do a complete sync with the server, only fetching the latest N messages of the latest M conversations."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Advanced","link":{"type":"url","url":"#advanced"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These features won't be discussed in this solution but if time permits you might want to discuss them with your interviewer."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Searching (Use a hybrid of both online and offline search)"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"i18n"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"End-to-end encryption"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Challenges of E2E Encryption in Facebook Messenger","link":{"type":"url","url":"https://www.youtube.com/watch?v=-IXJ7Q01gpY"}}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Delivery/read receipts"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Offline/optimistic reads"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reactions"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Typing indicator"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Disappearing messages"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Notifications"}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"References","link":{"type":"url","url":"#references"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Facebook & Messenger"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Launching Instagram Messaging on desktop","link":{"type":"url","url":"https://engineering.fb.com/2022/07/26/web/launching-instagram-messaging-on-desktop/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Building Facebook Messenger","link":{"type":"url","url":"https://www.facebook.com/notes/10158791547142200/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reverse engineering the Facebook Messenger API","link":{"type":"url","url":"https://intuitiveexplanations.com/tech/messenger"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Facebook Messenger Engineering with Mohsen Agsen","link":{"type":"url","url":"https://softwareengineeringdaily.com/2020/03/31/facebook-messenger-engineering-with-mohsen-agsen/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"F8 2019: Facebook: Lighter, Faster, Simpler Messenger","link":{"type":"url","url":"https://www.youtube.com/watch?v=ulVLD2yzCrc"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Building Real Time Infrastructure at Facebook - Facebook - SRECon2017","link":{"type":"url","url":"https://www.youtube.com/watch?v=ODkEWsO5I30"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Facebook Messenger RTC – The Challenges and Opportunities of Scale","link":{"type":"url","url":"https://www.youtube.com/watch?v=F7UWvflUZoc"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Building Mobile-First Infrastructure for Messenger","link":{"type":"url","url":"https://engineering.fb.com/2014/10/09/production-engineering/building-mobile-first-infrastructure-for-messenger/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"MySQL for Message - @Scale 2014 - Data","link":{"type":"url","url":"https://www.youtube.com/watch?v=eADBCKKf8PA"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Project LightSpeed: Rewriting the Messenger codebase for a faster, smaller, and simpler messaging app","link":{"type":"url","url":"https://engineering.fb.com/2020/03/02/data-infrastructure/messenger/"}}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Slack"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Managing Focus Transitions in Slack","link":{"type":"url","url":"https://slack.engineering/managing-focus-transitions-in-slack/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Gantry: Slack’s Fast-booting Frontend Framework","link":{"type":"url","url":"https://slack.engineering/gantry-slacks-fast-booting-frontend-framework/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Making Slack Faster By Being Lazy","link":{"type":"url","url":"https://slack.engineering/making-slack-faster-by-being-lazy/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Making Slack Faster By Being Lazy: Part 2","link":{"type":"url","url":"https://slack.engineering/making-slack-faster-by-being-lazy-part-2/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Getting to Slack faster with incremental boot","link":{"type":"url","url":"https://slack.engineering/getting-to-slack-faster-with-incremental-boot/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Service Workers at Slack: Our Quest for Faster Boot Times and Offline Support","link":{"type":"url","url":"https://slack.engineering/service-workers-at-slack-our-quest-for-faster-boot-times-and-offline-support/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Localizing Slack","link":{"type":"url","url":"https://slack.engineering/localizing-slack/"}}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Airbnb"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Messaging Sync — Scaling Mobile Messaging at Airbnb","link":{"type":"url","url":"https://medium.com/airbnb-engineering/messaging-sync-scaling-mobile-messaging-at-airbnb-659142036f06"}}}]}}]}}],"questionsMarkdown":null,"answerMarkdown":null,"time":"30 mins"},{"title":"Rich Text Editor","difficulty":"Hard","url":"https://www.greatfrontend.com/questions/system-design/rich-text-editor?practice=practice&tab=system-design","questionBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Question"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design an extensible rich text editor component that allows users to create and edit text with various formatting options."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Real-life examples"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lexical","link":{"type":"url","url":"https://lexical.dev/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Tiptap","link":{"type":"url","url":"https://tiptap.dev/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Slate","link":{"type":"url","url":"http://slatejs.org/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Quill","link":{"type":"url","url":"https://quilljs.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Draft.js","link":{"type":"url","url":"https://draftjs.org/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (predecessor of Lexical)"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rich text editors are also commonly known as WYSIWYG editors (\"What you see is what you get\") as you can directly format text without using special markup or syntax."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This writeup delves deeply into rich text editing, covering more than what is typically required for interviews. However, the concepts discussed here are valuable beyond rich text editing, providing insights that can enhance your ability to design complex UI applications."}}]}}],"answerBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requirements exploration","link":{"type":"url","url":"#requirements-exploration"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What formatting features should be supported?","link":{"type":"url","url":"#what-formatting-features-should-be-supported"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Block formatting"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": headings, paragraphs, blockquotes"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Inline formatting"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": bold, underline, italics"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How should the various elements be styled?","link":{"type":"url","url":"#how-should-the-various-elements-be-styled"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The browser's default stylesheet is a good starting point. If time permits, we can discuss how to allow further customizability of the elements."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Should the editor support media insertion?","link":{"type":"url","url":"#should-the-editor-support-media-insertion"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The focus is on text formatting, but we can discuss inserting media objects like images, videos, etc."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What keyboard shortcuts should be supported?","link":{"type":"url","url":"#what-keyboard-shortcuts-should-be-supported"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The editor should support the common editing-related keyboard shortcuts (e.g. Copy, Cut, Paste, Redo). As a bonus, we can also explore customization and support for user-defined shortcuts."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What are the non-functional requirements?","link":{"type":"url","url":"#what-are-the-non-functional-requirements"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance and user experience are important. The editor should reflect updates without lagging/stuttering."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Overview of the Lexical editor","link":{"type":"url","url":"#overview-of-the-lexical-editor"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are many rich text editors around, and many editors are similar in design and implementation. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lexical","link":{"type":"url","url":"https://lexical.dev/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is Meta's latest open source rich text editor library (evolution of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Draft.js","link":{"type":"url","url":"https://draftjs.org/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") and is used across their products – composer on facebook.com, workplace.com, etc. It is designed with extensibility, reliability, accessibility, and performance in mind."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lexical's architecture allows developers to create customized text editing experiences that can scale in both size and functionality, making it suitable for a wide range of applications from simple text inputs to complex document editors."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We're fairly familiar with the Lexical library since GreatFrontEnd is using Lexical for rich text editing. Yangshun was actually involved in the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"creation of Lexical","link":{"type":"url","url":"https://lexical.dev/community"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"!"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For this article, we have studied Lexical's design and code in close detail, and our content is heavily based on Lexical's design."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Here's an overview of Lexical's design:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Editor instances"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Lexical creates editor instances that attach to a single "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element. Each instance manages its own state and updates."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Editor states"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The framework uses a set of editor states to represent the current and pending states of the editor at any given time. This allows for efficient updates and undo/redo functionality."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dependency-free core"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Lexical is a lightweight, 22KB dependency-free library that can work with vanilla JavaScript or integrate seamlessly with other libraries like React."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Plugin architecture"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": One of Lexical's most powerful features is its plugin system. Plugins are independent and plug-and-play, allowing developers to extend functionality without affecting the core editor."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Node-based structure"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Lexical uses a node-based structure to represent the content. Different types of nodes (e.g., text nodes, paragraph nodes) make up the document tree."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"State management"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": When changes occur in the editor, Lexical updates its internal state. Plugins can register listeners to react to these state changes."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Serialization"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Lexical can serialize its state to JSON, making it easy to save and restore editor content."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Framework-agnostic"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": While Lexical provides React bindings, it's designed to be framework-agnostic, allowing integration with other JavaScript frameworks like Vue.js, Angular, Svelte, etc."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Extensible"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Simple, flexible core APIs are exposed to allow community-driven external plugins"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Collaboration support"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Lexical can be extended to support real-time collaboration through plugins that translate editor state changes to and from collaborative protocols like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Yjs","link":{"type":"url","url":"https://github.com/yjs/yjs"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accessibility"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The framework is built with accessibility in mind, following WCAG best practices and ensuring compatibility with screen readers and other assistive technologies."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance optimization"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Lexical is designed for performance, handling large documents and complex editing operations efficiently using a virtual DOM-like approach."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Approach","link":{"type":"url","url":"#approach"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As with most problems in Computer Science, there are multiple approaches to build a rich text editor, each with its own pros and cons."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As a reminder, rich text editors need to support:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering rich text"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Headings, paragraphs, bold, etc."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering of cursors"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Indication of the current typing position"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WYSIWYG"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": What-you-see-is-what-you-get. Inline updates and preview of rich text"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cross-browser"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Consistent experience across different browsers"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"To get a better sense of the various features a rich text editor supports, along with the user experience, try out "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lexical's playground","link":{"type":"url","url":"https://playground.lexical.dev/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering approaches","link":{"type":"url","url":"#rendering-approaches"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Let's consider the following approaches."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"1. Form elements like ","link":{"type":"url","url":"#1-form-elements-like-input-and-textarea"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input>","link":{"type":"url","url":"#1-form-elements-like-input-and-textarea"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and ","link":{"type":"url","url":"#1-form-elements-like-input-and-textarea"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<textarea>","link":{"type":"url","url":"#1-form-elements-like-input-and-textarea"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This is an obvious no-go, because although these elements can render text and update inline, they only render plain text and are unable to render formatted text."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2. DOM with fake cursors","link":{"type":"url","url":"#2-dom-with-fake-cursors"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A regular DOM, containing the formatted text using HTML elements and styling, can be used to meet the rendering requirements."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, all editors need to display a cursor to indicate the typing position. By using regular DOM, cursors have to be faked by rendering a DOM element on top of the existing text. Rendering fake cursors isn't trivial at all:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cursor position calculation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Cursor positioning has to be manually calculated. You have to know which character is being clicked on (not supported natively), then find the nearest position that is around/between characters. To add on to the complexity, different characters have different widths depending on the font size and family."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cursor height calculation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The cursor has to match the height of the current line."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering fake cursors involves a ton of complex text measurement you have to implement yourself. This is supposed to be the browser's job and you're reimplementing it!"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"3. ","link":{"type":"url","url":"#3-contenteditable-attribute"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable","link":{"type":"url","url":"#3-contenteditable-attribute"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute","link":{"type":"url","url":"#3-contenteditable-attribute"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute to the rescue! Elements with the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable=\"true\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute indicate that the element is editable by the user. This attribute is available on every element. If you aren't familiar with the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"read more about it here","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/contenteditable"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"On top of the usual editing behavior and keyboard shortcuts, it even supports rich text formatting! You can use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Ctrl"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Cmd"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" + "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"B"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to bold selected text, and the text will be wrapped in a pair of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<b>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags. The shortcuts for underline and italics are supported as well."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Editable and format-able"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" text thanks to"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". You can even format the text (e.g. bold by using Ctrl/Cmd + B)."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This seems to be a good starting point. What's the catch?"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Limited formatting"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Only inline text formatting is supported. No built-in way to add other elements like headings, blockquotes, etc."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Browser inconsistencies"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Different browsers implement "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" functionality differently, leading to inconsistent behavior across platforms. This inconsistency can affect the user experience and result in unexpected formatting issues."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Unsafe format"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The contents are essentially HTML. By storing the contents as HTML, you could be introducing security vulnerabilities like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"XSS (Cross-site scripting) attacks","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Glossary/Cross-site_scripting"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" fulfills a lot of our desired rich text editor requirements, especially cursor rendering. Can we use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and patch the weaknesses and limitations? Yes! In fact, most popular rich text editors on the web are built on top of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"4. Canvas with custom… everything","link":{"type":"url","url":"#4-canvas-with-custom-everything"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"An advanced approach is to use a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<canvas>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element and render everything within the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<canvas>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element – styled text, layout, cursor, etc. This approach basically sidesteps a lot of what the browser provides, and requires reimplementing everything within a canvas context. You can view it as an even tougher version of using DOM with fake cursors."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This approach is used by one of the world's most widely used document editors – Google Docs. In 2021, Google "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"announced that Google Docs will be moving towards a canvas based rendering approach","link":{"type":"url","url":"https://workspaceupdates.googleblog.com/2021/05/Google-Docs-Canvas-Based-Rendering-Update.html"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to \"improve performance and consistency in how content appears across different platforms\"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Canvas renderers provide you with absolute full control over the rendering, but comes at the cost of:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Complexity and maintenance burden"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": As mentioned, you'll have to implement layout, text rendering, cursor rendering, user inputs, etc, yourself."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accessibility"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Canvas-based editors are going to have poor accessibility by default since screen readers cannot read what is within the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<canvas>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". Google had to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"implement accessibility features themselves","link":{"type":"url","url":"https://html.spec.whatwg.org/multipage/canvas.html#best-practices"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" on top of everything else that this approach required."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Incompatible with some existing extensions"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Browser extensions that rely on inspecting and manipulating the contents in the DOM will cease to function since the contents are entirely within the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<canvas>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Browser engines have to solve a much more general problem than rich text, and thus have extra overhead. Using canvas is a more performant approach, but few companies like Google have the resources to justify the performance benefits vs the implementation cost. VS Code is another popular tool that uses canvas for rendering text, but "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"only for the terminal","link":{"type":"url","url":"https://code.visualstudio.com/blogs/2017/10/03/terminal-renderer#_dom-rendering"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Which rendering approach to choose?","link":{"type":"url","url":"#which-rendering-approach-to-choose"}}}]}},{"object":"block","type":"table","table":{"table_width":5,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Approach"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rich formatting"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cursors"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Implementation effort"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cross-browser"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<textarea>"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"No"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Supported"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"N/A"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Generally same"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"DOM with fake cursors"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Supported"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Custom"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"High"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Generally same"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"contenteditable"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Supported"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Supported"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Moderate"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Some differences"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<canvas>"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Custom"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Custom"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Very high"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Generally same"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Given the tradeoffs of features vs implementation effort, most rich text editor libraries use the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute on a root element, add event listeners to intercept browser events and standardize the result across browsers. With a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" approach:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering rich text"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This is available for free, since "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" renders using the various DOM elements."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering cursors"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Also available for free. The cursor's line height and positioning matches the currently-selected text."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Inline text updates"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Text can be updated just like when using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<textarea>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". Some keyboard shortcuts are available for typical editing and even formatting (e.g. bold, underline)."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Consistent experience across different browsers"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Some browsers respond to certain user events while some don't. However, we can add event handlers for all these possible events (e.g. keystrokes, selection, clicks), intercept them, and normalize the behavior across browsers, operating systems, and devices."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Handling limited formatting"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": By default, only inline formatting is supported. However, since the result is DOM-based, we can programmatically insert any element necessary and style it for the desired result."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Backed by a different content model"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": While the rendered content result is DOM / HTML, the underlying model can be customized for performance optimizations and restricted to only certain supported elements."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Widely-used"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Some of the world's most widely-used rich text editing surfaces, such as facebook.com's post composer, Gmail composer, Medium's article editor, are using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Model and state design","link":{"type":"url","url":"#model-and-state-design"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We have decided on the rendering approach, let's discuss how we want to model the content state. Is content state even necessary? Can we just let the state be in the DOM and operate on the DOM nodes directly? Certainly possible, but there are some issues with that:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"No built-in state management features"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The DOM does not provide built-in features for state management, such as undo/redo or allow the use of complex data structures, which are sometimes necessary."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"No good way of storing extra related fields"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": If extra fields could be required for certain elements (e.g. type of custom elements), they have to be stored as data attributes on the DOM nodes, which can clutter up the DOM and is overhead when they have to be read."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"DOM is bloated"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": DOM elements are huge and have a ton of properties and methods. This can be bad for maintenance and it's better to keep the API surface small."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Prone to tampering"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Browser extensions often mess with the DOM and have unwanted consequences. By using DOM as the underlying content model, third-party extensions can easily tamper with the source of truth."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A better approach is to model the content state in JavaScript and render to the DOM based on the content state. This content state will need to capture tree-like relationships, just like the DOM. An example could be:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  type: \"document\",\n  children: [\n    {\n      type: \"heading\",\n      children: [{ type: \"text\", content: \"Hello\" }]\n    },\n    {\n      type: \"paragraph\",\n      children: [\n        { type: \"text\", content: \"This is John Doe. \" },\n        { type: \"text\", content: \"He is strong\", bold: true }]\n    },\n  ]\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The editor will iterate through this object, convert them to the relevant DOM nodes (e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"heading"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" -> "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<h1>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"paragraph"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" -> "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<p>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"), and render it to screen."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Operating on a state model in JavaScript without reliance on DOM brings the following benefits:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Portability"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The same data can be rendered on different platforms using platform-specific UI primitives."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Headless mode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Tests are easier to write, manipulation on state can be done on the server without an actual browser."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"During initialization:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Editor initializes all required states (content state, selection state) in JavaScript."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Editor loops through the content state and renders it to the DOM."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update approach","link":{"type":"url","url":"#update-approach"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Updates to the editor will modify the underlying state model and result in DOM updates. However, how do we know what DOM updates need to be made? Do we blow away the entire DOM and re-render from scratch? That works but sounds wasteful and isn't great for performance, especially if the content is long and there are a lot of DOM nodes."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Can we just update the parts of the DOM that need to be updated? Here's how:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Editor intercepts the user event (e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"input"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"keypress"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Editor converts the event into a supported command (e.g. inserting character, deleting a character, etc)."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Editor makes a clone of the content state."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Editor modifies the cloned content state."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Editor compares the original content state with the cloned content state to determine the DOM changes required (also known as reconciliation)."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Editor modifies the DOM based on the determined changes."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Such an update flow is similar to how React maintains a virtual DOM and only makes the minimum necessary DOM changes when updating based on the new state. This process is called reconciliation."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Lexical implements its own "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"DOM reconciliation process","link":{"type":"url","url":"https://lexical.dev/docs/intro#dom-reconciler"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" that is independent of React. This allows Lexical to be UI-agnostic and can be used within React, Vue, Angular, Svelte apps."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Summary","link":{"type":"url","url":"#summary"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In summary, most rich text editors on the web use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and take the following high-level approach:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design a editor-specific model of the document content"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Create a mapping between the model and DOM elements"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Define a set of supported operations on this model (e.g. insert text at position, delete text, format text)"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Translate user events (keypresses and mouse clicks) into a sequence of these supported operations"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update the DOM based on these operations, ideally with minimal DOM manipulation calls"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We've briefly discussed the high-level approach. Covering the above is probably sufficient in the context of a 45-minute front end system design interview."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, for a holistic understanding of how modern extensible rich text editors are designed, we recommend going through the rest of the article which dives deeper into the architecture, data entities, and available APIs."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Architecture / high-level design","link":{"type":"url","url":"#architecture--high-level-design"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/rich-text-editor/rich-text-editor-architecture.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Editor","link":{"type":"url","url":"#editor"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The editor consists of two parts: (1) Core (2) Any additions added by developers (listeners and transformers)."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Core","link":{"type":"url","url":"#core"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This rich text editor design is very extensible. The core contains the bare minimum logic needed for a user event -> state update -> DOM updates operation, then allowing for extension by providing commands that can be invoked from outside."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Breaking down the update flow:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Commands can be dispatched in multiple ways. They can either be from:"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"DOM events on the content editor"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": They originate from a user interacting with the content DOM element (typing, deleting, moving the cursor, etc). DOM events on the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" DOM element are mapped to recognized commands (see "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"LexicalEvents.ts","link":{"type":"url","url":"https://github.com/facebook/lexical/blob/main/packages/lexical/src/LexicalEvents.ts"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"). Refer to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lexical's list of supported commands","link":{"type":"url","url":"https://github.com/facebook/lexical/blob/main/packages/lexical/src/LexicalCommands.ts"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to be dispatched."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Programmatically via the Toolbar"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Dispatched programmatically (from the toolbar or within listeners/transforms), e.g. to change formatting or insert/remove nodes."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The editor receives the commands, makes a clone of the current content state ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"PendingEditorState"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"), and updates the content state as per the command (see "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"LexicalUpdates.ts","link":{"type":"url","url":"https://github.com/facebook/lexical/blob/main/packages/lexical/src/LexicalUpdates.ts"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"). Both previous and current editor states are necessary for the DOM reconciliation process."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The reconciler receives both the current content state ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ActiveEditorState"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") and modified content state ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"PendingEditorState"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") and compares the two to create/update/remove the relevant DOM nodes corresponding to the new editor state. The contents within the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" DOM element will then be modified (see "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"LexicalReconciler.ts","link":{"type":"url","url":"https://github.com/facebook/lexical/blob/main/packages/lexical/src/LexicalReconciler.ts"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"). The reconciler serves as a communication layer between the content state and the rendered UI (a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element). If a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<canvas>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" UI approach is desired (like in Google Docs), most of the required changes will lie in the reconciler."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Listeners","link":{"type":"url","url":"#listeners"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Listeners are a mechanism that allow the editor to inform the developer when a certain operation has occurred. Since commands are dispatched as part of the editor update flow, developers can add listeners for these commands (you can view them as events) and react accordingly."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The API of listeners will be discussed in the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"deep dive section below","link":{"type":"url","url":"#listeners-and-commands"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Listeners are typically beyond the scope of rich text editors in the context of a system design interview, but are essential for making powerful, extensible, and customizable rich text editors."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Transforms","link":{"type":"url","url":"#transforms"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Transforms are a mechanism to respond to changes within the editor, before reconciliation happens. Multiple transforms still lead to a single DOM reconciliation pass."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The API of transforms will be discussed in the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"deep dive section below","link":{"type":"url","url":"#transforms-1"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Transforms are beyond the scope of rich text editors in the context of a system design interview, but are essential for making powerful, extensible and customizable rich text editors."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Input UI","link":{"type":"url","url":"#input-ui"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Important elements of a rich text editor UI."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Content element","link":{"type":"url","url":"#content-element"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" DOM element. The editor adds event listeners (e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"input"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"click"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"keydown"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") to this element and responds to these events by mapping them to its internal commands (e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"FORMAT_TEXT"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"SELECTION_CHANGE"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"INSERT_LINE_BREAK"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") and dispatching them so that the state can be updated."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Toolbar element","link":{"type":"url","url":"#toolbar-element"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Toolbar at the top of almost every rich text editor, containing the formatting buttons. It directly tells the editor to dispatch commands. Note that the toolbar UI is left entirely to the developer to customize. The rich text editor simply provides commands for the toolbar to dispatch programmatically, which is independent of the appearance."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Headless mode","link":{"type":"url","url":"#headless-mode"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The proposed architecture allows for the rich text editor to be used in a headless fashion. The editor can be initialized with some existing content and commands can be dispatched programmatically to modify the editor state. The only difference is that there's no need for a reconciliation step because there's no DOM to update."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Headless modes are useful for writing tests for the internals or manipulating the editor state on the server."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data model","link":{"type":"url","url":"#data-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are a few core entities within rich text editors – the editor instance, which contains editor states, content states (nodes) and selection state. All the Editor-related interfaces/classes will be prefixed with "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Editor"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to disambiguate from DOM types with the same name."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Editor and EditorState","link":{"type":"url","url":"#editor-and-editorstate"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The core data model for a rich text editor is the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Editor"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". There can be multiple rich text editors on the page and each "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" DOM element is associated with one "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Editor"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" instance, where each instance contains its own content state, selection state, transforms, listeners, customizations, etc."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In TypeScript, the core entities resemble:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"// https://github.com/facebook/lexical/blob/71880d22f63a8f2631352a7032a22f639238b306/packages/lexical/src/LexicalEditor.ts#L562\ninterface Editor {\n  // Reference to contenteditable DOM element.\n  rootElement: HTMLElement | null;\n  // Both current and pending EditorStates.\n  editorState: EditorState;\n  pendingEditorState: EditorState | null;\n  // Non-core fields are omitted.\n}\n\n\ninterface EditorState {\n  // Primarily contains content (nodes) and selection state.\n  nodes: EditorNodes;\n  selection: EditorSelection | null;\n}\n\n\ninterface EditorNodes {\n  // Exact structure to be discussed.\n}\n\n\ninterface EditorSelection {\n  // Exact structure to be discussed.\n}"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Content state (nodes structure)","link":{"type":"url","url":"#content-state-nodes-structure"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The most important entity to discuss is the content state – how to design the state such that it can store rich text formatting consisting of block and inline elements, styling, custom nodes, etc."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The most flexible format to use is a tree-like structure. Since the DOM is a tree, a tree structure definitely works. However, let's discuss the possible formats and their tradeoffs."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Nodes","link":{"type":"url","url":"#nodes"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Notice that most text-centric documents (like the current document you're reading) consist of blocks of headings and paragraphs and within each block-level element, some contain custom inline elements for formatting, like bold, italics, underline, etc. Nodes are discrete pieces of state that hold contents and have a hierarchical relationship between each other. The content state contains heading nodes, paragraph nodes, text nodes. etc."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Let's first test your understanding of the DOM. In the following HTML, how many DOM "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Node"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s are being created?"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<p>Hello <strong>World</strong></p>"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If you answered 2, you are mistaken. Text in the browser has to be rendered using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Text","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/API/Text"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" nodes","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/API/Text"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", so there are actually 4 nodes:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Paragraph element ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<p>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Text node containing "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"Hello \""}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Strong element ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<strong>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Text node containing "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"\"World\""}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note that the DOM "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Element"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" interface extends from the DOM "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Node"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" interface. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Element"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s are also "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Node"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"More accurately, the created DOM looks like this:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<HTMLParagraphElement>\n  <Text>Hello </Text>\n  <HTMLStrongElement>\n    <Text>World</Text>\n  </HTMLStrongElement>\n</HTMLParagraphElement>"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"One reasonable data structure for content state which closely resembles the DOM is to have "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s that inherit from "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":":"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s can contain children, which can be other "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s or "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" can only contain text. Since they cannot contain any other nodes, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"they"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" are leaf nodes."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These nodes can be subclassed, e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"HeadingNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ParagraphNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" inherit from "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/rich-text-editor/rich-text-editor-tree.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": These are custom interfaces/classes implemented within the rich text editor, not to be confused with DOM "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Element"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Text"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"interface EditorNode {}\n\n\ninterface ElementNode extends EditorNode {\n  children: Array<EditorNode>;\n}\n\n\ninterface TextNode extends EditorNode {\n  text: string;\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"With a structure resembling the DOM, we are able to represent all sorts of possible rich text content and formatting."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Tree representation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": How are these nodes represented within "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorState"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"? An intuitive way is to mirror the resulting DOM in JavaScript – a 1:1 tree representation by using an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" subclass as the root node."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  type: \"root\",\n  children: [\n    {\n      type: \"heading\",\n      children: [\n        { type: \"text\", text: \"Hello world\" },\n      ]\n    },\n    {\n      type: \"paragraph\",\n      children: [\n        { type: \"text\", text: \"Lorem \" },\n        { type: \"text\", text: \"ipsum\", format: \"bold\" }\n      ]\n    }\n  ]\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Many rich text editors (e.g. Slate.js, Draft.js) use this tree-like structure. It works, but trees aren't the most efficient data structure for frequent updates. For one, trees do not provide efficient access to its nodes; accessing deep leaf nodes would require traversal of the tree starting from the root."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Map with child pointers"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": How about using a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Map"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s that contains pointers to other nodes?"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"type NodeKey = string;\n\n\ntype NodeMap = Record<NodeKey, EditorNode>;\n\n\ninterface ElementNode extends EditorNode {\n  children: Array<NodeKey>;\n  // Can contain other fields, depending on the node type.\n}\n\n\ninterface TextNode extends EditorNode {\n  text: string;\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/rich-text-editor/rich-text-editor-treemap.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"NodeMap"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" gives the same tree as before:"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/rich-text-editor/rich-text-editor-treemap-nodes.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Using this structure, obtaining a reference to the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s is a matter of doing "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"nodeMap.get(nodeKey)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Map with children as linked list"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Lexical started with using a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Map"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s with a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"children"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" pointer array. Eventually it moved to doubly linked lists (instead of arrays) for its child node pointers as a performance optimization along with parent pointers. All "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s can have siblings and parents. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s have additional references to their first and last child, if they exist."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"type NodeKey = string;\n\n\ntype NodeMap = Record<NodeKey, EditorNode>;\n\n\ninterface EditorNode {\n  parent: NodeKey | null;\n  prev: NodeKey | null;\n  next: NodeKey | null;\n  // Can contain other fields, depending on the node type.\n}\n\n\ninterface ElementNode extends EditorNode {\n  firstChild: NodeKey | null;\n  lastChild: NodeKey | null;\n  // Can contain other fields, depending on the node type.\n}\n\n\ninterface TextNode extends EditorNode {\n  text: string;\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/rich-text-editor/rich-text-editor-linked-list.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"NodeMap"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" gives the same tree as before, but with more pointers between nodes."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/rich-text-editor/rich-text-editor-linked-list-nodes.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Let's look at the advantages and disadvantages of this map + linked list structure:"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Advantages"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Single-layer "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Map"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", extremely easy to clone, both shallowly and deeply"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"O(1) access to any "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", if you know the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"NodeKey"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Efficient removal and addition of child nodes because children are a doubly linked list"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Provides access to the parent node (not specific to linked list implementation)"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reparenting of nodes is a matter of updating pointers"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Disadvantages"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Updates made to the content will require careful updating of pointers on multiple "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s, similar to linked list manipulation"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Knowing the size of the children requires counting. This can be mitigated by maintaining a cached size field on "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s that is updated whenever children are added/removed"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Getting all the children of a node requires traversal from the first node to the last node"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Hard for human eyes to read (not very important)"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Formatting","link":{"type":"url","url":"#formatting"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"One tricky issue with formatting text in the DOM is when characters have more than one formatting. E.g. to render the text "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Tarzan "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"and"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Jane"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". See that:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Tarzan\" is bolded"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"and\" is both bolded and underlined"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Jane\" is underlined"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Nested tags"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": In HTML/DOM, there are multiple ways to achieve this formatting. Here are some possible ways:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<strong>Tarzan </strong><u><strong>and</strong> Jane</u>"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<strong>Tarzan <u>and</u></strong><u> Jane</u>"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<strong>Tarzan </strong><strong><u>and</u></strong><u> Jane</u>"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The main downside of this approach comes from there being many ways to render the HTML for the formatted text, and many possible different ways to nest when the text has even more formatting, e.g. italics or strikethrough."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The first two ways use nested tags for formatting and it can become a problem when editing already-formatted text to add/remove formatting, the editor needs to introduce more elements for the formatting, or remove the right elements (potentially even combining them) when formatting is removed. Given the number of possible combinations for composite formatting, it is quite complex to implement editing correctly."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is able to handle the formatting correctly, but the resulting HTML is messy and not optimized."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Format ranges"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Another way is to use format ranges (not to be confused with selection range), where each format is labeled with start/end indices. "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Tarzan "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"and"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Jane"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" will be:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"[\n  { start: 0, end: 10, format: 'bold' },\n  { start: 7, end: null, format: 'underline' },\n];"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This list-like format is definitely convenient and more readable. But ultimately, to be rendered to the DOM, the list has to first be converted into element and text nodes. Updates to text will require computation for updating indices correctly."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lexical's formatting approach"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Let's take a closer look at the last option in the HTML approach:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<strong>Tarzan </strong><strong><u>and</u></strong><u> Jane</u>"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This approach refrains from having multiple tags of the same level within a tag – nested tags will never have sibling HTML tags or sibling text nodes. This is Lexical and Slate.js' approach for formatting text."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Although this approach results in the most verbose DOM, the structure is flat and can be represented using a flat list of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<TextNode text=\"Tarzan \" format={[\"bold\"]} />\n<TextNode text=\"and\" format={[\"bold\", \"underline\"]} />\n<TextNode text=\" Jane\" format={[\"underline\"]} />"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When editing the formatting of the text, the following scenarios are possible:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Adding formatting to text"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is split into two or more "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s, with some of them having the new formatting."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Removing formatting from text"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The editor simply has to look at the surrounding "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s, determine if the formatting is exactly the same, combine them into a single "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" if so."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Both Lexical and Slate.js use a similar content structure that supports block and inline styling, elements and text nodes:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Content is broadly represented by "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s can contain children, which can be other "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s, or "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"All visible text in the rich text editor is contained within "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s, which are leaf nodes"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Only "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s have formatting since formatting is only relevant to text"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"These only cover the core fields needed for basic functionality. More fields will be added as we dive deeper into specific topics below."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Selection state","link":{"type":"url","url":"#selection-state"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In web browsers, the \"selection state\" refers to the portion of a web page that the user has highlighted or selected. This is usually done by clicking and dragging the mouse over text or other content, causing it to be highlighted."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Let's first get a better understanding of the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Selection"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" object in browsers as part of the DOM. Here are the key components:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Selection object"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Selection"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" object is part of the DOM and provides access to the selection state. It can be accessed via "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"window.getSelection()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" in JavaScript. The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Selection"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" object has methods and properties to manipulate and retrieve information about the selection."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Anchor and Focus"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Selection"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" object has two primary points: the anchor and the focus. The anchor is the starting point of the selection. The focus is the endpoint of the selection. These points can be either a text node or an element node along with an offset value, a number representing the offset of the selection within the node. Thus, the anchor and focus points are a combination of a reference to the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"anchorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" / "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"anchorOffset"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"focusNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" / "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"focusOffset"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" pairs."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The selection object has the following important properties:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"interface EditorSelection {\n  anchorNode: EditorNode | null;\n  anchorOffset: number;\n  focusNode: EditorNode | null;\n  focusOffset: number;\n  type: 'caret' | 'range';\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If one or more characters are selected, then the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"type"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" will be "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Range"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", otherwise it will be "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Caret"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"anchorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"anchorOffset"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" values are exactly the same as "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"focusNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"focusOffset"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Strictly speaking, the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Selection"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" object contains one or more "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Range","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/API/Range"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" objects","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/API/Range"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". A "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Range"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" object represents a contiguous part of the document, starting and ending at specific points (similar to anchor and focus points on the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Selection"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" object). There's a long history to the"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Range"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" object if you're interested, but you don't have to bother with it for the sake of understanding selections."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Selection can be backwards","link":{"type":"url","url":"#selection-can-be-backwards"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It's also important to note that selection direction matters! Selection can be backwards and that the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"focusNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" can appear before the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"anchorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". This happens when users highlight text from right to left, so we cannot assume the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"focusNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" will always appear after the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"anchorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This is important to remember because users who primarily navigate using the keyboard might experience difficulties if the selection direction is not taken into account. For instance, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Shift"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" + "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Right Arrow"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" keys should extend the selection if the selection order is forward, but shrink the selection if the selection order is backwards."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How selection works in Lexical","link":{"type":"url","url":"#how-selection-works-in-lexical"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Editor"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" maintains its own "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Selection"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" state that mirrors "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"document.getSelection()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" but points to its own "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s (within the node map) instead of DOM nodes. It does so by listening to DOM events like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"selectionchange"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" on the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"document "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"or arrow keypresses within the content UI. However, since "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"selectionchange"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" events are global, the event handler is shared between all editor instances on the page, so it needs a way to know which "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is being modified by tracing the parent chain of the selection nodes, or if none of the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s are in focus."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Summary","link":{"type":"url","url":"#summary-1"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Here is an overview of the data within "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Editor"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" instances, closely following Lexical's internal state model. To render the content to the DOM, the editor renders recursively from the root node by rendering the node, then iterating through the children starting from the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"firstChild"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" pointer and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"next"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" field of subsequent child."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"interface Editor {\n  // Reference to contenteditable DOM element.\n  rootElement: HTMLElement | null;\n  // Both current and pending EditorStates.\n  editorState: EditorState;\n  pendingEditorState: EditorState | null;\n\n\n  // Non-core fields are omitted.\n}\n\n\ntype NodeKey = string;\n\n\ninterface EditorState {\n  // Primarily contains content (nodes) and selection state.\n  nodes: EditorNodeMap;\n  rootNodeKey: NodeKey;\n  selection: EditorSelection | null;\n}\n\n\ninterface EditorNode {\n  parent: NodeKey | null;\n  prev: NodeKey | null;\n  next: NodeKey | null;\n}\n\n\ninterface ElementNode extends EditorNode {\n  type: 'element';\n  firstChild: NodeKey | null;\n  lastChild: NodeKey | null;\n  // Can contain other fields, depending on the node type.\n}\n\n\ninterface TextNode extends EditorNode {\n  type: 'text';\n  text: string;\n}\n\n\ntype EditorNodeMap = Record<NodeKey, EditorNode>;\n\n\ninterface EditorSelection {\n  anchorNode: EditorNode | null;\n  anchorOffset: number;\n  focusNode: EditorNode | null;\n  focusOffset: number;\n  type: 'caret' | 'range';\n}"}}],"language":"plain text"}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interface definition (API)","link":{"type":"url","url":"#interface-definition-api"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Editor","link":{"type":"url","url":"#editor-apis"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" APIs","link":{"type":"url","url":"#editor-apis"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The following APIs are for "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Editor"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" instances and heavily reference Lexical's "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Editor"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" API, with some tweaks. There are some minor differences, but they are not crucial."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Initialization","link":{"type":"url","url":"#initialization"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The first API to discuss is initialization of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Editor"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" instances. The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Editor"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" constructor can expect the following parameters."}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Name"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Type"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"rootElement"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Element"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTML element to mount the rich text editor"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"namespace"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"string"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Unique identifier for each editor instance"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"initialEditorState"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"EditorState"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Initial editor state – content nodes and selection"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"nodesConfig"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Array of EditorNode classes and subclasses"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Array of EditorNode classes and subclasses that are supported by this editor"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"theme"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"ThemeObject"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mapping of node types to CSS classes. See section on theming below"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since there can be multiple rich text editor instances on the page, it'll be useful to allow specifying a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"namespace"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" so that developer-created listeners can identify which instance is being edited."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"See the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"full list of editor constructor arguments here","link":{"type":"url","url":"https://github.com/facebook/lexical/blob/5a7d9c71d8b877f77f7d618ff228159433f4d520/packages/lexical/src/LexicalEditor.ts#L180"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update APIs","link":{"type":"url","url":"#update-apis"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"While most updates will happen because of users editing the content directly within the editor, it'd be useful to provide programmatic ways of triggering updates."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.update(callback: Function)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A method that receives a function containing the current "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorState"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". Modifications to the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorState"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" will result in DOM updates. Lexical has a slightly different API but the motivations are similar."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.setEditorState(editorState: EditorState)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A method that replaces the current editor state with a new editor state, marks the root node as dirty and invokes full reconciliation of all nodes."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Serialization and deserialization APIs","link":{"type":"url","url":"#serialization-and-deserialization-apis"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.getEditorState()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Get the current "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorState"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" as a JavaScript object (not a string). This is useful for passing editor states to other instances."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.getEditorStateSerialized()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Get the serialized version of the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorState"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" as a JSON string. A string representation is necessary for long-term persistence (e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"localStorage"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" or sending over the network to save within databases)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.parseEditorState(serializedEditorState: string)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Load editor state from a serialized string obtained from "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.getEditorStateSerialized()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Event-related APIs","link":{"type":"url","url":"#event-related-apis"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.dispatchCommand(command: string, payload: unknown)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Method to dispatch a command to update the editor, with an optional event-specific payload."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.registerCommand(command: string, callback: Function)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Register a function that will run when a command is dispatched within the editor. The callbacks have access to the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" instance."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.registerUpdateListener(callback: Function)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Register a function that will run whenever the editor is updated."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.registerNodeTransform(nodeType: string, callback: Function)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Register a function that will run when an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" of a specific type is modified during the update phase (happens before reconciliation)."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Querying APIs","link":{"type":"url","url":"#querying-apis"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Notice that there are a number of APIs that accept callback functions which can read and modify the editor state. These callback functions will need a good way to query for the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s, similar to how the DOM's "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"document"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" object has "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"document.querySelectorAll()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"document.getElementById(), document.getElementsByTagName()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", etc."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.getNodeByKey(nodeKey: string)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Get the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" given its key."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.getElementByKey(nodeKey: string)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Get the underlying HTML DOM "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Element"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" for a specific "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" given its key."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode","link":{"type":"url","url":"#editornode-interface"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" interface","link":{"type":"url","url":"#editornode-interface"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are actually more APIs on "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s. Above, we presented a suggested "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"interface"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" for "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s. In Lexical, these base nodes ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"LexicalNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s) are implemented as classes with the properties and methods that do the following:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Tree structure"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Properties for maintaining the tree structure and sibling order. E.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"parent"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"prev"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"next"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", etc."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Querying"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Methods for querying parent/sibling nodes. These methods abstract the underlying \"linked tree\" implementation structure. E.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"getParent()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"getNextSibling()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", etc."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reconciliation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Methods for creating and updating the DOM elements based on the node's properties during reconciliation (initial render and updates). E.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"createDOM()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"updateDOM()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":","}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":" clone()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Serializing"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Methods for serializing to a JSON string and deserializing from a string, used for importing/exporting to a persistence layer. E.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"exportJSON()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"importJSON()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since we are able to obtain references to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" instances, it'd be useful to have APIs to access the surrounding nodes, similar to how the DOM "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Node"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" interface has properties like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"childNodes"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"firstChild"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"lastChild"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"parentElement"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", etc."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These querying APIs on "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s are useful because:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Can be used by developers who want to add custom behavior within "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.update()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and the event-related API callbacks."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It's necessary to perform traversal and manipulation of the nodes during updates and reconciliation."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, as a good software engineering practice, the underlying structure of the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" should not be exposed; developers should not know that they are implemented as \"linked trees\", hence the APIs should be implemented as methods instead of properties in order to conceal the implementation details."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Exposing the implementation details can result in tighter coupling between library code and developer code, resulting in breaking changes and a terrible migration experience. Lexical migrated from the map with child pointers to the map with linked list implementation with ease because its APIs did not make assumptions on how the internal states were implemented."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode","link":{"type":"url","url":"#editornode-apis"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" APIs:","link":{"type":"url","url":"#editornode-apis"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editorNode.getParent()"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editorNode.getNextSibling()"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editorNode.insertAfter()"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editorNode.insertBefore()"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editorNode.isSelected()"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editorNode.getTextContent()"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Only the important APIs are mentioned here. For more possible APIs, see "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"LexicalNode","link":{"type":"url","url":"https://lexical.dev/docs/api/classes/lexical.LexicalNode"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" API docs on Lexical website","link":{"type":"url","url":"https://lexical.dev/docs/api/classes/lexical.LexicalNode"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode","link":{"type":"url","url":"#elementnode-apis"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" APIs:","link":{"type":"url","url":"#elementnode-apis"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" can have child nodes, so additional APIs are provided to query the child nodes."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"elementNode.getChildren()"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"elementNode.getFirstChild()"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"elementNode.getLastChild()"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Only the important APIs are mentioned here. For more possible APIs, see "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode","link":{"type":"url","url":"https://lexical.dev/docs/api/classes/lexical.ElementNode"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" API docs on Lexical website","link":{"type":"url","url":"https://lexical.dev/docs/api/classes/lexical.ElementNode"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextNode","link":{"type":"url","url":"#textnode-apis"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" APIs:","link":{"type":"url","url":"#textnode-apis"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" are leaf nodes and they are primarily concerned with text formatting."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"textNode.setTextContent()"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"textNode.setFormat()"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"textNode.getFormat()"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Only the important APIs are mentioned here. For more possible APIs, see "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextNode","link":{"type":"url","url":"https://lexical.dev/docs/api/classes/lexical.TextNode"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" API docs on Lexical website","link":{"type":"url","url":"https://lexical.dev/docs/api/classes/lexical.TextNode"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimizations and deep dive","link":{"type":"url","url":"#optimizations-and-deep-dive"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The sections above have given a good overview of how a modern, extensible, modular text editor can be designed, using Lexical as an example. Let's dive into how Lexical handles the following topics."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update loop in detail","link":{"type":"url","url":"#update-loop-in-detail"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In this section we will explain the entire update loop in detail, aka what happens when "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.update(fn)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is called, either via a user DOM event (e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"input"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"keypress"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"), or a command dispatched programmatically (e.g. from the toolbar)."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Clone state"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Editor makes a "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"shallow clone"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" of the content state, which is the nodes map ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Map<NodeKey, EditorNode>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"). A separate "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Map"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" instance is created, but the values are all pointing to the original "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Process updates"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The callback passed to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.update(fn)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is called"}}],"children":[{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Whenever "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s are modified, they are first cloned before modification."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The cloned content state will be updated to point to the new node instance."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The modified node and its chain of parent nodes are marked as dirty."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since the callbacks can call "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.update(fn)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" again, the editor maintains a queue of update callbacks to go through and the queue is processed in sequence."}}]}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Process transforms"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": All registered transforms are called."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reconciliation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": 5. If there are any dirty nodes, the reconcile function is called starting from the root node and recursively on all the child nodes. 6. For dirty nodes, the reconcile function updates the DOM based on the new "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s. 7. As an optimization, reconciliation can be skipped if both new and old "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" instances for a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"NodeKey"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" are the same and the node is not dirty. It means that nothing in the node or its entire subtree was modified."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Process listeners"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": All registered listeners are called."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reconciliation","link":{"type":"url","url":"#reconciliation"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Above, we suggested an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"interface"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" for "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s. In reality, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"LexicalNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s, which are Lexical's version of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s, are "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"base classes","link":{"type":"url","url":"https://github.com/facebook/lexical/blob/main/packages/lexical/src/LexicalNode.ts"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" that are extended by other nodes with the following structure/interface."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"// https://github.com/facebook/lexical/blob/main/packages/lexical/src/LexicalNode.ts\nexport class LexicalNode {\n  /**\n   * Called during the reconciliation process to determine which nodes\n   * to insert into the DOM for this Lexical Node.\n   */\n  createDOM(_config: EditorConfig, _editor: LexicalEditor): HTMLElement {\n    invariant(false, 'createDOM: base method not extended');\n  }\n\n\n  /**\n   * Called when a node changes and should update the DOM\n   * in whatever way is necessary to make it align with any changes that might\n   * have happened during the update.\n   *\n   * Returning \"true\" here will cause lexical to unmount and recreate the DOM node\n   * (by calling createDOM). You would need to do this if the element tag changes,\n   * for instance.\n   *\n   * */\n  updateDOM(\n    _prevNode: unknown,\n    _dom: HTMLElement,\n    _config: EditorConfig,\n  ): boolean {\n    invariant(false, 'updateDOM: base method not extended');\n  }\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"All the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"LexicalNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" classes have to implement a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"createDOM()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"updateDOM()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" method, used for reconciliation purposes:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"createDOM()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Called during the initial render or if the root DOM node changes."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"updateDOM()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Called during the reconciliation phase if the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" instance has been modified. This method should contain reconciliation logic – the node should update the DOM's contents if the node's "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"HTMLElement"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" can be reused. If it returns "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"true"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"createDOM()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is called and the original DOM element is replaced by the newly-returned DOM element."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"They can be used as part of the reconciliation process."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reconcile from the root"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Start the reconciliation from the root of the new nodes."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Node comparison"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Call "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"node.updateDOM()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". As mentioned, if it returns "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"true"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", a new element should be created from scratch. Otherwise, the method should have modified the DOM element corresponding to that node."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Child reconciliation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": If one of the old or new nodes are "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s, compare children of the nodes by using the node's keys to match old and new children."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Insert"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Add new children that do not have a corresponding old child."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Remove"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Remove old children that do not have a corresponding new child."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Same position"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Call the reconcile function on the old and new nodes."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Different positions"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": If the order of children has changed, reorder them within the parent DOM element, then call the reconcile function on the old and new nodes."}}]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are other nuances with regards to reconciliation but the general idea is captured above."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard shortcuts","link":{"type":"url","url":"#keyboard-shortcuts"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Out-of-the-box, Lexical supports the common keyboard shortcuts like copying, pasting, cutting, bold formatting, etc. via the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"'beforeinput'"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" DOM event. Lexical core listens for that event on the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element and uses the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"event.inputType","link":{"type":"url","url":"https://w3c.github.io/input-events/#interface-InputEvent-Attributes"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" value","link":{"type":"url","url":"https://w3c.github.io/input-events/#interface-InputEvent-Attributes"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to determine the user intended action, intercept the event, and dispatch the relevant Lexical commands."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Another benefit of using normalized Lexical commands (e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DELETE_WORD_COMMAND"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"PASTE_COMMAND"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", etc.) is that developers can focus on the users' intentions and not worry about the different shortcuts on different operating systems, devices, or keyboard layouts."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The code looks something like:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"// https://github.com/facebook/lexical/blob/24b58d8129a317f3467a6e81360fef0f042f04e4/packages/lexical/src/LexicalEvents.ts#L525\n$contentEditableElement.addEventListener('beforeinput', (event) => {\n  // Prevent default behavior since Lexical will handle it by modifying the nodes. event.preventDefault();\n  switch (event.inputType) {\n    case 'deleteContentForward':\n    case 'deleteHardLineForward':\n    case 'deleteSoftLineForward': {\n      editor.dispatchCommand('DELETE_LINE_COMMAND');\n      break;\n    }\n\n\n    case 'formatUnderline': {\n      editor.dispatchCommand('FORMAT_TEXT_COMMAND', 'underline');\n      break;\n    }\n\n\n    case 'formatBold': {\n      editor.dispatchCommand('FORMAT_TEXT_COMMAND', 'bold');\n      break;\n    } // Handle other cases...\n  }\n});"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"beforeinput"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" event is not standardized across browsers, so Lexical also listens for the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"keydown"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" event to determine if there is any intention of formatting. Additionally, selection events such as navigation are also handled."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"// https://github.com/facebook/lexical/blob/24b58d8129a317f3467a6e81360fef0f042f04e4/packages/lexical/src/LexicalEvents.ts#L996\nhttps: $contentEditableElement.addEventListener('keydown', (event) => {\n  const { key, ctrlKey, metaKey, altKey } = event;\n  event.preventDefault();\n\n\n  // All the isX() functions are utility functions to determine the\n  // key combinations pressed with support for\n  // different browsers and operating systems\n  if (isMoveForward(key, ctrlKey, altKey, metaKey)) {\n    dispatchCommand('KEY_ARROW_RIGHT_COMMAND');\n  } else if (isMoveBackward(key, ctrlKey, altKey, metaKey)) {\n    dispatchCommand('KEY_ARROW_LEFT_COMMAND');\n  } else if (isBold(key, altKey, metaKey, ctrlKey)) {\n    dispatchCommand('FORMAT_TEXT_COMMAND', 'bold');\n  } else if (isUnderline(key, altKey, metaKey, ctrlKey)) {\n    dispatchCommand('FORMAT_TEXT_COMMAND', 'underline');\n  } else {\n    // Other events\n  }\n});"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Developers are also free to attach their own keyboard event handlers using whichever means suitable, outside of Lexical core. These custom keyboard events handlers can interact with the editor state by using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.dispatchCommand()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to dispatch commands."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Theming","link":{"type":"url","url":"#theming"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Most rich text editors render vanilla HTML elements and leave the styling to the developer (except for formatting like bold text, underline text), Lexical included. This means that by modifying CSS, developers can style the rich text contents however they please."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<div contenteditable=\"true\" data-lexical-editor=\"true\">\n  <h1>Hello World</h1>\n  <p><span>Goodbye Earth</span></p>\n</div>"}}],"language":"plain text"}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/* Scoped only to Lexical output */\n[data-lexical-editor='true'] h1 {\n  font-size: 32px;\n}\n\n\n[data-lexical-editor='true'] p {\n  font-size: 16px;\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lexical provides another way of theming, which is to accept a customizable theming object that maps "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" types to CSS class names."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"// Editor constructor/initializer accepts this `theme` object\nconst theme = {\n  heading: 'editor-heading',\n  paragraph: 'editor-paragraph',\n  text: 'editor-text',\n};"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"HeadingNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (subclass of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") is rendered, the DOM element will include the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor-heading"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" class."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Further reading: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"https://lexical.dev/docs/getting-started/theming","link":{"type":"url","url":"https://lexical.dev/docs/getting-started/theming"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Custom nodes","link":{"type":"url","url":"#custom-nodes"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Creating custom nodes in Lexical is a matter of extending base nodes like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", etc., overriding the methods. Within Lexical's core, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ParagraphNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is already extending "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The custom node should also be passed into the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Editor"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" constructor as "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"nodesConfig"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", which is a list of supported "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s in the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Editor"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" instance."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Custom node example","link":{"type":"url","url":"#custom-node-example"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The following is an example taken from Lexical docs on how to create a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ColoredTextNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" class that has a color property on "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"export class ColoredNode extends TextNode {\n  __color: string;\n\n\n  constructor(text: string, color: string, key?: NodeKey): void {\n    super(text, key);\n    this.__color = color;\n  }\n\n\n  static getType(): string {\n    return 'colored';\n  }\n\n\n  static clone(node: ColoredNode): ColoredNode {\n    return new ColoredNode(node.__text, node.__color, node.__key);\n  }\n\n\n  createDOM(config: EditorConfig): HTMLElement {\n    const element = super.createDOM(config);\n    element.style.color = this.__color;\n    return element;\n  }\n\n\n  updateDOM(\n    prevNode: ColoredNode,\n    dom: HTMLElement,\n    config: EditorConfig,\n  ): boolean {\n    if (prevNode.__color !== this.__color) {\n      dom.style.color = this.__color;\n    }\n\n\n    return false;\n  }\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Further reading: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"https://lexical.dev/docs/concepts/nodes#creating-custom-nodes","link":{"type":"url","url":"https://lexical.dev/docs/concepts/nodes#creating-custom-nodes"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Listeners and commands","link":{"type":"url","url":"#listeners-and-commands"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Listeners are callbacks triggered on internal Lexical events. One of the most common types is an \"update\" listener, which is code that gets run after an update is finished. They're useful if you want to do something whenever a change is made. For example, if you want to immediately persist the data or update your user interface to enable and disable the appropriate toolbar buttons. The code inside the update listeners should be fairly lightweight, as they are run on every keystroke."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"editor.registerUpdateListener(({ editorState }) => {\n  // Do something with editorState\n});"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Listeners are designed to be generic and most of the time you'd want to listen for specific events. That's where commands come in handy. Commands are events that can be dispatched and listened to so that both the editor and external code can respond to them. If you are familiar with the concept of actions and reducers in Redux, Flux or "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"useReducer"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" in React, the idea is similar."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Commands in Lexical are actually objects that can be imported from Lexical core, but in our command-related code examples, we've used strings for simplicity sake."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The two main command-related APIs are:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.dispatchCommand(command: string, payload: unknown)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Method to dispatch a command to update the editor, with an optional payload. It returns a teardown function that can be used to clean up the listener."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.registerCommand(command: string, callback: Function)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Register a function that will run when a command is dispatched within the editor. The callbacks have access to the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" instance."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Stopping propagation","link":{"type":"url","url":"#stopping-propagation"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Something that wasn't mentioned was that the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"registerCommand"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"'s callback can return "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"true"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to signal to the other listeners that the command has been handled and propagation will be stopped, just like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"event.propagation()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The following example demonstrates how to handle bold formatting in a custom fashion within the editor by registering a listener for the bold command."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"editor.registerCommand('FORMAT_BOLD_COMMAND', (payload) => {\n  // Custom code to handle bold formatting.\n  return true;\n});"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Priority","link":{"type":"url","url":"#priority"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The 3rd parameter of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.registerCommand()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is a numerical priority value that decides the order in which the command listeners respond to the commands."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"export const COMMAND_PRIORITY_EDITOR = 0;\nexport const COMMAND_PRIORITY_LOW = 1;\nexport const COMMAND_PRIORITY_NORMAL = 2;\nexport const COMMAND_PRIORITY_HIGH = 3;\nexport const COMMAND_PRIORITY_CRITICAL = 4;"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Listeners registered by Lexical core or its first-party plugins will use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"COMMAND_PRIORITY_EDITOR"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (the lowest priority) to give a chance for developers to intercept the events and customize the behavior, potentially even stopping the propagation."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Further reading: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"https://lexical.dev/docs/concepts/commands","link":{"type":"url","url":"https://lexical.dev/docs/concepts/commands"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Transforms","link":{"type":"url","url":"#transforms-1"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Commands provide a mechanism to respond to content changes via "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.registerCommand()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", but listening to commands is not an efficient way to update the content in response to content updates."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"While developing Lexical early on, the Lexical team noticed that it was common to want to do an update based on another update. For example, if you wanted to style a hashtag in a certain way, you could build a hashtag node. Then, when the user types a hash symbol, you want to turn it into a hashtag node. But in order to do that, we have to wait for Lexical to finish the update, and then in an update listener, we have to go read the new state, go through all the nodes to find out which ones have hash symbols, and change them into hashtag nodes."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Transforms are registered with a certain node type that you care about and you pass it in a closure. Transforms run during an update, after the update has been run but before the reconciler. At this point, we have a list of all the dirty nodes. All the registered transforms that match the node type for the dirty node are called. Each transform then gets a chance to manipulate the editor state before the reconciler is run. So in the hashtag example, we could check for the presence of the hash symbol in the dirty nodes, which is much more efficient than having to check the entire node tree. If we find the hash symbol inside of our transform, we can swap out that node for a hashtag node."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Here's an example that makes a text bold if it contains the substring \"congratulations\"."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"const congratsTransform = editor.registerNodeTransform(TextNode, (textNode) => {\n  if (textNode.getTextContent().includes('congratulations')) {\n    textNode.setFormat('bold');\n  }\n});"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Transforms are also useful if you want to validate the content the user can put into the document or which formatting the user is allowed to use. For example, if you wanted to disallow bold text but you didn't want to go to the trouble of subclassing text node, then you could build a transform where you check to see if the dirty node is bold, and if it is, you just set it back to not bold."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Further reading: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"https://lexical.dev/docs/concepts/transforms","link":{"type":"url","url":"https://lexical.dev/docs/concepts/transforms"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Plugins","link":{"type":"url","url":"#plugins"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Unlike many frameworks, Lexical does not prescribe an interface that plugins have to adhere to. In Lexical, plugins are a combination of commands, transforms, and custom nodes."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What might be surprising is that Lexical core does not support rich text formatting by default. Rich text editing is done through a plugin called "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"lexical-rich-text"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". From the README file:"}}]}},{"object":"block","type":"quote","quote":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":""}}],"children":[{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This package provides a starting point for Lexical users by registering listeners for a set of basic commands that cover simple text-editing behavior such as entering text, deleting characters, copy + paste, or changing the selection with arrow keys. It also provides default behavior for rich text features, such as headings, formatted text, and blockquotes."}}]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lexical's "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"rich text plugin code","link":{"type":"url","url":"https://github.com/facebook/lexical/blob/main/packages/lexical-rich-text/src/index.ts"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" contains definitions of custom nodes like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"QuoteNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"HeadingNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", and many "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.registerCommand()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" calls to add the above-mentioned editing behaviors. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lexical Playground","link":{"type":"url","url":"https://playground.lexical.dev/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is built using this rich text plugin."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Further reading: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"https://lexical.dev/docs/react/plugins","link":{"type":"url","url":"https://lexical.dev/docs/react/plugins"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Serialization & deserialization","link":{"type":"url","url":"#serialization--deserialization"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In the API section, it was mentioned that the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Editor"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" instances have methods to export and import the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorState"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". How is this implemented in practice?"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Recap of the APIs:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.getEditorStateSerialized()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Get the serialized version of the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorState"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" as a JSON string. A string representation is necessary for long-term persistence (e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"localStorage"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" or sending over the network to save within databases)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.parseEditorState(serializedEditorState: string)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Load editor state from a serialized string obtained from "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.getEditorStateSerialized()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As there are many kinds of nodes ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and their subclasses) and even custom nodes, each node type should be responsible for implementing its own serialization and deserialization logic."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"class EditorNode {\n  // Other properties and methods omitted.\n  exportJSON(): Object { … }\n\n\n  static importJSON(serializedNode: Object): EditorNode { … }\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.getEditorStateSerialized()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"exportJSON()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" method of the root node is called, and recursively for all its children. At the end, the JavaScript object is serialized into a string."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.parseEditorState()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"importJSON()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" static method of each node class is called, and recursively for all its children. At the end, the root "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is obtained."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"class Editor {\n  // Pseudo-code for serialization of node\n  getEditorStateSerialized(): string {\n    function serialize(node: EditorNode): Object {\n      const nodeObject = node.exportJSON();\n      node.getChildren().forEach((childNode) => {\n        const childNodeObject = serialize(childNode);\n        nodeObject.children.push(childNodeObject);\n      });\n\n\n      return nodeObject;\n    }\n\n\n    const rootNodeObject = serialize(\n      this.editorState.nodes.get(this.editorState.rootNodeKey),\n    );\n    return JSON.stringify(rootNodeObject);\n  }\n\n\n  parseEditorState(stringifiedEditorState: string) {\n    function deserialize(nodeObject: Object): EditorNode {\n      // Converts a node type to an EditorNode class\n      const NodeClass = getNodeClass[nodeObject.type];\n      const node: EditorNode = NodeClass.importJSON(nodeObject);\n      nodeObject.children.forEach((childNodeObject) => {\n        const childNode = deserialize(childNodeObject);\n        node.appendChild(childNode);\n      });\n      return node;\n    }\n\n\n    const rootNodeObject = JSON.parse(stringifiedEditorState);\n    const rootNode = deserialize(rootNodeObject);\n    this.editorState.rootNodeKey = rootNode.key;\n  }\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These JSON serialization methods are also useful for copying and pasting content between editors of the same namespace."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lexical's serialization features goes beyond JSON serialization:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s can also implement "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"exportDOM()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"importDOM()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" methods for copying and pasting content between Lexical and non-Lexical editors."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Version numbers can be added to serialized states and the deserialization logic can access that version to handle backwards-compatible parsing of nodes."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Undo/redo state","link":{"type":"url","url":"#undoredo-state"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Implementing undo/redo functionality in web applications involves managing the state changes in a way that allows the user to revert (undo) to a previous state or reapply (redo) a reverted state."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Typical stack-based approach","link":{"type":"url","url":"#typical-stack-based-approach"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The typical way to implement undo/redo functionality in applications is to maintain a stack of states and a pointer to the current state. The pointer is initially "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"null"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" when the stack is empty."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update operation (when stack is empty or pointer is at the top of stack)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Push the new state onto the stack, set the pointer to the new top of the stack."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Undo operation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Decrease the pointer by one."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Redo operation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Increase the pointer by one."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update operation (when pointer is not at top of stack)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Remove all states that are above the pointer, push the new state onto the stack, set the pointer to the new top of the stack."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This approach of a single state stack can be implemented using arrays or doubly-linked lists."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Another approach is to have two state stacks – one for undo and another for redo. Undo-ing will shift items from the undo stack to the redo stack, and redo-ing will shift items from the redo stack to the undo stack. Updating with a non-empty redo stack will clear the redo stack."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Did you know that plain "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" by default has an implicit undo/redo functionality? Try it out in the following example by editing the text and using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Ctrl"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Cmd"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" + "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Z"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to undo and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Ctrl"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Cmd"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" + "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Shift"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"+ "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Z"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to redo:"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Undo-able"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"redo-able"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" text."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, it only works for input editing triggered directly by users and not external DOM updates. Because Lexical is intercepting the user events, we cannot leverage the undo/redo functionality."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lexical history plugin","link":{"type":"url","url":"#lexical-history-plugin"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lexical provides the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"@lexical/history","link":{"type":"url","url":"https://github.com/facebook/lexical/tree/main/packages/lexical-history"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" plugin to add undo/redo functionality to Lexical editors. It uses the two-stack approach where the stacks contain "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorState"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s. The plugin adds listeners for "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"UNDO_COMMAND"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"REDO_COMMAND"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" commands. Within the listeners, states are shifted between the stacks where relevant and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.setEditorState()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is called with the new current state."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Structural sharing","link":{"type":"url","url":"#structural-sharing"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"One implicit requirement of the values in the undo/redo states is that new states should not affect the old states. If the states are objects that share the same object references (either directly or within its contents), mutating the current state can affect previous states, affecting the undo/redo functionality."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are a few general strategies regarding states in undo/redo functionality:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Immutable states"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Store each state as an immutable snapshot. This ensures that when you undo or redo an action, you always have a reliable and unaltered version of the state to revert to."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Store states as mutable objects"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This can be easier to implement, but it requires careful management to avoid unintended mutations. A common approach is to perform a clone of the current state to create a new state, then mutate it. Depending on whether the clone is a deep one, the memory usage can be very high due to the high amount of duplicated objects."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Immutable states with structural sharing"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": When a modification is made to an immutable data structure, only the parts of the structure that are affected by the change are duplicated. The unchanged parts are shared between the old and new versions. This significantly reduces the amount of memory required and the time complexity of modifications. Libraries such as "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Immutable.js","link":{"type":"url","url":"https://immutable-js.com/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Immer.js","link":{"type":"url","url":"https://immerjs.github.io/immer/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" are libraries for creating immutable data structures that use structural sharing under the hood."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Draft.js","link":{"type":"url","url":"https://draftjs.org/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" by Meta, which is the predecessor to Lexical, uses Immutable.js to implement its "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorState"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". However, in recent years, Immutable.js has fallen out of favor due to sentiments that the library is huge, has performance and accessibility issues, hence Meta created Lexical to replace Draft.js."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lexical's "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorState"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is immutable but does not use Immutable.js or any other immutable libraries. Structural sharing is implemented in a very clever way. Recall that the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorState.nodes"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" structure is implemented as a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Map"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"NodeKey"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (strings) to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" classes. When the editor is being updated, the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Map"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" structure is being shallowly-cloned. Any updated "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s will be cloned and used in the new "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Map"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", leaving the nodes in the original "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Map"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" untouched. This is how Lexical guarantees immutable "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"EditorState"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s that are great to be used in undo/redo stacks."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Undo/redo granularity","link":{"type":"url","url":"#undoredo-granularity"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Undo/redo granularity refers to the level of detail at which user actions are captured and can be undone or redone. Achieving the right granularity is crucial for providing a good editing experience while maintaining performance and accuracy."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Action level granularity"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Users typically expect certain actions, like typing a word or applying a format, to be grouped together into a single undoable action. Complex actions, such as formatting a large block of text or inserting a table, should be captured as single actions for practicality."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Extremely fine granularity can lead to performance issues, especially if every single keystroke is recorded separately."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Some common granularity levels include:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Character level"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Each individual keystroke is captured. This can lead to very fine-grained control but might overwhelm the undo stack and degrade performance."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Word level"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Groups of characters (e.g., words or phrases) are captured. This is more user-friendly for text editing as users typically think in terms of words rather than characters."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Action level"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Groups related actions, such as applying a style or inserting an element, into single undoable actions."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Transaction level"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Captures complex multi-step actions as a single unit, often used in collaborative editing or complex document manipulations."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Some ways to implement the various granularity levels:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Debouncing"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Debouncing can be used to group closely related actions, such as consecutive keystrokes, into a single undoable action."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Batching by intention"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Batching actions over a period or logical group can help manage granularity. For example, formatting a word bold and the next word bold could be batched as a single action of bolding two words."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lexical calls this batching behavior \"coalescing\" and continuous typing actions will be coalesced into a single undo action. In Lexical, continuous typing events are limited to these three actions:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Forward typing characters"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Normal key presses."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Deleting backwards"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Backspace gestures including backspace key presses."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Forward deletion"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Forward delete gestures including "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Delete"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" key presses."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Further reading: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"https://lexical.dev/docs/concepts/history","link":{"type":"url","url":"https://lexical.dev/docs/concepts/history"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Real-time collaborative editing","link":{"type":"url","url":"#real-time-collaborative-editing"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Real-time collaborative editing is complicated because of the following complexities:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Conflict resolution"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": When multiple users edit the same part of a document simultaneously, conflicts arise. The system must decide which changes to keep or how to merge them."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Undo/redo"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Should undo and redo revert just your own changes or changes by others too?"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Real-time collaborative editing is beyond the scope of rich text editor system design, but Lexical's core model + commands architecture allows for real-time collaboration functionality; the collaboration layer can be built beneath the existing editor core and dispatch commands for the editor core to execute."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For a deep dive on collaborative editing, we recommend reading our entire "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Collaborative Editor system design article","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/collaborative-editor-google-docs"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Operational Transformations (OT) and Conflict-free Replicated Data Types (CRDTs) are ways of handling simultaneous conflicts in documents. OT resolves conflicts by transforming user operations against peer operations by accounting for the state of the document when the operation was made. CRDTs avoid conflicts altogether with specially-designed data structures so that updates can be made in any order and clients will still eventually converge into a consistent state."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Regardless of conflict handling approach, there needs to be a networking layer to inform clients about updates made by peers in real-time. Long polling, WebSockets, and Server-sent Events (SSE) are available options and WebSockets are the by far the most popular approach for real-time collaborative editing."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lexical provides the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"LexicalCollaborationPlugin"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" within the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"@lexical/react"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" package to enable collaborative React-backed Lexical editors, which is built on top of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Yjs","link":{"type":"url","url":"https://github.com/yjs/yjs"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", an implementation of Conflict-free Replicated Data Types (CRDTs). The core ideas implemented by the plugins:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Custom "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"TextNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s that contain special methods for syncing with Yjs events"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bindings with Yjs. These bindings convert Yjs events to Lexical model changes and vice versa"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance","link":{"type":"url","url":"#performance"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lexical stays performant through several key design choices and optimizations:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lightweight core"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The core Lexical package is only 22 kb in size (min+gzip), keeping the initial load time low."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Modular architecture"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Lexical uses a plugin-based system, allowing developers to only include the features they need. This \"pay for what you use\" approach helps maintain performance as projects scale."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lazy-loading support"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Lexical plugins can be lazily-loaded and lazily-initialized, deferring the loading of additional features until the user interacts with the editor. This helps in improving initial load performance."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Efficient updates"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Lexical uses an immutable editor state model, which allows for efficient updates and comparisons. Updates are batched and processed through a single "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"editor.update()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" call, preventing cascading updates."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Efficient reconciliation approach"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Lexical uses a reconciliation approach that acts similarly to a virtual DOM diffing in React, allowing for efficient updates and rendering."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accessibility","link":{"type":"url","url":"#accessibility"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Here are some key accessibility considerations for rich text editors, including things such as the UI which is outside of the editor core."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard accessibility","link":{"type":"url","url":"#keyboard-accessibility"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Focus management"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Ensure the editor can receive focus and that users can navigate through the editor using the keyboard."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard shortcuts"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Provide keyboard shortcuts for common actions (e.g., bold, italic, undo). Ensure these shortcuts are documented and do not conflict with existing browser or screen reader shortcuts. Implementation of keyboard shortcuts is discussed above."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Tab order"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Maintain a logical tab order for navigating through toolbar options and the editor content."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Screen reader support","link":{"type":"url","url":"#screen-reader-support"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"ARIA roles and properties"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Use appropriate ARIA roles (e.g., "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"role=\"textbox\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"role=\"toolbar\""}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") and properties to describe the editor and its controls. See how many "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"ARIA attributes","link":{"type":"url","url":"https://github.com/facebook/lexical/blob/main/packages/lexical-react/src/shared/LexicalContentEditableElement.tsx"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" Lexical adds to the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Live regions"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Use ARIA live regions to announce dynamic changes, such as formatting changes or error messages."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Labels and instructions"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Provide clear labels and instructions for all editor controls and ensure they are announced by screen readers. Icon-only buttons should use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-label"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Visible focus indicators","link":{"type":"url","url":"#visible-focus-indicators"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Ensure that all interactive elements, including the editor itself and toolbar buttons, have visible focus indicators. This helps users who rely on the keyboard to see where the focus is."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Semantic HTML","link":{"type":"url","url":"#semantic-html"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Semantic markup"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Use semantic HTML elements (e.g., "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<strong>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<em>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<ul>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<ol>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<li>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") within the editor to convey meaning."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Content structure"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Ensure that the content structure is maintained, such as headings and lists, to provide a logical reading order."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Speech-to-text software","link":{"type":"url","url":"#speech-to-text-software"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dragon NaturallySpeaking","link":{"type":"url","url":"https://www.nuance.com/dragon.html"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is a popular speech recognition software. Lexical provides a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"lexical-dragon package","link":{"type":"url","url":"https://github.com/facebook/lexical/blob/main/packages/lexical-dragon/src/index.ts"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" that listens for the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"message"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" event (dispatched by Dragon) on "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"window"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and inserts the text into the editor."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Internationalization (i18n)","link":{"type":"url","url":"#internationalization-i18n"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Right-to-left text directions","link":{"type":"url","url":"#right-to-left-text-directions"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The editor should support both left-to-right (LTR) and right-to-left (RTL) text directions. This includes not only the content area but also the UI components."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In Lexical, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ElementNode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s support a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"direction"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" property. When rendering the list of children within the node, the direction property is taken into account."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Input method editors (IMEs)","link":{"type":"url","url":"#input-method-editors-imes"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Ensure the editor works seamlessly with IMEs, which are used for typing in languages that require complex character input, such as Chinese, Japanese, and Korean."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"References","link":{"type":"url","url":"#references"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Articles"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Why ContentEditable is Terrible. Or: How the Medium Editor Works | by Nick Santos","link":{"type":"url","url":"https://medium.engineering/why-contenteditable-is-terrible-122d8a40e480"}}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Open source"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://lexical.dev/","link":{"type":"url","url":"https://lexical.dev/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://docs.slatejs.org/","link":{"type":"url","url":"https://docs.slatejs.org/"}}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Videos"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rethinking Rich Text: A Deep Dive Into the Design of Lexical - Acy Watson","link":{"type":"url","url":"https://www.youtube.com/watch?v=EwoS0dIx_OI"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"001: Intro to Lexical iOS — Lexical iOS Tutorial Series","link":{"type":"url","url":"https://www.youtube.com/watch?v=_maPaQy9jWY"}}}]}}]}}],"questionsMarkdown":null,"answerMarkdown":null,"time":"40 mins"},{"title":"Google Docs","difficulty":"Hard","url":"https://www.greatfrontend.com/questions/system-design/collaborative-editor-google-docs?practice=practice&tab=system-design","questionBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Companies"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Atlassian"}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Question"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design a collaborative document editor that allows users to collaborate on a document in real-time."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This article focuses on the collaboration aspects of collaborative text editing software and not much about text editing itself. For a deep dive into rich text editing, have a look at the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rich Text Editor system design article","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/rich-text-editor"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Real-life examples"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Google Docs","link":{"type":"url","url":"https://www.google.com/docs/about/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Notion","link":{"type":"url","url":"https://www.notion.so/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Quip","link":{"type":"url","url":"https://quip.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Etherpad","link":{"type":"url","url":"https://etherpad.org/"}}}]}}],"answerBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requirements exploration","link":{"type":"url","url":"#requirements-exploration"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Functional"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Any participant can edit / view the document"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Updates by peers on the same document are reflected automatically"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Conflicts are resolved if participants are editing the same part"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"All participants should see the same document revision eventually"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Offline usage? Not required, but we’ll discuss if there's time"}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Non-functional"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Updates by others are reflected in real-time"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Support up to 100 concurrent editors ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Google has the same limit","link":{"type":"url","url":"https://support.google.com/docs/answer/2494822"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")"}}]}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Background","link":{"type":"url","url":"#background"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Firstly, let's understand what a collaborative editing session over Google docs entails. The following characteristics are observed/required of collaborative editing sessions:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Responsive (in the delay sense)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Actions taken by participants (e.g. inserting/deleting characters, formatting) should be reflected instantly."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Real-time updates"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Actions taken by peers should be reflected near instantly."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Conflict-prone"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": During a session there is a high chance of access conflict as participants work on and modify the same parts of the document, e.g. deleting a sentence when another participant is modifying it."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Distributed"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Participants are accessing the web application on their own machines, without any geographical constraints."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Ad hoc"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Participants are free to come and go during a session; they may drop off anytime or join anytime."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Unpredictable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": In general, participants are not following a pre-planned script, it is not possible to predict what information will be accessed and in what order."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The technical term for such collaborative software is \"groupware systems\". Most products in Google Workspace (formerly known as G Suite) like Google Sheets and Google Slides also support real-time collaboration."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note that participants should be considered on the browser tab level. A user can open the same document on two separate tabs. Assuming there is no direct communication between browser tabs for the same user, it will be simpler to treat each tab as a separate participants and sync their document states."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The complexity of real-time collaborative editing solutions arises primarily from communication latency. Ideally, if communication were instantaneous, developing a real-time collaborative editor would be as straightforward as creating a single-user editor as updates from peers would appear as if they were made by the active user."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, network latency limits communication speed, leading to a fundamental challenge: users expect their own edits to be incorporated into the document immediately. Yet, if these edits are applied instantly, they are necessarily inserted into different revisions of the document due to the delay in communication."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Consider the following example: Alice and Bob start with a document that contains the word \"Mary\". Bob deletes the letter \"M\" and then inserts \"H\", intending to change the word to \"Hary\". Meanwhile, Alice, without having received Bob's edits, deletes the letter \"r\" and then deletes \"a\", with the intention of changing the word to \"My\". As a result, both Alice and Bob will receive edits that were applied to versions of the document that never existed on their own machines and without any special handling, the document states might diverge."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Therefore the challenge of real-time collaborative editing is to determine how to correctly apply edits from remote users that were originally made in versions of the document that never existed locally and may conflict with the user's own local changes."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Typically, for front end system design, we only need to care about what goes on within the client. However, for collaborative editing, the server also plays an important role in the collaboration protocol, making it necessary to also discuss the server's state and responsibilities."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Approach","link":{"type":"url","url":"#approach"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It's hard to design an entire complex system by looking at parts in isolation, but it's also not conducive for learning if the final architecture is presented to you without explaining how we arrived at those decisions."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Hence we will discuss the various aspects of the systems, the various approaches that can be taken, the tradeoffs involved, then make a decision on the overall approach."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It's important to note that some of these decisions we will be making have dependencies on each other and the decisions only make sense when used together as part of the overall approach. So if while reading you're wondering how we know that a certain decision is better, read on first and hopefully the later parts will justify the earlier decisions."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"After deciding on the overall approach, we will then dive deeper into the architecture, data model, and APIs to move forward with."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering and editing rich text","link":{"type":"url","url":"#rendering-and-editing-rich-text"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In well-architected systems, rendering the document UI is mostly independent of the communication models and protocols behind the scenes. We explain the \"front end\" of collaborative editors in more detail in the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rich Text Editor system design article","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/rich-text-editor"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Here is a summary of the ways to build rich text editing on the web:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"DOM with augmented fake cursors"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Using regular DOM containing formatted text using HTML elements and styling augmented with fake cursors. This approach is complex due to cursor height and positioning calculations needed."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": By adding the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute to a DOM element, its content becomes editable and even supports keyboard shortcuts for bold, italics, underline formatting. However, it behaves differently in different browsers and formatting options are limited."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTML "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<canvas>"}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This is an advanced approach that uses a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<canvas>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element and rendering everything within the canvas element – text, layout, cursor, etc. This approach basically sidesteps a lot of what the browser provides, and requires reimplementing everything within a canvas context."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In practice, most rich text editors on the web are built using the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute backed by custom event handlers and allows for more content elements."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In 2021, Google "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"announced that Google Docs will be moving towards a canvas based rendering approach","link":{"type":"url","url":"https://workspaceupdates.googleblog.com/2021/05/Google-Docs-Canvas-Based-Rendering-Update.html?utm_source=the+new+stack&utm_medium=referral&utm_content=inline-mention&utm_campaign=tns+platform"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to \"improve performance and consistency in how content appears across different platforms\". While Google Docs uses a canvas-based approach, it is too complex to discuss and most front end developers do not have much experience with canvas. We recommend being familiar with the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute approach first."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In summary, most rich text editors on the web use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"contenteditable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and take the following high-level approach:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design a editor-specific model of the document content, usually tree-based"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Create a mapping between the model and DOM elements"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Define a set of supported operations on this model (e.g. insert text at position, delete text, format text)"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Translate user events (keypresses and mouse clicks) into a sequence of these supported operations"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update the DOM based on these operations, ideally with minimal DOM manipulation calls"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Read more about the \"front end\" of collaborative editors in the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rich Text Editor system design article","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/rich-text-editor"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Request payload contents","link":{"type":"url","url":"#request-payload-contents"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When a participant makes an update, or receives an update from others, what should the request payload contain?"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The two common approaches are:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Payload contains the entire current document"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Sending and receiving the entire current document state."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Payload contains only changes (the delta)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Sending and receiving just the updates made."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Transmitting entire document","link":{"type":"url","url":"#transmitting-entire-document"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Transmitting the entire document per update has the following properties:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Clear document state"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Recipients know the full state of the document the sender was viewing when it was updated."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sender intentions aren't clear"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Just by receiving the updated document, recipients do not know what changes were made unless they compare with their own document revision or the sender's previous document revision, both of which are troublesome to compute."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Not scalable"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": As the document grows, the amount of data to transmit will increase proportionately. For large documents, each request will take longer to transmit."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Transmitting only changes","link":{"type":"url","url":"#transmitting-only-changes"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Transmitting just the changes has the following properties:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Small request payload size"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Since only the changes are sent, the request payload size is generally small, typically containing only the command (e.g. insertion, delete, formatting) and associated metadata (e.g. characters and position to insert/delete)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Efficient request payload size"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The document's length has no impact on the request payload size since the changes are not reliant on the current document state."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"No document state information"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": It's not clear which version of the document the changes were made against. This can be mitigated by including a document revision number in the request payload – more on that later."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What should requests contain?","link":{"type":"url","url":"#what-should-requests-contain"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A short response time (under 500ms) is required for a real-time WYSIWIS (What-You-See-Is-What-I-See) experience. Meaning when a user makes an edit, all other participants should see that change reflected on their screens within 500ms. If participants see slightly different or outdated versions of the document, the cohesiveness of the session is ruined."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Updates made by participants should be communicated in a lightweight fashion, thus the request payload for updates should ideally "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"contain just the changes"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Network architecture / communication model","link":{"type":"url","url":"#network-architecture--communication-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are two common models for network communication between groupware system participants:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client-server model"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Central server; all participants communicate only with the server"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Peer-to-peer"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": No central server; all participants act as both a server and client"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client-server model","link":{"type":"url","url":"#client-server-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In a client-server network model, participants (clients) request resources from a central server and send payloads to it. The server processes these requests and provides the appropriate responses."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/collaborative-editor-google-docs/client-server-architecture.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Advantages"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":":"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Centralized source of truth"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": All updates have to first go through the server. The server determines the latest document revision and holds the source of truth."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Robustness"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": When new participants join or one of the existing clients crash (due to bugs, network flakiness, etc), the latest document can be fetched from the server."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Disadvantages"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":":"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Single point of failure"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The central server is a critical component; if it fails, the entire network can be disrupted."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cost"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Higher infrastructure and maintenance costs due to the need for powerful central servers."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Scalability"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Can become a bottleneck if the number of clients grows rapidly without proper scaling."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Peer-to-peer (P2P) model","link":{"type":"url","url":"#peer-to-peer-p2p-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In a P2P network model, each participant acts as both a client and a server. Peers communicate directly with each other without the need for a central server."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/collaborative-editor-google-docs/peer-to-peer-architecture.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Advantages"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":":"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lower latency"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Each participant communicates with each other directly without the need for a middleman, resulting in lower latency in general."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cost effective"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Without a central server, infrastructure costs are lower."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Load distribution"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": When more participants join, the extra network load is distributed among all participants, preventing bottlenecks."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Disadvantages"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":":"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Synchronization problems"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Without a central authority, it is hard for participants to determine if their version of the document is the latest version and what updates are missing. Each participant needs to keep track of the peers' document states and ensure they are up-to-date."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Complicated consensus"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": When new participants join or one of the existing clients crash (due to bugs, network flakiness, etc), the new member has to figure out how to fetch the latest document revision among all the peers."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server is still needed"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Since the document needs to be persisted to a database, a server is needed anyway."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Security"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": If a participant goes rogue, all connected participants will be affected."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Which model to use?","link":{"type":"url","url":"#which-model-to-use"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Although the client-server model seemingly has fewer advantages, the source of truth being on the server is an important functional property that makes or breaks the entire system:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Database persistence"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The document state has to be persisted in a database. Without a central server to save the document frequently, updates could be lost if clients disconnect before saving the document to the database."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Source of truth"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Since new participants are able to join at any time, having the source of truth on the server simplifies the logic of reliably obtaining the latest document – new participants can fetch the latest document from a single consistent location, the server."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimize for reliability and performance"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Reliability and performance are the most important factors for a seamless collaboration experience and making sure all participants are updated. In practice, most sessions will not see a large number of participants (> 20) at any given time; there will only be a few participants at most. We should optimize for reliability and performance rather than server costs."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"With these reasons in mind, a client-server model is preferred. P2P models are more suitable for applications like video chat, where request losses can be tolerated, and not all the data has to be persisted."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Concurrency control model","link":{"type":"url","url":"#concurrency-control-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are two kinds of operations that need to be made when discussing collaborative editors:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Local updates"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Updates made to the document by the user viewing it."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Merge updates from peers"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Updates made to the document by peers."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"All these updates have to be merged into the current document. Conflicts might arise if two users are editing the same section of the document (e.g. somebody deletes a sentence when another person is adding a word to the sentence)."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Concurrency control is the activity of coordinating interfering actions that operate in parallel to maintain consistency between participants and resolving conflicts that arise between participants."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"They can be broadly classified into optimistic and pessimistic types:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pessimistic"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Pessimistic methods guarantee that no conflicts occur. Their main objective is inconsistency avoidance. They require communication with other sites or a central coordinator before any data changes are made. This communication can be explicit (e.g. floor control policy), or implicit, where the user's program handles it in the background (e.g. locking). In general, pessimistic methods do not require conflict resolutions but have higher network latency and longer response times."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimistic"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Optimistic methods do not bother with avoiding conflicting updates. They require no prior communication before making local changes and are well-suited for high-latency communications channels since the results of a user's actions can be displayed without waiting for a communications round-trip. The user applies the changes immediately and updates the server which then notifies the peers. If multiple participants make simultaneous changes, a conflict resolution algorithm creates compensating changes to ensure everyone reaches the same final state. Optimistic methods have zero/near-zero local response times but may require conflict resolutions."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Text editing is unlike traditional form submission, where users can tolerate updates taking up to a few seconds to complete. Textual updates made by the user should be reflected instantly without any latency. To support zero latency local updates, clients should maintain a replica of the document state locally and user updates are made against the replica so that they can be reflected on their UI instantly."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Let's have a look at the various concurrency control mechanisms, their properties, and their pros and cons."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Last write wins model","link":{"type":"url","url":"#last-write-wins-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For traditional web applications like admin dashboards. If two users modify the same entity simultaneously (e.g., changing a person's name), a race condition occurs. The final name saved in the database will be the one submitted by the request that arrives last."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In distributed computing, this behavior is called \"last write wins\". Obviously, \"last write wins\" will not work for a collaborative editor, not at the document level at least. It is hardly considered collaborative at all!"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Floor control model","link":{"type":"url","url":"#floor-control-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Floor control\" is a protocol which determines which user has control (has the floor) and how to take turns when multiple people access a resource, a document in this case."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Token-based"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A token circulates among participants, and only the participant holding the token can make changes. Participants can request for a token and the predefined policy (e.g. first-come-first-served, or free-for-all) determines if the request is granted."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Chair-controlled"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A designated chairperson or moderator grants and revokes participant access to resources."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Participants without control can still see the updates being made in a live fashion."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Floor control helps to prevent conflicts and ensure orderly interactions. Evidently, this method does not fulfill the requirements because only one participant can make edits at any one time; peers have to wait for their turn to edit. One way around this is to allow participants to take over control of the token anytime they want, but it's not a great user experience for participants who are still typing to have control taken away from them suddenly."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Locks model","link":{"type":"url","url":"#locks-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Locking is the concept of preventing unwanted access to data (read and/or write). In the context of collaborative editing, when an editor starts editing a document, the document (or parts of it) can be locked to prevent unwanted modifications from peers."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are a few issues to discuss related to locking:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Locking granularity"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Locking can be done on the document level, paragraph level, sentence level, word level, etc. Document-level locking is essentially the \"floor control\" mechanism. Finegrain granularity is better, but what should happen in sentence-level locking when the paragraph containing the sentence is being deleted?"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lock requests"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Locks can be requested in both optimistic and pessimistic fashions."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pessimistic locking"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Clients make a network request to obtain the lock. Clients will only start allowing modifications after the lock has been granted. There is network latency involved in acquiring the lock, so users will experience a delay before being able to do any actions, which can be annoying."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimistic locking"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Clients allow modifications and requests for the lock at the same time. If the request for the lock was rejected (possibly because another person also requested for the lock at the same time), the client will roll back the updates prior to requesting for the lock."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lock releases"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": After a lock is acquired, when should it be released? Should the lock be requested when the cursor is moved or when the key is struck? For example, if locks are released when the cursor is moved then a user could move to one place to copy some text only to be locked out from pasting it into their previous location. On the other hand, if locks are retained too generously, users might still be granted the lock even when they no longer need it, e.g. a lock is redundant when the user leaves the document open but goes away from the keyboard. Determining the idle threshold is tricky. Similar to floor control, allowing users to take over control of the lock anytime they want is one way of mitigating lock releasing issues."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Locking is an improvement over floor control (which is also technically a type of locking) and is viable at the right granularity with optimistic locking and appropriate lock releasing strategies due to the ease of implementation. In fact, collaborative editing apps like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Quip","link":{"type":"url","url":"https://quip.com/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" used a lock-based concurrency model in earlier versions of their product. Locking is actually a viable approach for real-time collaboration if the likelihood for editing the same section is low."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Transaction-based model","link":{"type":"url","url":"#transaction-based-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A transaction-based approach is an optimistic method, where users make changes locally and changes are validated at the end of the transaction, similar to distributed version control systems like Git and Mercurial. Version control systems manage changes to documents or resources by maintaining different versions and allowing users to merge changes."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Each user has a copy of the document within their computer and can make their changes locally, without any locks or other restrictions. Changes are not pushed immediately. When the user is done updating, the changes are committed and pushed up to the server. If there are any conflicts, the transactions are rolled back and the user has to resolve them in order to update the server."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This approach has the benefit of zero latency local updates and all participants can update their documents simultaneously without any locking restrictions. However, in this approach, updates aren't real-time – users are required to explicitly push their updates and explicitly pull updates from others. Additionally, it requires users to resolve conflicts themselves, which is annoying and unreasonable to expect of common users."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Version-detection model","link":{"type":"url","url":"#version-detection-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In a version-detection model, the document state is replicated in each user's machine and participants can make changes locally, which are then propagated to peers as soon as possible. Under good network connections, users should see updates from peers in under a second."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Each update request contains the new data and the document revision the change was acted on. When the server receives the update request, it first checks if the revision in the request is the same as the current revision. If the revisions match, the server updates the document, saves it as a new revision, and broadcasts this information to all peers so that everyone is on the latest revision. If they are different, then there's a \"version mismatch\" which can be resolved in one of the following ways:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reject the request"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This avoids having to do any conflict resolution but isn't ideal as the frequency of it happening can be quite often when there are multiple participants simultaneously updating the same part of the document."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Compensate changes"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Automatically compensate the changes to rectify the version mismatch and bring the system to a consistent state. In most cases, compensating is straightforward if changes were made to different parts of the document (probably no need to compensate at all!). If the changes do conflict, we can use conflict resolution methods like Operational Transformations (OTs). On the other hand, if Conflict-free Replicated Data Types (CRDTs) are used, there is no need for compensation."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The version-detection model with compensation enjoys the benefits of zero latency local updates, all participants being able to update their documents simultaneously in real-time without any locking restrictions, and will eventually converge into the same version of the document if there's a robust conflict detection and resolution approach."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Version detection trumps the transaction-based model and fulfills all the real-time collaboration requirements. The only issue being – how exactly are conflicts resolved? We'll explore them in more detail below."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Which concurrency model to use?","link":{"type":"url","url":"#which-concurrency-model-to-use"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Only the "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"version-detection consistency model"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is able to meet all the real-time collaborative editing requirements because it has the following properties:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Replicated"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The document is replicated in the machines of all participants. This is necessary for the model to make optimistic updates."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimistic and non-blocking"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Updates are made locally, without worrying about conflicts. Optimistic behavior is necessary for zero-latency responsiveness during local updates – the speed or reliability of your network connection will not influence how fast users can type."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"No locking"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The entire document is available to every participant all the time."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Automatic conflict resolution"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Any detected conflicts are resolved automatically on the server. Possible approaches include creating compensating changes and informing the client (OT), or using data structures that resolve conflicts automatically (CRDTs)."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"From each participant's perspective, it will feel as if they are editing an offline Word document – there is no latency involved when editing."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Conflict resolution approaches","link":{"type":"url","url":"#conflict-resolution-approaches"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Conflicts can arise when two or more participants are editing the same part of the document. Let's run through an example."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Assume we have a document containing a single word \"ABCDE\", and Alice and Bob edit it at the same time:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice deletes the fourth character \"D\". Her computer sends a request "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DEL @3"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to indicate deletion of the fourth character, which is at index 3 (zero-based indexing)."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bob deletes the second character \"B\". His computer sends a request "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DEL @1"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to indicate deletion of the second character, which is at index 1 (zero-based indexing)."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The server will process both requests. For now, the server simply executes the commands and relays them without any special handling). The intended end result after both deletions is \"ACE\"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since network latency is unpredictable, one of two scenarios can happen:"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/collaborative-editor-google-docs/alice-bob-without-ot.png"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice first"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The server receives Alice's request before Bob's, resulting in the server deleting the fourth character then the second character \"ABCDE\" -> \"ABCE\" -> \"ACE\". In this scenario, the document on the server correctly deletes Alice's and Bob's intended character. The server ends up with \"ACE\"."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bob first"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The server receives Bob's request before Alice's, resulting in the server deleting the second character then the fourth character: \"ABCDE\" -> \"ACDE\" -> \"ACD\". Notice that when the server processes Alice's request, the fourth character of the document is now \"E\", but Alice wanted to delete \"D\". The server ends up with \"ACD\"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In this naive approach, depending on whose request the server receives first, the server ends up with different document states."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In fact, Bob will always end up with \"ACD\" regardless of whose request reaches the server first. Remember that updates are first made locally then sent to the server to be broadcasted to others. The problem is that offsets depend on the state of the document at the time an edit was made. Request payloads include the offsets but not the context they depend on, which results in the divergence."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This is just one of the possible scenarios that result in conflicts. There are other possible combinations like insertion + insertion, deletion + insertion, deletion + deletion, etc."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Conflict resolution properties","link":{"type":"url","url":"#conflict-resolution-properties"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Therefore we need a conflict resolution approach that adheres to these properties as much as possible:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Convergence"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": All replicas will eventually reach the same state, provided that they have received and applied the same set of operations (the quiescence state)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Causality preservation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Ensures that the order of operations respects the causal relationships between them. For example, if one operation logically follows another, the system must apply these operations in that order to maintain consistency (e.g. deletion of a character after its insertion)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Intention preservation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Ensure that the original intent of an operation is maintained after concurrent operations are merged. This means that the result of merging concurrent operations should align with what users expect their operations to achieve, even in the presence of conflicts. E.g. Alice makes the entire sentence bold and Bob adds a word to the sentence at the same time, the end result should be that the sentence including Bob's word is bold."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Two common conflict resolution approaches are used:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Operational Transformations (OT)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": OT accounts for context at the point of editing and transforms the operations accordingly (e.g. by modifying the offsets of insertions/deletions)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Conflict-free Replicated Data Types (CRDTs)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": CRDTs enforce the use of data structures where updates are commutative and associative such that the order of operations does not matter."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Explaining each conflict resolution approach in detail is beyond the scope of this article (there isn't enough time during interviews anyway). However, you should be able to explain the general principles using an example. We will explain how each approach works, provide examples and links to resources for your further reading."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Operational Transformations (OT)","link":{"type":"url","url":"#operational-transformations-ot"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"OT was originally developed for collaborative editing of text documents, allowing multiple users to edit simultaneously without conflicts. It maintains the consistency of document states across different clients by transforming operations based on the context of other concurrent operations."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"OT systems typically use a replicated document storage model, where each client maintains a local copy of the document. Users operate on their local copies, and changes are propagated to other clients. When a client receives changes from another client, it applies transformation functions to ensure that the local document remains consistent with the updates."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The key components of OT include:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Operations"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": These are the basic actions users perform, such as inserting, deleting, or modifying text. Each operation is associated with a position in the document."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Transformation functions"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": These functions determine how to adjust operations when they conflict. For example, if two users insert text at the same position, the transformation function will resolve the conflict to maintain a consistent document state."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Control algorithms"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": These algorithms manage the sequence and context of transformations. They decide which operations should be transformed against others based on their causal relationships, ensuring that the order of operations respects the intent of each user."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Let's revisit the Alice and Bob example and see how applying OT can solve the issue."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/collaborative-editor-google-docs/alice-bob-with-ot.png"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice before Bob"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The server receives Alice's request before Bob's, resulting in the server deleting the fourth character then the second character \"ABCDE\" -> \"ABCE\" -> \"ACE\". In this scenario, the document on the server correctly deletes Alice's and Bob's intended characters. However, Bob's computer realizes that Alice's change was made before Bob's deletion, hence it transformed Alice's change from "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DEL @3"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" -> "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DEL @2"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" since Bob deleted an earlier character. Bob ends up with \"ACE\"."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bob before Alice"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The server receives Bob's request before Alice's, resulting in the server deleting the second character: \"ABCDE\" -> \"ACDE\". When the server receives Alice's request, it realizes that Alice's change was made before Bob's deletion, hence it transforms Alice's change from "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DEL @3"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" -> "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DEL @2"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to account for Bob's deletion of an earlier character. The server correctly deletes \"D\" (the third character) and passes this transformed operation to Bob. Both the server and Bob end up with \"ACE\"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Both servers and clients can perform OT and must handle all the various ways that insertion, deletion, and formatting changes can be paired and transformed against each other. The example above showed how a deletion is transformed against a deletion. Some other examples of transformations:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Formatting is expanded when transformed against insertions: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"FORMAT BOLD @10-20"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" transformed against "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"INS \"ABC\" @15"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" results in "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"FORMAT BOLD @10-23"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Not all changes will conflict and in those cases do not require transformation. E.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"FORMAT BOLD @10-20"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"FORMAT ITALIC @15-25"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" do not conflict as text can be both bold and italic at the same time."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How does the server know whether Alice's and Bob's requests were made with or without accounting for the other party's changes and whether it has to do any transformation? Each time an update is made on the server and the document is modified, the document is saved as a new revision (e.g. using timestamps or "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"monotonically","link":{"type":"url","url":"https://en.wikipedia.org/wiki/Monotonic_function"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" increasing integers). Timestamps are not a great choice because machine time can be manipulated which results in an incorrect order when sorting by time, a monotonically increasing positive integer is preferred."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requests and responses can include the document revision number so that both servers and clients know the document version the other party was seeing when the request was made and can correctly determine if operations require transformation."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Analysis of OT"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Let's take a look at how OT fulfills the conflict resolution properties:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Convergence"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": OT uses transformation functions to modify operations so that they can be applied consistently across all replicas, even if they arrive in different orders. The core idea is that if two operations conflict, the transformation functions adjust one or both operations to ensure they can be applied in any order but still lead to the same final state."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Causality preservation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": OT systems often use causal history tracking to ensure that operations are applied in an order that respects their causal dependencies. This is usually done by tagging operations with metadata, such as timestamps or revision numbers, which indicate their causal relationships."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Intention preservation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": OT payloads commonly include the command intention and context (document revision number). The transformation functions consider the context in which an operation was originally applied. The command along with the contextual awareness helps in preserving the original intention even when the document has changed due to other concurrent operations."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"OT works well for text-based documents but can be less effective for other types of data structures, such as hierarchical or non-linear data. Implementing OT for these types of data requires additional effort and customizations."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are many implementations of OT algorithms and various consistency models, which are beyond the scope of this article. If you're interested, check out the following links:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What’s different about the new Google Docs: Conflict resolution","link":{"type":"url","url":"https://drive.googleblog.com/2010/09/whats-different-about-new-google-docs_22.html"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Operational Transformations as an algorithm for automatic conflict resolution","link":{"type":"url","url":"https://medium.com/coinmonks/operational-transformations-as-an-algorithm-for-automatic-conflict-resolution-3bf8920ea447"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Visualization of OT with a central server","link":{"type":"url","url":"https://operational-transformation.github.io/"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Conflict-free Replicated Data Types (CRDTs)","link":{"type":"url","url":"#conflict-free-replicated-data-types-crdts"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If you were wondering – why use offset indices for the updates when they are highly coupled to the current document state and go through the hassle of resolving conflicts with complex algorithms like OT? Why not use a different payload or data structure that provides more information regarding the update and makes merging updates easier? That is exactly Conflict-free Replicated Data Types (CRDTs) aims to do."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"CRDTs are advanced data structures designed for distributed systems, enabling multiple users or applications to update shared data concurrently without coordination which eventually converge to the same state (strong eventual consistency) when all updates have been received and applied. Instead of resolving conflicts using OT, CRDTs are built so that the operations performed on the data are inherently conflict-free or can be automatically resolved in a consistent manner."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"CRDTs have the following properties:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Concurrent updates"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": CRDTs enable independent updates across multiple replicas of data. Each replica can be modified without needing to coordinate with others, making them ideal for environments where network connectivity may be intermittent. Updates can be propagated using the gossip protocol without the need for a central authority."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Monotonic increasing updates"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Updates to a CRDT must be monotonic, ensuring that new values are always greater than or distinct from previous values. This allows for a clear progression of state changes."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Commutative and associative operations"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The operations in a CRDT must be commutative (Order does not matter -> "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"A + B + C === C + B + A"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"), associative (Grouping does not matter -> "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"(A + B) + C === A + (B + C)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"). This ensures that all replicas, even if they receive operations in different orders or merge states at different times, will end up in the same state."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Automatic conflict resolution"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": CRDTs incorporate predefined algorithms (e.g. last writer wins) that automatically resolve inconsistencies that may arise from concurrent updates. This means that even if different replicas make conflicting changes, the CRDT can merge these changes without manual user intervention."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Eventual consistency"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Although replicas may have different states at any point in time, CRDTs guarantee that all replicas will eventually converge to the same final state once all updates have been propagated, regardless of the order in which these updates are received. This is often referred to as \"strong eventual consistency\", which ensures that no inconsistent states are held."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The CRDT model is somewhat similar to Git – every developer in the organization possesses a copy of the repository and is allowed to make changes locally. At the end of the day, the developers can merge changes with every other developer however they like: pair-wise, round-robin, or through a central repository. Once all the merges are complete, every developer will have the same state. However unlike Git, a CRDT prescribes a way to merge conflicts automatically and can merge out-of-order changes."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Example of CRDT – Grow-only set"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": An example of a CRDT is a grow-only set. A grow-only set is an unordered set that only allows addition of unique elements. It is a CRDT because:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The set can be replicated."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Each replica can add any element it likes and the addition is a monotonically increasing update."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Each replica can be merged back together in any order."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Once all merges are complete, all replicas will have the same contents (the union of all individual sets)."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Representing text in CRDTs"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Collaborative text documents can be represented using sequence CRDTs like lists (e.g. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Linear Sequences and Replicated Growable Array","link":{"type":"url","url":"https://www.bartoszsypytkowski.com/operation-based-crdts-arrays-1/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":") and trees. Unsurprisingly, text CRDTs are more complicated to implement than a grow-only set. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Cola","link":{"type":"url","url":"https://nomad.foo/blog/cola"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is a text CRDT written in Rust, but the data structure can be implemented in any language."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Text editing also involves deleting. How can we represent deletion in CRDTs? The trick is to track deletions as well by using two separate grow-only data structures, one to track insertion and another to track deletion (known as tombstone markers). The resulting value is the items in the insertion set minus the items in the deletion set. Complex CRDTs are often combined from smaller CRDTs which helps tremendously in preserving the CRDT properties."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Analysis of CRDTs"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Let's take a look at how CRDTs fulfill the conflict resolution properties:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Convergence"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": CRDT operations are designed to be commutative and associative, meaning the order and grouping in which operations are applied does not affect the final state. This is a key reason why all replicas converge to the same state."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Causality preservation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Operations are applied to other replicas in a way that respects causality. For example, operations can be propagated in any order, but an operation might be buffered until all preceding causally related operations have been applied. E.g. a deletion only takes effect until the insertion has taken place. In a Last-Writer-Wins Register (LWW-Register), updates are tagged with timestamps, ensuring that the most recent update (according to causality) prevails."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Intention preservation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": CRDTs incorporate predefined conflict resolution strategies that aim to preserve user intent. These strategies are typically application-specific and ensure that the merged state reflects the combined intentions of all concurrent operations. The specific semantics of CRDT operations are crafted to ensure that, when two operations conflict, the resolution preserves the most meaningful aspects of each operation. However, there's some amount of subjectivity and is highly implementation and use-case dependent."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Drawbacks of CRDTs"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": While CRDTs are more modern compared to OT, it does come with some drawbacks:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Metadata overhead"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": CRDTs often require additional metadata to track operations, revisions, or unique identifiers. This metadata can grow over time, leading to increased storage requirements, especially in large-scale systems or with complex data types."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Ever-increasing size"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": CRDTs have a monotonically increasing state, often having to track removals that do not appear in the final visual result. This means the data will only grow over time. Garbage collection or cleanup mechanisms can be used but they can be technically challenging to implement without causing inconsistencies in replicas."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Conflict resolution"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": While CRDTs are designed to resolve conflicts by merging concurrent updates in a predefined way, this automatic conflict resolution might not always align with the desired application semantics, leading to unexpected results."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"CRDTs entirely bypass the need for causality preservation as updates can be merged in any order and still converge into the same ending state. Whether CRDTs can preserve intention depends on the chosen conflict resolution strategy and implementation."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Which conflict resolution approach to use?","link":{"type":"url","url":"#which-conflict-resolution-approach-to-use"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Both OT and CRDTs are designed to manage concurrent updates to shared data in a way that maintains consistency across all replicas, but they do so using different methodologies and with varying trade-offs."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Convergence"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": OT can guarantee convergence but requires more careful handling of operation order and context. It often requires a central server or a more tightly coordinated communication protocol to ensure consistency. CRDTs are designed to guarantee eventual consistency between replicas and will converge to the same state as long as they receive all updates. CRDTs is superior here because it has stronger convergence guarantees."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Technical complexity"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Implementing CRDTs for complex or hierarchical data structures can be challenging, requiring careful design to ensure that the operations maintain the desired properties. Implementing OT is also complex, especially when designing the transformation functions that must handle all possible conflicts and concurrent operations. Although CRDTs' consistency model is easier to understand, it's harder to understand and implement CRDTs for text structures. In the context of text editing, OT takes the lead."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Ecosystem"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": OT is a mature technology and has been implemented in several well-known collaborative editing systems with many mature libraries and tools available – Google Docs itself uses OT. CRDTs is the new kid on the block, but has been well-studied over the years and many libraries implementing CRDTs have been created. Figma, a collaborative design editing software uses CRDTs. There is no clear winner in terms of ecosystem as both approaches have been well-studied (and criticized)."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Overall, there's no clearly superior choice. Both CRDTs and OT can be used to implement collaborative editors. CRDTs are general purpose while OT has its roots in document editing. While CRDT is newer and more trendy, OT is mature and excels in real-time collaborative editing applications where low-latency, immediate feedback, and fine-grained control over user intentions are critical."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The rest of the article assumes usage of OT as the conflict resolution approach. The primary reason is that Google Docs itself is implemented using OT, so there are also more resources in terms of implementing collaborative text editors using OT as opposed to CRDTs. It is also easier to explain how OT works as opposed to text CRDTs, which has very complex structure."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Collaboration protocol","link":{"type":"url","url":"#collaboration-protocol"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We have discussed the conflict resolution approaches, but it is only one part of the story. There are other unanswered questions related to collaborative editing using OT:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Request scheduling"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": When are update requests sent? On every keystroke, after the user has stopped typing, or something else? If a user makes multiple back-to-back updates, should they all be sent to the server as they are made or is there a better way to schedule them?"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Multiple participants"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The OT examples above demonstrate how transformations work for two participants. What happens when there are more than two participants in the session and operations have to be transformed against multiple peers?"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Participants joining"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": How do users who join an editing session mid-way start updating their replica and receive updates from others?"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A collaboration protocol can be designed to answer these questions. It might be helpful to try out this "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"interactive visualization of OT with a central server","link":{"type":"url","url":"https://operational-transformation.github.io/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" before reading on."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Central server","link":{"type":"url","url":"#central-server"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"While OT does not require a central server at its core, having a central server simplifies certain things."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A central server architecture makes it simple for clients to stay in-sync with the server. The role of the server is to receive updates and serve as the authority of the document state, transforming operations when clients send requests that conflict with the latest document. The server can also reject operations if the payload is invalid or if the operation was on a document revision that is too old, the operation is too hard to transform, or there are too many operations to transform."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When the server receives an update request, it will broadcast the update to connected clients. Clients do not need to care about how many other connected clients there are. It relies on the server to inform itself of the changes to make. From a client's perspective, having N peer clients (where N is the number of peers) take turns every second to make updates in a round robin fashion is equivalent to a single peer client making updates every second. To a client, having one peer is the same as having ten peers. This allows us to achieve N-way synchronization by running N independent two-party synchronization between each client-server pair. Clients only have to focus on synchronization with the server, and servers can treat all clients equally; there are no special clients to consider."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Participants who join mid-way will be served the version of the document at request time. From that point on, they are a connected client and can send and receive updates like any other participant, as long as the updates are received in order after downloading the initial document."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Store document as a revision log","link":{"type":"url","url":"#store-document-as-a-revision-log"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The document can be stored as an append-only log of operations/changes similar to the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Event Sourcing pattern","link":{"type":"url","url":"https://learn.microsoft.com/en-us/azure/architecture/patterns/event-sourcing"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". Any revision of the document can be reconstructed by replaying the operations from the start up till that point. Hence the latest revision of the document can be obtained by replaying all the operations since the start. This method of storing data also allows clients to view the document's version history."}}]}},{"object":"block","type":"table","table":{"table_width":5,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rev no."}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Operations"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Timestamp"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Document state (not stored)"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"0"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"N/A"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"N/A"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024-08-03 10:00"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<EMPTY>"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"1"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Charlie"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"INS \"Hello\" @0"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024-08-03 10:05"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Hello\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"INS \" world\" @5"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024-08-03 10:10"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Hello world\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"3"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bob"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"INS \"!\" @11"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024-08-03 10:15"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Hello world!\""}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note that the document state is not stored in each log entry as it can be derived from the preceding operations."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Storing as a log is necessary since some clients can be extremely outdated and need to catch up with the current document. Imagine the scenario where a user disconnected from a collaboration session and left the tab open. When they reconnect the next day and others have made updates since then, upon reconnecting, the client sends their current outdated document revision number which allows the server to determine the granular changes since that document revision and respond with a list of operations to be performed on the client, which might also need transformation."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Clients that join the editing session of a non-empty document do not need to fetch the entire log from the start; the server responds with the current state of the document. Subsequent document revisions can be computed via applying new operations (both local and from peers) to the initial session document state."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It's not demonstrated above, but each log entry can contain multiple operations as well."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When to send update requests","link":{"type":"url","url":"#when-to-send-update-requests"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When should update requests be sent? Should update requests be sent on every keystroke, after the user has stopped typing, or something else?"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keystroke"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Send a request per keystroke. Not great because it can be taxing on the server and many potentially redundant operation logs created."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Debouncing"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Send a request after the user has stopped typing for a short duration (e.g. 300ms). Might not be ideal for users who type a lot without stopping as they can lose data if their browser crashes before the updates are sent out."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Throttling"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Send a request every fixed interval (e.g. 300ms) during continuous typing. Seems viable but it's tricky to determine the throttle duration value."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"None of the above strategies are truly viable because they all allow a user to send requests in parallel, meaning multiple requests are in-flight at the same time. This is a problem because the server is not guaranteed to receive the requests in the order they were sent, which can lead to race conditions and impossible operations."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are ways to resolve out-of-order requests, but they aren't trivial. The client can include a monotonically increasing integer for every request in the session but the server has to keep track of the last request sent so far and if it receives an out-of-order request, defer the future request, then wait for the missing request (buffering future operations)."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"An elegant way taken by Google Docs is to ensure that each user only has a maximum of one update request in-flight (aka pending) by using a local updates buffer (a queue). The local updates buffer is cleared and operations in the buffer are sent to the server, under one of the following scenarios:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If there are no pending requests, after a short idle duration (~200ms)"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If there is a pending request, when the pending request has returned"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When a user starts typing:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User operations are reflected locally on the client computer and added into the local updates buffer"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"After a short duration, a request is made which includes the operations in the local updates buffer"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The local updates buffer is cleared upon sending of the request and any new local updates made while there's a pending request are added to the local updates buffer"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If the local updates buffer is not empty, it only sends the next request after it receives a response for the current request from the server, even if the idle duration has passed"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This repeats until the local updates buffer is empty (when the user has stopped typing) and there are no more operations to send to the server"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fast vs slow connections"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Since there can only be one pending update request, the frequency of requests is highly dependent on the client's connection speed."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/collaborative-editor-google-docs/fast-slow-connection-requests.png"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fast connection"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Clients with faster network connection speed will send requests and receive responses faster, resulting in more frequent requests and each request containing a smaller payload. The local updates buffer will be cleared more often."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Slow connection"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Clients with a slower network connection speed will see fewer requests and each request will contain a larger payload. The local updates buffer will be cleared less often."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"By using a local updates buffer to hold local operations and having only one pending request per client, clients ensure that operations are sent in order and the server can immediately process a client request upon receiving it, knowing that every request from a client is the latest one."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Operation granularity","link":{"type":"url","url":"#operation-granularity"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A suitable operation granularity is one which doesn't result in too many operations yet also allows differentiation between the intentions. Consider the following scenarios:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If a user is typing continuously, it'd be more efficient to make a single insertion operation that contains multiple characters rather than one insertion operation per character."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If a user holds backspace and deletes multiple characters, it'd be more efficient to make a single deletion operation that contains the deleted characters rather than one deletion operation per character."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If a user types some characters, realizes there's a typo, deletes the erroneous characters, then types again, these actions constitute \"continuous typing\" and could be coalesced into a single insertion operation. In this case, when the operations are sent to the server, the server does not see any deletions at all."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The following guidelines are chosen:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Coalescing of continuous ranges"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Operations on continuous ranges can be combined/coalesced into a single operation of the same kind."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"One operation per intention"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Each intention (Insertion, Deletion, Formatting) will be a different kind of operation unless they are part of continuous typing."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Coalescing of continuous typing actions"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Continuous typing events include forward typing, deleting backwards, and deleting forwards."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update request payload","link":{"type":"url","url":"#update-request-payload"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It wasn't explicitly mentioned, but each update payload can contain multiple operations. On slower network connections where requests round-trips take longer, there is a larger window for users to make local updates and sometimes that can include different kinds of operations, not just insertions."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In earlier network diagrams, the update requests only displayed single operations, but requests on Google Docs actually include an array of operations, which is all the operations in the updates buffer. The server iterates through the array of operations in order and transforms them where necessary."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"By allowing update requests to contain an array of operations, the buffer is cleared more frequently and the likelihood of losing unsent changes (possibly due to crashes or closing of tabs) is lower."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Putting them together","link":{"type":"url","url":"#putting-them-together"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We've explained above how a client-server architecture can scale well for a large number of participants. Therefore we can focus on the communication between clients and servers and what information each tracks."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Each client tracks these information:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Latest document revision"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The identifier of the most recent revision sent from the server to the client. Google Docs uses a monotonically increasing integer as the document revision id/number. This value is included in the request payload and response of each update request."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Local updates buffer"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Changes (operations) that have been made locally and not yet sent to the server. This is the updates buffer explained earlier."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sent updates buffer"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Changes (operations) that have been made locally, sent to the server, but not yet acknowledged by the server. Tracking sent operations is necessary because requests can fail and the client should retry the request if a request fails."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Updates log"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Committed changes (operations) for the document since the initialized document revision. These changes could be the user's updates that have been acknowledged, or updates by peers that have been pushed to the client by the server. The operations can be already transformed on the server, or transformed on the client depending on the order of updates."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Initial document state"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The state of the document when the client first joined the editing session."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Document state"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The current state of the document displayed on the client. This can be computed from the initial document state, the received updates, updates buffer, and pending updates."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note that the operations in both the local updates buffer and pending updates buffer can be transformed depending on the contents of the received updates from the server. It is the client's responsibility to:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Track the statuses of the local updates – send them to the server and move them to the sent updates buffer when appropriate."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"After the sent updates have been acknowledged, move the sent updates to the updates log."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Receive updates from the server and transform any local updates where relevant."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Combine initial document state with updates log to compute the latest document state and display it."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The server contains the following information:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pending updates queue"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A list of all changes (operations) received from clients that have not been processed."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Revision log"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A list of processed changes that gives the complete history of the document."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Document state"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The current state of the document as of the last processed change. This value can be derived by replaying all the changes since the start but is computed and cached so that it can be instantly sent to new clients that join the session. It is recomputed whenever a new change is processed."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The server's responsibilities are to:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Send clients the latest state of the document when they join the editing session."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Transform updates by clients if they were originally made on outdated revisions."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Broadcast updates to the other clients."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Source: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"What’s different about the new Google Docs: Making collaboration fast","link":{"type":"url","url":"https://drive.googleblog.com/2010/09/whats-different-about-new-google-docs.html"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Let's run through a practical example of how the server works with clients to enable real-time collaborative editing using operational transformations."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/collaborative-editor-google-docs/collaboration-part-1.png"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice, Bob, and the server start with an empty document"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice types \"Hello\" and the insertion operation is added into her \"Local updates\". Alice sees the \"Hello\" instantly within her document replica"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice's insertion of \"Hello\" is sent to the server and moved from \"Local updates\" to \"Sent updates\""}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The server receives the request and adds Alice's insertion operation into its \"Pending updates\" queue"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"At the same time, Alice types the characters \" world\". This insertion is added to \"Local updates\" but will not be sent to the server until the \"Sent updates\" is empty"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server processes Alice's first insertion and updates its document state. It then sends an acknowledgement to Alice"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice removes that operation from \"Sent updates\" and updates her latest revision number to 1"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server broadcasts Alice's insertion to Bob and Bob applies the operation to his document replica and updates his latest revision number to 1"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/collaborative-editor-google-docs/collaboration-part-2.png"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice's second insertion of \" world\" can now be processed. The operation is sent to the server and moved from \"Local updates\" to \"Sent updates\""}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The server receives Alice's second request and adds her operation into its \"Pending updates\" queue"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"At the same time, Bob inserts a \"!\" character at the end of \"Hello\""}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bob's insertion of \"!\" is sent to the server and added to the server's \"Pending updates\" queue. Bob moves the operation from \"Local updates\" to \"Sent updates\""}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server processes Alice's second insertion first and sends an acknowledgement to Alice"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice removes that operation from \"Sent updates\" and updates her latest revision number to 2"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server broadcasts Alice's insertion to Bob. However, Bob has uncommitted updates, so he needs to transform them against Alice's updates. Bob's insertion of \"!\" is transformed to the 11th position to make room for Alice's \" world\". Bob updates his latest revision number to 2"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server processes Bob's insertion next. It sees that Bob's operation was made against revision 1, which does not account for Alice's second insertion. Hence the server transforms Bob's insertion of \"!\" to the 11th position to make room for Alice's \" world\". This shift is identical to the transformation Bob's client made when it first received Alice's insertion of \" world\""}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server processes Bob's transformed insertion and sends an acknowledgement to Bob. Bob removes that operation from \"Sent updates\" and updates his latest revision number to 3"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server broadcasts Bob's insertion to Alice. It has already been transformed, so Alice can simply apply the operation and update her latest revision number to 3"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice, Bob, and the server all end up with the same version of the document."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Update logs of Alice and Bob aren't shown in the diagrams, but they mirror the server's revision log."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Transport mechanisms","link":{"type":"url","url":"#transport-mechanisms"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The collaboration approaches discussed thus far do not restrict or prescribe any transport mechanisms. However, there are certain requirements that the selected transport mechanism needs to fulfill:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bidirectional"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Servers need to be able to initiate sending of data to peer clients whenever an update from a client is received."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Low latency"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Although user edits are first made locally and appear instantaneously, and update payloads are small, a low latency transport mechanism will help users receive peer updates and persist changes more frequently, reducing the likelihood of data loss due to crashes."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Ordered"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Servers assume that updates broadcasted to clients will be received in the order they are sent as transformations are made with the assumption that the operations are made in order. Hence the transport mechanism needs to guarantee that messages are sent in order during broadcast."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"While latency is largely determined by network connection speed and reliability, the protocol also plays a part. Some transport approaches are persistent and therefore more efficient as there is no need for repeated handshakes and initialization. The possible approaches are:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Long polling"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": In long polling, the client sends a request to the server, and the server holds the connection open until new data is available. Once data is sent, the client immediately reopens the connection to wait for the next update."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WebSockets"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": WebSockets provide a full-duplex communication channel over a single, long-lived persistent connection. Once a WebSocket connection is established between the client and server, the server can push updates to the client as they occur. Ideal for scenarios where both the client and server need to continuously exchange data, like in chat applications, multiplayer games, or collaborative editing tools."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server-sent events (SSE)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": SSE is a standard that allows the server to push text-based event updates to the client via HTTP. Unlike WebSockets, SSE is unidirectional (server-to-client) and is more suitable for unidirectional scenarios where only the server needs to push data to the client. For client-to-server communication, standard HTTP requests can be used. SSE is well-suited for applications where updates are infrequent or the data is primarily sent from the server to the client."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Analysis","link":{"type":"url","url":"#analysis"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reliability"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Reliability is the biggest concern here – how do we ensure that messages sent from the server are guaranteed to be received by the client? The connection could be unstable if the user is on the move or at a cafe. Persistent connections could disconnect and require reconnection. When a client is connecting, reconnecting, or offline, it can miss out on messages that happened on the server but could not reach the client."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This issue is especially significant in long polling. While long polling tries to mimic real-time updates, there can be a delay between when new data is available on the server and when it is received by the client. This delay occurs because the server needs to wait for an existing long polling request to return before the client can receive the new data. Reconnection is literally built into how long polling works, so there's a larger window for server updates to be missed."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Ordering"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": None of the mentioned transport mechanisms guarantee in-order delivery of the messages. Client-to-server communication is guaranteed thanks to client-level message ordering by enforcing only one in-flight request at a time. Server-to-client communication ordering is required by the communication protocol but not built into it. In SSE, if the connection drops, it is automatically retried but that's not the case for other methods."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Overall, "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WebSockets is the best choice of transport mechanism for collaborative editing"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" given its low-latency and bidirectional communication properties. WebSockets is widely used by many production-grade apps for real-time updates. Although WebSockets do not guarantee message ordering, that gap can be filled with custom logic in the application layer via libraries like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Socket.io","link":{"type":"url","url":"https://socket.io/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It is also possible to use SSE. We can use SSE for receiving peer updates and regular HTTP requests for sending messages, but it can be confusing to use two different transport mechanisms for collaborative editing."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Long polling is not viable given there are more modern technologies that overcome its shortcomings."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Overall approach summary","link":{"type":"url","url":"#overall-approach-summary"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Let's summarize the key areas of the overall approach."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Efficient request payload"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Only the operation kind and necessary information is sent and received during updates, resulting in requests being small and efficient. The payload size isn't affected by the length of the document."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client-server network architecture"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A client-server model is selected where participants connect to a central server. Having a central server simplifies the collaboration protocol easier to understand and implement as clients only have to focus on synchronization with the server and not other clients. The server can treat all clients in the same fashion."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Concurrency control via version-detection"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A version-detection model is the most ideal where each client holds a replica of the document and changes are propagated to peers as soon as possible. The document is never locked and every user can optimistically make changes locally without waiting for server acknowledgement. The speed and reliability of the network connection doesn’t limit how fast users can type. Conflicts in versions can be resolved by transforming operations (OT) or handled with special data structures (CRDTs)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Conflict resolution via OT"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": OT is chosen due to its maturity and OT has its roots in document editing. Each operation provides enough information for merging updates. Google Docs has also stuck with OT technology over the years and is still using OT up till this day."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Store documents as a revision log"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The document is stored as an append-only log of operations/changes, which enables version history and efficient computation of differences between client states and server states."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update scheduling"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Each client maintains a \"local updates\" buffer and \"sent updates\" buffer, ensuring that there will only be one network request in-flight at any time."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Operation granularity"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Operations granularity is decided at the intention level and continuous typing actions are coalesced."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WebSockets for transport"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": WebSockets are low-latency and bidirectional which is suitable for server-to-client communication. Message out-of-order issues can be addressed via custom logic in the application layer."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We highly recommend checking out this "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"interactive visualization of OT with a central server","link":{"type":"url","url":"https://operational-transformation.github.io/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", it really helps with understanding the collaboration protocol."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Now that we have discussed the various options and decided on an approach, we can reorganize and present them using the RADIO framework sections."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Architecture / high-level design","link":{"type":"url","url":"#architecture--high-level-design"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The high level architecture has already been covered extensively above. In summary, a client-server architecture is the most suitable given the requirements:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Central server where all clients communicate with. Clients do not communicate with each other directly."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server holds the source of truth as a revision log, which enables computation of the latest document state."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Clients sync with the server as soon as possible."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/collaborative-editor-google-docs/collaborative-editor-architecture.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Component responsibilities","link":{"type":"url","url":"#component-responsibilities"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We'll focus on the key components of a collaborative editor."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"UI"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Displays the document and sends events to the rich text editor core."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rich text editor core"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Holds the document state/model, similar to the core of the rich text editor system design. Responds to user events by manipulating the underlying document state which triggers DOM events. Provides APIs for external modifications of the document state."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sync engine"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Module responsible for syncing local updates to the server, receiving updates from the server (transforming appropriate operations) and updating the editor core. Most of everything discussed above lives in this module."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Local updates buffer"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Local operations that have not been sent to the server."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sent updates buffer"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Local operations that have been sent to the server but not yet acknowledged by the server."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Updates log"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Revisions that have been committed as part of the document history."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": WebSocket server that can receive and push updates to the client."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pending updates"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Operations from clients that have not been committed."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Revision log"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Operations that have been processed and can give the complete history of the document."}}]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The editor core and UI is entirely decoupled from the sync engine and server back end. The editor core provides APIs for the sync engine to modify the document model depending on the received operations."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data model","link":{"type":"url","url":"#data-model"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The core state to discuss here is the document state. As per the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rich Text Editor system design article","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/rich-text-editor"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", within the rich text editor core, the document state is modeled as a tree."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However within the sync engine, the document is stored as the initial document state + multiple lists (sequences) of operations (local, sent, received). The latest document state can be constructed by applying these operations on top of the initial document state. Each committed operation increases the revision number."}}]}},{"object":"block","type":"table","table":{"table_width":5,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rev no."}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Operations"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Timestamp"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Document"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"0"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"N/A"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"N/A"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024-08-03 10:00"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<EMPTY>"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"1"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Charlie"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"INS \"Hello\" @0"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024-08-03 10:05"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Hello\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"INS \" world\" @5"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024-08-03 10:10"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Hello world\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"3"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bob"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"INS \"!\" @11"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024-08-03 10:15"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Hello world!\""}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When a new user joins the session or if the current user refreshes the page, the document they initialize with is the latest version, constructed from all the committed operations on the server; all client-side operations lists will be empty."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/collaborative-editor-google-docs/join-session.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The diagram above demonstrates the states of clients who join at different times. Alice joins the session when the document is at revision 1 and only contains \"Hello\". She adds \" world\" to the document and sees \"Hello world\" on her screen. Alice's document was constructed from an initial document state of \"Hello\" and her insertion operation of \" world\"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bob then joins the session at revision 2 and he is directly initialized with the current document state of \"Hello world\", without any granular operations history."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Operational transformations on the document level","link":{"type":"url","url":"#operational-transformations-on-the-document-level"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"So far the operations (and transforms) we have mentioned in this article are executed on the sentence level in a plaintext context. However, documents are rich text, how can transformations be performed on documents?"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rich Text Editor system design article","link":{"type":"url","url":"https://www.greatfrontend.com/questions/system-design/rich-text-editor"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", we have discussed how tree data structures can be used to represent rich text documents, hence we need OTs that can be used on tree structures. Discussing the technicalities of OTs is beyond the scope of this article, but we will briefly discuss the rough approach."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A full rich text document is represented as a tree and there are two categories of nodes – element nodes and text nodes. Element nodes can contain child nodes, which are other element nodes or text nodes, while text nodes are leaves and can only contain textual content (plaintext) and have formatting flags. Heading and paragraphs are subclasses of element nodes because they can contain child text nodes. At a high level, a document contains a root node with a list of heading elements, paragraph elements, as its direct children etc."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Operational transformations work well on strings, which are list-like structures. The children of element nodes are also in a list structure, see the similarity here?"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Let's look at some potential scenarios when editing a document:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Inserting characters in the same sentence"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Let's assume the sentence is contained within a single text node. We've covered such conflicts pretty thoroughly above. The insertion at the back will have to be transformed (offset increased) to make space for the insertion in front."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Inserting paragraphs at the same time"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Let's assume these paragraphs are direct children of the document root node. Inserting paragraphs is equivalent to modifying direct children of the root node, a list-like structure. Notice that inserting characters within the same sentence is also modifying a list (of characters) where the insertion operation at the back needs to be shifted. Hence a similar transformation can be used to resolve the conflict for paragraph insertions."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Inserting characters in different paragraphs"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": There's no conflict here since different nodes are modified."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The pattern here is that conflicts will arise when the same nodes are modified, which thankfully isn't that common in longer documents. OT techniques can be used to resolve conflicts in lists, whether they are a list of characters (in sentences and paragraphs) or a list of paragraphs (in the document's root node)."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interface definition (API)","link":{"type":"url","url":"#interface-definition-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We'll focus on the core APIs required for syncing between client and server."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Initialization API","link":{"type":"url","url":"#initialization-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This API provides the client with the necessary information to start a collaborative editing session. A sample response looks like this:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"revision\": 145,\n  \"document\": \"...\" // Rich text editor format\n}"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update/save API","link":{"type":"url","url":"#updatesave-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This API allows sending of local updates to the server. Since this is done using WebSockets, a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"type"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" field is necessary to differentiate between the requests. Note that multiple operations are allowed in a single update request."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Request"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"type\": \"UPDATE\",\n  \"requestId\": 2, // Monotonically increasing integer per client\n  \"revision\": 146, // Base revision that the update is performed on\n  \"isUndo\": false, // Differentiate between new and undo operations\n  \"operations\": [\n    {\n      \"type\": \"INSERT\",\n      \"nodeId\": 24, // Needed in a document context\n      \"payload\": {\n        \"characters\": \"Hello\",\n        \"index\": 4\n      }\n    },\n    {\n      \"type\": \"INSERT\",\n      \"nodeId\": 25,\n      \"payload\": {\n        \"characters\": \"Bye\",\n        \"index\": 2\n      }\n    }\n  ]\n}"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Update acknowledgement callback","link":{"type":"url","url":"#update-acknowledgement-callback"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The server sends this to the client upon acknowledgement of an update request. Upon acknowledgement, clients can move the operation from the \"Sent updates\" to the \"Updates log\"."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"type\": \"ACK\",\n  \"requestIdAcknowledged\": 2,\n  \"requestId\": 3,\n  \"revision\": 147\n}"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"On update callback","link":{"type":"url","url":"#on-update-callback"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These are server-initiated messages that indicate a peer made an update."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"type\": \"PEER_UPDATE\",\n  \"revision\": 148,\n  \"userId\": 6543, // User who made the update\n  \"operations\": [\n    {\n      \"type\": \"INSERT\",\n      \"nodeId\": 24, // Needed in a document context to identify the node to modify\n      \"payload\": {\n        \"characters\": \"Goodbye\",\n        \"index\": 8\n      }\n    },\n    {\n      \"type\": \"INSERT\",\n      \"nodeId\": 25,\n      \"payload\": {\n        \"characters\": \" earth\",\n        \"index\": 4\n      }\n    }\n  ]\n}"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"On reconnect callback","link":{"type":"url","url":"#on-reconnect-callback"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When clients disconnect and finally reconnect, the server should send it any revisions it has missed out on while the client was disconnected."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"type\": \"SYNC\",\n  \"revisions\": [\n    {\n      \"revision\": 147,\n      \"userId\": 6543, // User who made the update\n      \"operations\": [\n        {\n          \"type\": \"INSERT\",\n          \"nodeId\": 24, // Needed in a document context to identify the node to modify\n          \"payload\": {\n            \"characters\": \"Goodbye\",\n            \"index\": 8\n          }\n        },\n        {\n          \"type\": \"INSERT\",\n          \"nodeId\": 25,\n          \"payload\": {\n            \"characters\": \" earth\",\n            \"index\": 4\n          }\n        }\n      ]\n    }\n  ]\n}"}}],"language":"plain text"}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimizations and deep dive","link":{"type":"url","url":"#optimizations-and-deep-dive"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"History and versioning","link":{"type":"url","url":"#history-and-versioning"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Google Docs allow users to view the document history as a list of versions. By storing the document as a log of operations/updates, we can \"time travel\" and go back to the document state at any point in time. Each document revision is identified by a monotonically increasing positive integer, which is constructed from the operations up till that point."}}]}},{"object":"block","type":"table","table":{"table_width":5,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rev no."}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Operations"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Timestamp"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Document state"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"0"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"N/A"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"N/A"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024-08-03 10:00"}}],[]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"1"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Charlie"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"INS \"Hello\" @0"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024-08-03 10:05"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Hello\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Alice"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"INS \" world\" @5"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024-08-03 10:10"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Hello world\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"3"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bob"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"INS \"!\" @11"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024-08-03 10:15"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Hello world!\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"4"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Donald"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"INS \" Goodbye\" @12"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024-08-05 09:00"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Hello world! Goodbye\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"5"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Erin"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"INS \" earth\" @20"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024-08-05 09:10"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Hello world! Goodbye earth\""}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Although every granular change is stored in the database, it is more meaningful to display a version log, which groups multiple revisions together. Changes made together within a short duration are part of the same version:"}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Version"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Time"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Last edited by"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"1"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024-08-03 10:15"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Charlie, Bob, Alice"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"2024-08-05 09:10"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Donald, Erin"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This is similar to what Google Docs displays when you click on the \"Version History\" button."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Undo/redo","link":{"type":"url","url":"#undoredo"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Undo/redo is a tricky topic for rich text editors and even more so when it is a collaborative one."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Should a user's undo/redo history be on the user level or document level (all participants share the same undo/redo)? It makes more sense to only undo your own actions as users are unlikely to be aware of what others are doing and want to undo them."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The document's revision log is append-only; we can only add, not remove. At the same time, removing already committed operations is complex as that might require other clients to undo certain transforms. Google Docs implements undo by appending the negation of the previous operation as a new update. Clients can filter their \"Updates log\" for changes that were made by them and append negations of those operations."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Hence update operations need an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"isUndo"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" flag to differentiate between new operations vs undo operations and filter them out when identifying their last non-undo operation, otherwise users will be stuck at undo-ing/redo-ing (undo-ing the undo) the most recent operation."}}]}},{"object":"block","type":"table","table":{"table_width":5,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rev no."}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Operation"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Is undo"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Document"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"4"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Donald"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"INS \" Goodbye\" @12"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"False"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Hello world! Goodbye\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"5"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Erin"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"INS \" earth\" @20"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"False"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Hello world! Goodbye earth\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"6"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Erin"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"INS \"...\" @26"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"False"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Hello world! Goodbye earth…\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"7"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Erin"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DEL 3 @29"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"True"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Hello world! Goodbye earth\""}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"8"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Erin"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"DEL 6 @26"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"True"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Hello world! Goodbye\""}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The revision log above demonstrates how Erin's insertions are undone as deletion operations (a negation of the insertion) appended to the revision log as revisions 7 and 8."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reliability","link":{"type":"url","url":"#reliability"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reliability is about ensuring that messages sent from the server are guaranteed to be received by the client, in the order they were sent. Clients can disconnect anytime, resulting in the possibility of the server sending a message and not being received by the client. Clients can also be on unstable network connections and some messages get lost in transition."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dropped messages are not an issue if the messages contain the entire document state, but that as explained above, it isn't efficient. In our approach, messages contain crucial granular updates and missing out on any of them will result in document replicas going out-of-sync. Clients have to receive all peer operations in order to converge to the consistent document state."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This is where document revision numbers come in useful, if the server is aware of the document revision the client has, it can use that information to compute what updates are missing on the client."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Who should keep track of each client's latest document revision number? It is troublesome and also not scalable for servers to keep track of the document revision number of each client. A scalable approach involves clients maintaining the latest document revision number they have and including that value in server requests. That way, the server can remain relatively stateless."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If a client reconnects to the session with revision 5 in the payload and the server is currently on revision 8, the server knows that the client is missing revisions 6, 7, and 8, and thus can send the updates of revisions 6, 7, and 8."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Other reliability requirements include in-order delivery, retries, and acknowledgements. WebSockets do not include these features, so custom logic has to be added into the application layer via libraries like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Socket.io","link":{"type":"url","url":"https://socket.io/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The collaboration protocol outlined above can handle flaky connections well. As long as the client retains the document revision number and sends it to the server as part of the request payload, the server will be able to determine what updates are missing from the client. Each update operation also has a unique ID tagged to them, which facilitates de-duplication in the case of duplicate requests."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Offline editing","link":{"type":"url","url":"#offline-editing"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As of writing (Aug 2024), Google Docs does not support offline editing. However, offline editing can be supported relatively effortlessly with the current architecture. When the client detects that there is no network connection, users can continue editing, but any updates remain in the \"local updates\" buffer and are not sent out."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When the client regains network connectivity:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Send local updates to server"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The \"local updates\" are sent to the server and moved to the \"send updates\" buffer."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fetch updates from server"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The client could have missed out on some updates while it was offline, the server should push the missing updates since the client's last synced revision."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Document formats","link":{"type":"url","url":"#document-formats"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are numerous file formats that are supported by word processors like Google Docs and Microsoft Word. Out of which, the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":".docx"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (Microsoft Word) and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":".odt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (OpenDocument Text) file formats are the most popular."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The specification for the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":".docx"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":".odt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" file formats are openly available:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":".docx"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Word Extensions to the Office Open XML (.docx) File Format","link":{"type":"url","url":"https://learn.microsoft.com/en-us/openspecs/office_standards/ms-docx/b839fe1f-e1ca-4fa6-8c26-5954d0abbccd"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":".odt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"OpenDocument technical specification","link":{"type":"url","url":"https://en.wikipedia.org/wiki/OpenDocument_technical_specification"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"While Google Docs can open these file formats, it doesn't mean the internal document state matches them exactly. As long as the word processor includes modules to import and export between external formats and its internal state, the software is free to use any format internally."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Let's briefly look at what goes into "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":".odt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" files. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":".odt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" files are OpenDocument Text files, a format used primarily by word processing applications like LibreOffice Writer and Apache OpenOffice. They are similar to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":".docx"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" files used by Microsoft Word but are based on the OpenDocument format, an open standard for document file types."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"An "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":".odt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" file is essentially a ZIP archive that contains several XML files and directories, each serving a specific purpose in storing the content, styles, settings, and other aspects of the document. Here are examples of the main XML files within an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":".odt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" file:"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"content.xml"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This is the core file that contains the actual text content of the document along with its structure. It includes elements like paragraphs, tables, lists, and other document elements in XML format."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<office:text>\n  <text:p>This is a paragraph of text in the document.</text:p>\n  <text:table>\n    <!-- Table data here -->\n  </text:table>\n</office:text>"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"styles.xml"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This file defines the styles used in the document, such as paragraph styles, character styles, table styles, and page layouts. It ensures consistent formatting across the document."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<office:styles>\n  <style:style style:name=\"Heading1\" style:family=\"paragraph\">\n    <style:text-properties fo:font-size=\"18pt\" fo:font-weight=\"bold\"/>\n  </style:style>\n</office:styles>"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"meta.xml"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Contains metadata about the document, such as the title, author, creation and modification dates, word count, and other descriptive information."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<office:meta>\n  <meta:initial-creator>John Doe</meta:initial-creator>\n  <dc:title>My Document</dc:title>\n  <meta:creation-date>2024-08-14T10:00:00</meta:creation-date>\n</office:meta>"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"settings.xml"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Stores various settings related to the document, such as page view options, printer settings, and other user preferences that affect how the document is displayed or printed."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<office:settings>\n  <config:config-item-set config:name=\"ooow:ViewSettings\">\n    <config:config-item config:name=\"ViewMode\" config:type=\"string\">Normal</config:config-item>\n  </config:config-item-set>\n</office:settings>"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"manifest.xml"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This file lists all the files contained within the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":".odt"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" archive and their MIME types. It serves as a directory for the contents of the archive."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<manifest:manifest>\n  <manifest:file-entry manifest:full-path=\"/\" manifest:media-type=\"application/vnd.oasis.opendocument.text\"/>\n  <manifest:file-entry manifest:full-path=\"content.xml\" manifest:media-type=\"text/xml\"/>\n</manifest:manifest>"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Other files"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":":"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Images"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": If the document contains images, they are stored as separate files within the package."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Embedded objects"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Other types of embedded objects, such as charts or spreadsheets, might also be included as separate files."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These XML files work together to define the content, appearance, metadata, and settings of the document, allowing it to be opened, edited, and displayed consistently across different word processing software that supports the OpenDocument format."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"References","link":{"type":"url","url":"#references"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Concurrency Control in Groupware Systems","link":{"type":"url","url":"https://dl.acm.org/doi/pdf/10.1145/67544.66963"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"High-Latency, Low-Bandwidth Windowing in the Jupiter Collaboration System","link":{"type":"url","url":"https://dl.acm.org/doi/pdf/10.1145/215585.215706"}}}]}}],"questionsMarkdown":null,"answerMarkdown":null,"time":"40 mins"},{"title":"Video Streaming (e.g. Netflix)","difficulty":"Hard","url":"https://www.greatfrontend.com/questions/system-design/video-streaming-netflix?practice=practice&tab=system-design","questionBlocks":[{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Designing a video streaming application is a common but complex system design question, but there are limited resources that provide a comprehensive guide on how to design the front end for such platforms."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Question"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Design a video streaming application similar to platforms like Netflix and YouTube that allows users to browse through a library of video content to discover interesting videos and watch videos."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/video-streaming-netflix/video-streaming-netflix-netflix-discovery-page.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/video-streaming-netflix/video-streaming-netflix-netflix-watch-page.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Real-life examples"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.netflix.com","link":{"type":"url","url":"https://www.netflix.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.youtube.com","link":{"type":"url","url":"https://www.youtube.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.hulu.com","link":{"type":"url","url":"https://www.hulu.com/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"https://www.primevideo.com","link":{"type":"url","url":"https://www.primevideo.com/"}}}]}}],"answerBlocks":[{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Requirements exploration","link":{"type":"url","url":"#requirements-exploration"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What are the core features to be supported?","link":{"type":"url","url":"#what-are-the-core-features-to-be-supported"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Browsing of recommended videos on the homepage (Discover/recommendations page)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Autoplaying billboard video at the top of the discover/recommendations page."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Playback of video content on a standalone page."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What is the desired video playback quality and resolution?","link":{"type":"url","url":"#what-is-the-desired-video-playback-quality-and-resolution"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Multiple resolutions and streaming quality options should be supported and automatically chosen depending on the device conditions."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What functionality should the video player include?","link":{"type":"url","url":"#what-functionality-should-the-video-player-include"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video progress"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Play, pause, skip, seeking (jumping) to a specific timestamp of the video, adjusting playback rate."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Audio"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Changing language, adjusting volume."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Subtitles"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Subtitles display and selection of subtitle languages."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What devices will the application be used on?","link":{"type":"url","url":"#what-devices-will-the-application-be-used-on"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Primarily desktop but it should also be usable on tablet and mobile."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"What are the non-functional requirements?","link":{"type":"url","url":"#what-are-the-non-functional-requirements"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Prioritize a smooth video watching experience, users shouldn't have to wait too long before they can start watching the video:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Users on slow internet connections should still be able to watch the videos even if a lower quality version is to be served."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Reduce stuttering and buffering."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fast "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"video startup time","link":{"type":"url","url":"https://www.mux.com/blog/the-video-startup-time-metric-explained"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Background","link":{"type":"url","url":"#background"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since media playing on the web is a pretty specialized domain that most people would not have much experience in, we've provided a summary of the important technicalities you need to be aware of regarding video playing in the context of a system design interview. In fact, most of the contents covered here is more than expected of candidates, but it doesn't hurt to know more."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Glossary","link":{"type":"url","url":"#glossary"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Streaming"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The process of delivering multimedia content, like video and audio, over the internet in a continuous and real-time manner. It allows users to watch or listen to the content while it is being transmitted, without the need to download the entire file before playback begins."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Buffering"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The process of preloading video content to ensure smooth playback, preventing interruptions due to slow network connections."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bitrate"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Refers to the amount of data transferred per second in a video stream. It determines the quality and size of video files, with higher bitrates yielding better quality but larger file sizes."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Frame rate"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The number of video frames displayed per second, typically measured in frames per second (fps). Common frame rates include 24fps for film and 30fps or 60fps for television and online video."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Resolution"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Specifies the dimensions of a video in terms of width and height (e.g., 1920 x 1080 pixels for Full HD). Higher resolutions offer better visual quality but require more bandwidth."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Codec"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A software or hardware component that encodes and decodes video and audio data. Common video codecs include H.264, H.265 (HEVC), VP9, and AV1."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bandwidth"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The amount of data that can be transmitted over a network connection in a given time frame. In video streaming, sufficient bandwidth is necessary to deliver video content smoothly and at the desired quality. Higher-quality videos with higher bitrates require more bandwidth for uninterrupted playback."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Poster"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Static thumbnail image of the video."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Closed captions (CC)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Text-based subtitles displayed during video playback, typically used for providing accessibility and language translation. They're different from subtitles but can be treated the same for the purpose of interviews."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Playback controls"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": User interface elements for video control, including play, pause, seek, and volume."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Seeking"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Seeking in video playback is the action of moving to a specific point or time in the video without playing it from the beginning. Users can jump to a specific scene or timecode within the video, often by interacting with a seek bar or timeline."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Scrubbing"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Scrubbing is a user action that involves dragging the playhead or seek bar of a video player to navigate through the video content. It allows users to quickly move forward or backward in the video to find specific scenes or moments."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"We will be using these terms frequently in the content below."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video playback on the web","link":{"type":"url","url":"#video-playback-on-the-web"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The most basic way of playing videos on websites is to use a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" HTML tag on a page with the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"src"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute pointing to an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"mp4"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" or "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"webm"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" file, just like the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<img>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tag. However, this most basic way of playing videos on a webpage doesn't offer the best user experience as they do not support adaptive bitrates."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Sophisticated video players on Netflix and YouTube leverage the following key components:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Player interface"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This includes the user interface of the video player, which provides controls like play, pause, and volume adjustment. Browsers offer a basic playback controls UI but often you'd want to have more control over the styling and appearance."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Streaming protocol"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Streaming involves progressively downloading a large video file that has been split into smaller segments. The player downloads and plays these segments in sequence, maintaining a buffer to handle network fluctuations. Common streaming protocols are HTTP Live Streaming (HLS) and Dynamic Adaptive Streaming over HTTP (DASH)."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Manifest file"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Manifest files guide the video player to the location of video segment files. They include a master manifest, which is the first point of contact and directs the player to various renditions of the video, and rendition manifests for each specific video quality. The format of the manifest files differ depending on the streaming protocol used."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Adaptive bitrate streaming"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This technique allows the player to select from different versions of a video (various resolutions and bitrates) to ensure smooth playback based on the user's internet speed. To avoid buffering, video players dynamically adjust the playback quality and use the manifest files to determine the location of the segment files for the desired quality."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video formats","link":{"type":"url","url":"#video-formats"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WebM","link":{"type":"url","url":"https://www.webmproject.org/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and MP4 are common video formats and the differences between them are primarily related to their video encoding, browser support, licensing, and usage:"}}]}},{"object":"block","type":"table","table":{"table_width":3,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Area"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WebM"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"MP4"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Usage"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Online streaming."}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video storage, video editing, broadcasting, and streaming."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Browser support"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Supported on Firefox, Chrome, and Opera. Support on mobile devices and non-web platforms is limited."}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"More universal support."}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Encoding and compression"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Uses the VP8 or VP9 video codec and Vorbis or Opus for audio. VP8/VP9 codecs are known for efficient compression, making them suitable for online streaming with less bandwidth usage."}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Uses the H.264 (or AVC) video codec and AAC for audio. H.264 is widely regarded for its high compression efficiency and excellent video quality, even at lower bitrates."}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Like WebP, WebM is also developed by Google as a performant file format for media on the web. WebM is more suited for web-based applications with an emphasis on open-source and efficient streaming, while MP4 is a versatile format with broad device and platform support, making it a popular choice for a wide range of video applications."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Architecture / high-level design","link":{"type":"url","url":"#architecture--high-level-design"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering approach","link":{"type":"url","url":"#rendering-approach"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video streaming applications have the following characteristics:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video titles are searchable via search engines. YouTube videos are mostly public while Netflix has a title page containing just the video details and some art/thumbnails ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Netflix title page example","link":{"type":"url","url":"https://www.netflix.com/title/80057281"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Certain video watching pages are only accessible by logged-in premium users (in the case of Netflix)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Pages are interaction heavy due to browsing of video recommendations and video playing interactions."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fast initial loading speed and video startup speed is desired."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For pages accessible by logged-in users only, server-side rendering (SSR) will improve performance slightly but SSR is not crucial. For pages that are discoverable by search engines (public videos), SEO and hence SSR will be important."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"YouTube SSRs a basic skeleton of their browse/discover page."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/video-streaming-netflix/video-streaming-netflix-youtube-discovery-page-ssr.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Netflix SSRs the entire "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"video title page","link":{"type":"url","url":"https://www.netflix.com/title/80057281"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/video-streaming-netflix/video-streaming-netflix-netflix-title-page-ssr.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"For watch pages, especially in the case of Netflix where the video fills up the entire page, SSR is not as useful. The SSR-ed HTML doesn't include a loaded video or any buffered data needed to start playback and JavaScript is required for video streaming playback anyway."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/video-streaming-netflix/video-streaming-netflix-netflix-discovery-page-ssr.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"YouTube SSRs a static preview of the video (poster image) while Netflix does not SSR anything visible."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/video-streaming-netflix/video-streaming-netflix-youtube-watch-page-ssr.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"However, Netflix's initial HTML contains data needed by the React application to boot up the video player on the page. If this data is not present in the initial HTML, the page needs to make a request to fetch the data, which requires an extra roundtrip and will be slower."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/video-streaming-netflix/video-streaming-netflix-netflix-watch-page-ssr.png"}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Service"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Access"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendering"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Netflix"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video title page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Public"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SSR full page"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Netflix"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Browse/discover page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Logged in"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SSR above the fold"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Netflix"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Watch page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Logged In"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SSR just the app data (JSON)"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"YouTube"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Homepage (recommendations)"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Public"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SSR a skeleton"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"YouTube"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Watch page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Public"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SSR UI skeleton with video preview / poster image"}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As seen from the table, there's no hard and fast rule here. YouTube SSRs only the skeleton for their pages. Netflix SSRs public pages and the browse page because it improves user engagement. SSR can be used for video listing pages which benefit from high user engagement. For video watching pages, SSR is less important and CSR can be used."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Single-page application (SPA) or Multi-page application (MPA)?","link":{"type":"url","url":"#single-page-application-spa-or-multi-page-application-mpa"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As video streaming websites are highly interactive and navigation between discovery pages and watch pages can be pretty common (especially when the user is still choosing a video), persisting the data fetched on the discovery page across page navigations will improve the performance. Moreover, on SPAs, clients can prefetch the metadata needed by subsequent watch pages, improving the video startup time."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Netflix and YouTube are both single-page applications."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Component responsibilities","link":{"type":"url","url":"#component-responsibilities"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/video-streaming-netflix/video-streaming-netflix-architecture.png"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Provides HTTP APIs to fetch video recommendations and video object metadata."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video CDN server"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": CDN server to fetch video contents itself. Allows individual fetching segments of the video."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Client store"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Stores data needed across the whole application. Most of the data in the store will be server-originated data needed by the video recommendations page. Persists data across navigation so that revisiting the recommendations page will not require fetching of the recommendations list again."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Discover page"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The page that users use to browse the recommended videos."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Billboard video player"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Featured video at the top that plays immediately when the page is loaded."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video lists"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": List of video categories. Each category shows a horizontal list of video thumbnails."}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Watch page"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The page that users watch a full video."}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Full-screen video player"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Plays the video and contains video playback controls."}}]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The video player components (purple boxes) on each page will make requests to the video CDN server to fetch video segments in a streaming fashion."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data model","link":{"type":"url","url":"#data-model"}}}]}},{"object":"block","type":"table","table":{"table_width":4,"has_column_header":true,"children":[{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Entity"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Source"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Belongs to"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Fields"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Recommendations"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Discover page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"lists"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (list of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"VideoList"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pagination"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (pagination metadata)"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"VideoList"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Discover page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"videos"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (list of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"VideoMetadata"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pagination"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (pagination metadata)"}}]]}},{"object":"block","type":"table_row","table_row":{"cells":[[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"VideoMetadata"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Server"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Discover page"}}],[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"id"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"title"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"boxart_url"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", etc."}}]]}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The video recommendations should be stored in the client store which is preserved across page navigations. This acts as a cache to allow presenting of the video recommendations immediately (without a network request) whenever the user goes back to the \"Discover page\" to browse more recommendations."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video players contain standalone data models and APIs, which will be covered in a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"dedicated section below","link":{"type":"url","url":"#video-player-data-model-architecture-and-api"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interface definition (API)","link":{"type":"url","url":"#interface-definition-api"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video recommendations API","link":{"type":"url","url":"#video-recommendations-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This API is used on the browse/discovery page to render the list of video categories and the top videos within each category. Cursor-based pagination can be used to fetch more recommendation categories and more category videos."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"{\n  \"recommendations\": {\n    \"items\": [\n      {\n        \"name\": \"TV Shows\",\n        \"videos\": {\n          \"items\": [\n            { \"videoId\": 123, \"title\": \"...\", \"boxArtUrl\": \"...\" },\n            { \"videoId\": 124, \"title\": \"...\", \"boxArtUrl\": \"...\" }\n          ],\n          \"pagination\": {}\n        }\n      },\n      {\n        \"name\": \"New Releases\",\n        \"videos\": {\n          \"items\": [\n            { \"videoId\": 125, \"title\": \"...\", \"boxArtUrl\": \"...\" },\n            { \"videoId\": 126, \"title\": \"...\", \"boxArtUrl\": \"...\" }\n          ],\n          \"pagination\": {}\n        }\n      }\n    ],\n    \"pagination\": {}\n  }\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Both offset-based pagination and cursor-based pagination can be used."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The data for the first page of recommendations and videos:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Is used to SSR the initial HTML (refer to image in rendering approach section)."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Rendered as JSON data within "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<script>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags and is injected into the client store ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"window.netflix.reactContext"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Data for subsequent pages is fetched from a HTTP API and added into the client store, which is then added to the page's DOM."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Media streaming and subtitles API","link":{"type":"url","url":"#media-streaming-and-subtitles-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The APIs for streaming of the video data, audio data, and subtitles for a video depend on the selected streaming protocol (DASH, HLS) which is "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"covered in more detail below","link":{"type":"url","url":"#streaming-protocols"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video player API","link":{"type":"url","url":"#video-player-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video players are covered in a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"dedicated section below","link":{"type":"url","url":"#video-player-data-model-architecture-and-api"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video player data model, architecture, and API","link":{"type":"url","url":"#video-player-data-model-architecture-and-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"As a video player involves multiple properties (state), lots of actions resulting in state changes, and many components which rely on the central video player state, a unidirectional reducer + actions pattern is appropriate. This can be implemented using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"useReducer"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" in React or React + Redux where Redux provides more structure around the actions and reducers along with additional devtools for an enhanced developer experience."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/video-streaming-netflix/video-streaming-netflix-video-player-parts.png"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/video-streaming-netflix/video-streaming-netflix-video-player-architecture.png"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"View"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (UI Components): Progress control, Control bar, Media"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"State"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" (naming may differ from actual DOM properties): Player state, Buffered frames, Current time, Duration, Playback rate, Current timestamp, Volume, Muted, Audio language, Subtitle language, Audio tracks, Video tracks, Subtitles / text tracks, Poster, Height, Width"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dispatcher"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Dispatches an action to the reducer. Alternatively, clients can directly dispatch the actions from within the UI components or event handlers."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Actions"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Play, Pause, Skip, Seek, Adjust volume, Mute, Toggle full screen"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard events"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" resulting in actions:"}}],"children":[{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Space -> Play/Pause"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Volume key -> Adjust volume"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mute key -> Mute sound"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Arrow keys -> Skip"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Full screen shortcut -> Toggle full screen"}}]}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Background events"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"loadstart"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"loadeddata"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ended"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"error"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"stalled"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"waiting"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", etc. See the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"full list of events available on the ","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#events"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#events"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#events"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Flux-like unidirectional flow model","link":{"type":"url","url":"https://facebookarchive.github.io/flux/docs/in-depth-overview"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" works well here. In a reducer pattern, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"newState = reducer(action, state)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". Actions are operations that mutate state. A list of actions, known operations that can modify state, is defined. The only way to change the state is to dispatch an action, there is no way to update the state directly. This helps to centralize state mutation logic within the reducer."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Actions can also originate from different sources – they can be triggered from various UI elements, keyboard events, or background events. The reducer does not need to care about where the actions were dispatched from, it simply has to take in an action + current state and return the new state."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"YouTube experienced performance issues due to its player video controls being over-componentized and certain interactions caused extra style recalculations due to circular dependencies and memory leaks. To fix the issue, YouTube updated the video player to synchronize all updates by refactoring the player to a top-level component that would pass down data to its children. This ensured only one UI update (paint) for any state change, eliminating chained updates. Although YouTube does not use React or Redux, this refactoring is essentially an implementation of the Flux-like reducer pattern. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Source: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Building a Better Web - Part 1: A faster YouTube on web","link":{"type":"url","url":"https://web.dev/case-studies/better-youtube-web-part1"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In 2018, Netflix rewrote their video player to React and Redux, they chose to use Redux in order to single-source and encapsulate the complex playback business logic. Redux is a well-known library/pattern in web UI engineering, and it facilitated separation of concerns in ways that met their goals. By combining Redux with data normalization, they enabled parallel development across teams in addition to providing standardized, predictable ways of expressing complex business logic. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Source: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Modernizing the Web Playback UI. Since 2013, the user experience of… | by Netflix Technology Blog","link":{"type":"url","url":"https://netflixtechblog.com/modernizing-the-web-playback-ui-1ad2f184a5a0"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Buffered video data can be cached, especially for the billboard video which doesn't change across the session. However, clients should pay attention to the amount of buffered video data and release memory when it reaches the point where page performance is affected."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Media players inherently contain state as well because "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"HTMLVideoObject"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s in the DOM contain properties like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"paused"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"muted"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", etc. By building your own video player component in JavaScript, there will be state values that are duplicated and with duplication, values can go out-of-sync. The recommended approach is to let the UI component state be the source of truth and sync the component state with the DOM media player state, essentially making the media player a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"controlled\" component","link":{"type":"url","url":"https://react.dev/reference/react-dom/components/input#controlling-an-input-with-a-state-variable"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" similar to how "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" elements are controlled in React."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Here are some libraries that provide custom video players or help you build one:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Shaka Player","link":{"type":"url","url":"https://github.com/shaka-project/shaka-player"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": An open-source JavaScript library for adaptive media that supports DASH and HLS."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video.js","link":{"type":"url","url":"https://videojs.com/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Similar to Shaka Player, with many different themes and skins."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Media Chrome","link":{"type":"url","url":"https://www.media-chrome.org/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Elements for building media players."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Tutorials:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Mobile Web Video Playback | Articles | web.dev","link":{"type":"url","url":"https://web.dev/articles/media-mobile-web-video-playback"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Building a Media Player Series | Chrome for Developers","link":{"type":"url","url":"https://www.youtube.com/watch?v=--KA2VrPDao&list=PLNYkxOF6rcIBykcJ7bvTpqU7vt-oey72J&index=20"}}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Optimizations and deep dive","link":{"type":"url","url":"#optimizations-and-deep-dive"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Understanding native HTML ","link":{"type":"url","url":"#understanding-native-html-video-elements"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>","link":{"type":"url","url":"#understanding-native-html-video-elements"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" elements","link":{"type":"url","url":"#understanding-native-html-video-elements"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTML5 provides a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tag to play a video within a webpage. It was introduced with HTML5 and represents a significant improvement in web standards, allowing direct embedding of videos without the need for external plugins like Flash. In this section we introduce some basics about the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tag."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Progressive downloading","link":{"type":"url","url":"#progressive-downloading"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The simplest way to render a video is similar to images, where the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"src"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute is pointing to a video file."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<video src=\"movie.mp4\" />"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This method of using the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tag with a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"src"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute pointing to a video file is called \"progressive downloading\". In progressive downloading, the video file is downloaded from the server in a linear fashion and played simultaneously. Unlike streaming, where only the necessary parts of the video are sent to the user, progressive download involves downloading the entire file, starting from the beginning. The video can be played as soon as enough data has been downloaded to ensure uninterrupted playback. This method is simpler than true streaming but requires more bandwidth and storage, as the entire video file is downloaded, regardless of whether the user watches it to the end. This gives an appearance similar to streaming but isn't true streaming in the technical sense."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Seeking can be achieved by using a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP ","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Range","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" request","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to download the appropriate segment. An HTTP "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Range"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" request asks the server to send only a portion of an HTTP message back to the client which is useful for media players because it wants to support random access of a file."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video playing on Netflix and YouTube use streaming as opposed to progressive downloading. It is achieved through the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Media Source API","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/API/Media_Source_Extensions_API"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" in combination with adaptive streaming formats like HLS and DASH and adaptive bitrate algorithms, to provide smooth streaming experiences regardless of device or network conditions. More on that "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"below","link":{"type":"url","url":"#media-source-api"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>","link":{"type":"url","url":"#video-element-attributes"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element attributes","link":{"type":"url","url":"#video-element-attributes"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Supported HTML attributes include:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"src"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Specifies the source of the video file."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"width"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"height"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Define the size of the video player on the webpage."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"controls"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Adds video controls like play, pause, and volume."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"autoplay"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Causes the video to start playing as soon as it is loaded (not recommended due to user experience and bandwidth considerations)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"loop"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Enables the video to start over again, every time it is finished."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"muted"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Mutes the audio by default."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"poster"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Specifies an image to be shown while the video is downloading, or until the user hits the play button."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Most of these HTML attributes become the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"HTMLVideoElement"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"'s properties in the DOM when the HTML is parsed by the browser."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element also allows specifying multiple video sources via the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"source"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tag so that the browser can pick the format that works best. This is done to ensure compatibility across various browsers, as not all browsers support the same video formats."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<video width=\"320\" height=\"240\" controls>\n  <source src=\"movie.webm\" type=\"video/webm\" />\n  <source src=\"movie.mp4\" type=\"video/mp4\" />\n  <source src=\"movie.ogg\" type=\"video/ogg\" />\n  Your browser does not support the video tag.\n</video>"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Text placed between the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags (but outside the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<source>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags) serves as fallback content for browsers that do not support the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tag."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"HTMLVideoElement","link":{"type":"url","url":"#htmlvideoelement-methods"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" methods","link":{"type":"url","url":"#htmlvideoelement-methods"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"HTMLVideoElement"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element can be manipulated using JavaScript for further interactivity. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"HTMLVideoElement"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s inherit from the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"HTMLMediaElement"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" interface which provides a range of methods that allow for controlling and interacting with media elements like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<audio>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" in HTML. Some of the important methods available on the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"HTMLMediaElement"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":":"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"play()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This method is used to start playing the media. If the media is already playing, this method has no effect. If playback is paused, it will resume."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pause()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This method pauses the media playback. If the media is already paused, this method has no effect."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"load()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This method is used to reset the media element and reload the source media. It's useful when the source of the media has changed."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"addTextTrack()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Adds a new text track to the media element. This can be used for subtitles, captions, descriptions, chapters, or metadata."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"fastSeek()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": This method allows for fast seeking to a specific time point in the media."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"HTMLVideoElement","link":{"type":"url","url":"#htmlvideoelement-events"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" events","link":{"type":"url","url":"#htmlvideoelement-events"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"HTMLVideoElement"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" inherits from the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"HTMLMediaElement"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" interface which provides a range of events that allow developers to monitor and control media playback. These events are crucial for creating interactive and responsive media experiences on web pages."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Here are some of the important events associated with "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"HTMLMediaElement"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":":"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"loadstart"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Fired when the browser starts looking for the media; beginning of the loading process."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"loadeddata"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Triggered when the first frame of the media has finished loading and is ready to play."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"progress"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Fired periodically as the browser loads the media. Useful for showing media loading progress."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"play"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Triggered when the media playback has begun or resumed."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"playing"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Fired when the media actually begins to play after being paused or stopped for buffering."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"pause"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Occurs when the media playback is paused."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ended"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Triggered when playback has stopped because the end of the media was reached."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"waiting"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Occurs when the media playback is stopped due to temporary lack of data."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"stalled"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Fired when there is an unexpected halt in media downloading, often due to network issues."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"volumechange"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Occurs when the volume changes, including when the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"muted"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute changes."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"error"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Fired when an error occurs while fetching the media."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These events are essential for creating a detailed control interface for media elements, handling errors, tracking progress, and responding to user interactions. By adding event listeners to these events, developers can manage media playback in a custom manner and also gather user analytics."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Drawbacks of using ","link":{"type":"url","url":"#drawbacks-of-using-video"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>","link":{"type":"url","url":"#drawbacks-of-using-video"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Using \"vanilla\" "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" elements also comes with some drawbacks."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Limited adaptive streaming support"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element doesn't natively support adaptive streaming protocols like DASH or HLS in all browsers. These protocols dynamically adjust video quality based on the user's internet speed, ensuring a smooth streaming experience. Without this, users may experience buffering or low-quality video. The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element might not be optimized for scenarios where low latency is crucial, such as live streaming events."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Restricted customization and control"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" elements also contain playback controls, but like most native elements, each browser renders them differently. If you want a consistent and branded user interface across browsers you will have to build your own playback controls. However, styling these controls isn't straightforward unlike other HTML elements like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<button>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<input>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s. You will have to build your own components."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note that "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" elements also contain their own state as mentioned in the attributes/properties above. If you are using a JavaScript framework/library (e.g. React, Vue) and have built your own "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Video"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" component that renders the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" elements along with custom controls, you will need to do a two-way sync between your React component state and the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"HTMLVideoElement"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" state as there can be native controls that directly affect the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"HTMLVideoElement"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" like the play/pause/volume buttons (also known as media keys) on some keyboards."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In the following example, the React component state is synced with the DOM video state. Try playing the video using either \"Play\" buttons and see that the playback and custom UI states are synced properly."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"React video component state sync","link":{"type":"url","url":"https://codesandbox.io/embed/f6h325?fontsize=14&hidenavigation=1&theme=dark&module=/src/App.tsx&view=split"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Also ensure that custom-built video controls meet the accessibility requirements and standards provided by the native video controls."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"No support for advanced features"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Features like video previews, thumbnails on seek, multi-bitrate streaming, and live streaming are not natively supported or are limited in the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Because of these drawbacks, it's clear that to create a world-class video streaming experience, a custom video player UI is the way to go."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video streaming","link":{"type":"url","url":"#video-streaming"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Now that we have a better understanding of video playback using progressive downloading and its drawbacks, we can discuss how a world-class video watching experience is achieved through video streaming."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Media Source API","link":{"type":"url","url":"#media-source-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Media Source API","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/API/Media_Source_Extensions_API"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", formally known as Media Source Extensions (MSE), is a web API that enhances the capabilities of streaming media in web applications. The Media Source API allows replacing the standard single progressive "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"src"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" URI in media elements with a "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"MediaSource"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" object. This object manages the media's ready state and references multiple "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"SourceBuffer"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" objects, representing different chunks of the media stream."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"// Setup the video element and MediaSource\nconst videoEl = document.getElementById('my-video');\nconst mediaSource = new MediaSource();\n\n\n// Set the MediaSource object as the source of the video element.\nvideoEl.src = URL.createObjectURL(mediaSource);\nmediaSource.addEventListener('sourceopen', sourceOpen);\n\n\nasync function sourceOpen() {\n  // Create a source buffer with a specific MIME type.\n  const sourceBuffer = mediaSource.addSourceBuffer(\n    'video/mp4; codecs=\"avc1.64001E\"',\n  );\n\n\n  sourceBuffer.addEventListener('updateend', () => {\n    // Check if the media source has ended and if there are more segments\n    // You can fetch and append additional segments.\n    if (!sourceBuffer.updating && mediaSource.readyState === 'open') {\n      mediaSource.endOfStream();\n    } else {\n      // Fetch next segment.\n    }\n  });\n\n\n  // Fetch the first segment of the video.\n  const response = await fetch('path/to/your/video/segment1.mp4');\n  const segment = await response.arrayBuffer();\n  // Append the fetched segment to the source buffer.\n  sourceBuffer.appendBuffer(segment);\n}"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Segmented video files, along with the Media Source API, allows for clients to stream video content. This API also allows for the creation of more interactive video experiences, such as the ability to insert ads dynamically, switch between multiple video angles, or synchronize additional content with video playback. "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Netflix's Bandersnatch","link":{"type":"url","url":"https://postperspective.com/netflixs-black-mirror-bandersnatch-lets-viewers-choose/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is an interactive film with 5 unique endings where users can \"choose their own adventure\" while watching. As such, the number of combinations is huge and it is not feasible to create video files for all possible film paths. Using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"MediaSource"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" helps to dynamically stitch the different parts of the film together depending on the user's choice."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"If you inspect the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"src"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute of "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" elements on Netflix and YouTube, you'll see that they look like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video src=\"blob:https://www.netflix.com/b4bc251f-5b0d-47a3-b0cb-4fbf653a16f4\">"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". This is because the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"src"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" was created using "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"URL.createObjectURL()"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Read more about Media Source API on:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Media Source API | Articles | web.dev","link":{"type":"url","url":"https://web.dev/articles/media-mse-basics"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Media Source API | MDN","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/API/Media_Source_Extensions_API"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Now we know how video streaming works, but that's not all there is to know! Streaming can be further improved with adaptive bitrate streaming."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Adaptive Bitrate Streaming","link":{"type":"url","url":"#adaptive-bitrate-streaming"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"While streaming helps to improve the video playback experience, it does not take into account the client's device and network conditions. If a user is on a choppy mobile network, they will not be able to watch a high resolution video immediately as they will have to wait longer for the segments to be downloaded. Users on mobile devices also do not benefit from high resolution videos when their screen size is not wide enough to display all the details."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Adaptive Bitrate Streaming"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" is a technique used in online video and audio streaming that dynamically adjusts the quality of a video to suit the available bandwidth and processing capabilities of the user's device."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Clients use an adaptive bitrate (ABR) algorithm to automatically select the segment with the highest bitrate possible that can be downloaded in time for playback without causing stalls or re-buffering events in the playback."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These factors are monitored in real-time and used by the algorithm:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Available bandwidth"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Available codecs"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Connection quality"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video player dimensions"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Playback rate"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"This decision is made dynamically as the video plays, adapting to changing network speeds."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Media Capabilities API","link":{"type":"url","url":"#media-capabilities-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Media Capabilities API","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/API/Media_Capabilities_API"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" allows websites to get more information about the client's video decode performance and make an informed decision about which codec and resolution to deliver to the user."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"YouTube used the Media Capabilities API","link":{"type":"url","url":"https://web.dev/case-studies/youtube-media-capabilities"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to prevent their adaptive bitrate algorithm from automatically selecting resolutions that a device could not play smoothly."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Streaming protocols","link":{"type":"url","url":"#streaming-protocols"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are two popular streaming protocols that are used on the web that can be used to enable adaptive bitrate streaming: "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dynamic Adaptive Streaming over HTTP (DASH)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP Live Streaming (HLS)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"These streaming protocols have the following in common:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Segmented media files"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Media content of various quality is divided into small segments, enabling seamless streaming and the ability to switch between different quality streams."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP-based delivery"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": They utilize standard HTTP web servers for media delivery, simplifying distribution and reducing the need for specialized streaming servers. Using HTTP to fetch files moves much of the logic from the network protocol to the client-side application so media can also be streamed from static CDNs like Amazon S3."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Manifest files"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Each protocol uses a type of manifest file (like MPD for DASH, M3U8 for HLS) to provide information about the available streams, their resolutions, bitrates, and segment locations (URLs)."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dynamic Adaptive Streaming over HTTP (DASH)","link":{"type":"url","url":"#dynamic-adaptive-streaming-over-http-dash"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Dynamic Adaptive Streaming over HTTP (DASH) is a streaming protocol and technology that allows for the efficient delivery of multimedia content, such as video and audio, over the internet. DASH is designed to optimize the viewing experience for users by adapting to their network conditions and device capabilities in real-time."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Additional features of DASH:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Media Presentation Description (MPD)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": DASH relies on an XML-based manifest file known as the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Media Presentation Description (MPD)","link":{"type":"url","url":"https://ottverse.com/structure-of-an-mpeg-dash-mpd/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":". The MPD contains metadata about the video content, including information about available quality levels, segment URLs, and other attributes that guide the video player in making adaptive streaming decisions."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Latency control"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": DASH can be designed to control latency based on specific use cases. Low-latency DASH (LL-DASH) is an extension that optimizes the protocol for live and interactive streaming applications."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Interoperability"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": DASH is designed for interoperability across different devices and platforms. As a result, it's possible to use the same DASH-encoded content for various playback environments."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"DASH is commonly used by many streaming services, including popular platforms like Netflix, YouTube, and Amazon Prime Video, to provide a high-quality streaming experience to users. It helps ensure that users receive the best possible video quality while adapting to changing network conditions, device capabilities, and screen sizes. This technology has played a significant role in improving the reliability and performance of online video streaming."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"dash.js","link":{"type":"url","url":"https://reference.dashif.org/dash.js/"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" library is a reference client implementation for the playback of DASH via JavaScript and compliant MSE platforms."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP Live Streaming (HLS)","link":{"type":"url","url":"#http-live-streaming-hls"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HTTP Live Streaming (HLS) is a streaming protocol and technology developed by Apple for the delivery of multimedia content, such as video and audio, over the internet. HLS is widely used for streaming video content, especially on iOS devices (iPhones and iPads), as well as in web browsers and other platforms."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Additional features of HLS:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"M3U8 playlist files"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": HLS uses M3U8 playlist files, which are text-based manifest files that describe the media content and provide information about available quality levels, segment URLs, and other attributes. The playlist files are hosted on the server and are used by the client (the video player) to request and play the media content."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Media encryption"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": HLS can support media content encryption using various encryption methods to protect content from unauthorized access. This can include methods like Advanced Encryption Standard (AES) encryption."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Compatibility"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": HLS is compatible with a wide range of devices, including iOS devices, web browsers, Android devices, smart TVs, and more. Many media players and streaming platforms support HLS."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Low latency mode"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": In more recent versions, HLS has introduced low latency modes to reduce the delay between live events and user reception, making it suitable for real-time streaming, including live sports and online gaming."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Adaptive streaming servers"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": To implement HLS, specialized media servers are often used, such as Apple's macOS-based HTTP Live Streaming tools, or third-party servers like Wowza Streaming Engine and Nginx with the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"ngx_http_hls_module"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HLS has become a de facto standard for streaming video content, especially in the world of online video services and live streaming. It is widely adopted due to its compatibility with iOS devices and its adaptive streaming capabilities, which help ensure a high-quality viewing experience for users across different network conditions and device types."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"An M3U8 file can describe multiple video qualities, allowing the player to switch between different streams based on network conditions or user preferences. This is a key feature of adaptive streaming in HTTP Live Streaming (HLS). Here's an example of an M3U8 playlist with multiple video qualities:"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Manifest file","link":{"type":"url","url":"#manifest-file"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The manifest file is a critical component that provides essential information about the video content, allowing the video player to properly play the video. The manifest file guides the video player on how to request and display the video segments."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"There are different types of manifest files used in various streaming protocols, such as:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"DASH"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": In DASH, the manifest file is known as the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Media Presentation Description (MPD)","link":{"type":"url","url":"https://www.brendanlong.com/the-structure-of-an-mpeg-dash-mpd.html"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" file. This file, typically in XML format, contains information about the available quality levels, segment URLs, and other attributes necessary for the video player to request and play the content."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"HLS"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": For HLS, the manifest file is known as the Media Playlist or "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"M3U/M3U8","link":{"type":"url","url":"https://en.wikipedia.org/wiki/M3U"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" file. It is a plain text file with an "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":".m3u8"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" extension that contains metadata and URLs to video segments."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"It is not important to know the exact format of the manifest files, but you should know what details they contain. Manifest files contain details about the video stream, such as:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Available quality levels"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Information about different bitrates and resolutions available for the video, allowing the player to choose the appropriate quality based on network conditions."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Segment URLs"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Links to individual video segments or chunks. These segments make up the complete video and are requested by the player as needed for playback."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Playback timing and structure"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Details on the sequence and duration of segments, allowing the player to organize and play them in the correct order."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Adaptive streaming information"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Information that enables adaptive streaming, ensuring the player can switch between different bitrates or resolutions based on network conditions."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Audio and subtitle tracks"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Information about alternative audio tracks and subtitle options available for the video."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The manifest file is crucial in facilitating the adaptive streaming process and enabling the player to fetch and play the video segments as needed, allowing for a smoother and uninterrupted viewing experience. It essentially serves as a guide for the player, providing the necessary information to request and present the video content."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Netflix primarily uses a proprietary adaptive bitrate streaming technology based on DASH and is similar to other adaptive streaming protocols like HLS, but with some unique features and optimizations tailored to Netflix's large-scale streaming service. Netflix optimizes its streams not only for the user's bandwidth but also for the type of content (like action vs. dialogue-heavy films) and the device being used (smart TVs, smartphones, tablets, etc.). YouTube uses DASH but supports HLS for certain applications, such as on Apple devices where HLS is more prevalent."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Here's a simplified example of what an MPD file used for DASH might look like:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<MPD xmlns=\"urn:mpeg:dash:schema:mpd:2011\" type=\"static\" mediaPresentationDuration=\"PT6M16S\" minBufferTime=\"PT1.5S\">\n  <Period start=\"PT0S\">\n    <AdaptationSet mimeType=\"video/mp4\" segmentAlignment=\"true\" startWithSAP=\"1\">\n      <Representation id=\"video_1\" width=\"1920\" height=\"1080\" bandwidth=\"8000000\" codecs=\"avc1.640028\">\n        <SegmentTemplate media=\"video_1_$Number$.m4s\" initialization=\"video_1_init.m4s\" duration=\"4\" timescale=\"1\" startNumber=\"1\"/>\n      </Representation>\n      <Representation id=\"video_2\" width=\"1280\" height=\"720\" bandwidth=\"4000000\" codecs=\"avc1.64001f\">\n        <SegmentTemplate media=\"video_2_$Number$.m4s\" initialization=\"video_2_init.m4s\" duration=\"4\" timescale=\"1\" startNumber=\"1\"/>\n      </Representation>\n      <!-- More Representations for different resolutions and bitrates -->\n    </AdaptationSet>\n    <AdaptationSet mimeType=\"audio/mp4\" lang=\"en\">\n      <Representation id=\"audio_1\" bandwidth=\"128000\" codecs=\"mp4a.40.2\">\n        <SegmentTemplate media=\"audio_1_$Number$.m4s\" initialization=\"audio_1_init.m4s\" duration=\"4\" timescale=\"1\" startNumber=\"1\"/>\n      </Representation>\n      <!-- More Representations for different audio qualities -->\n    </AdaptationSet>\n  </Period>\n</MPD>"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In this example, the MPD file describes a video with two video quality options (1080p and 720p) and one audio track. Each "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"Representation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element provides details about a specific version of the content, including resolution, bitrate, codec, and the naming pattern for the segment files ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"SegmentTemplate"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"). The client player uses this information to select the most appropriate stream based on current playback conditions."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Used in HLS, an M3U8 file can describe multiple video qualities, allowing the player to switch between different streams based on network conditions or user preferences. Here's example of an M3U8 playlist with multiple video qualities:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"#EXTM3U\n#EXT-X-STREAM-INF:BANDWIDTH=800000,RESOLUTION=640x360\nhttp://example.com/low.m3u8\n#EXT-X-STREAM-INF:BANDWIDTH=1400000,RESOLUTION=960x540\nhttp://example.com/medium.m3u8\n#EXT-X-STREAM-INF:BANDWIDTH=2800000,RESOLUTION=1280x720\nhttp://example.com/high.m3u8\n#EXT-X-STREAM-INF:BANDWIDTH=5000000,RESOLUTION=1920x1080\nhttp://example.com/hd.m3u8"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"And an example of what "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"http://example.com/low.m3u8"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" can contain:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"#EXTM3U\n#EXT-X-VERSION:3\n#EXT-X-TARGETDURATION:10\n#EXT-X-MEDIA-SEQUENCE:0\n\n\n#EXTINF:10.0,\nhttp://example.com/low/segment0.ts\n#EXTINF:10.0,\nhttp://example.com/low/segment1.ts\n#EXTINF:10.0,\nhttp://example.com/low/segment2.ts\n\n\n#EXT-X-ENDLIST"}}],"language":"plain text"}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Note that the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":".ts"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" extension is an MPEG-2 Transport Stream file, which contains a segment of the media stream. It's not a TypeScript file!"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Resources","link":{"type":"url","url":"#resources"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Setting up adaptive streaming media sources - Developer guides","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/Guide/Audio_and_video_delivery/Setting_up_adaptive_streaming_media_sources"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How Netflix Pioneered Per-Title Video Encoding Optimization - Streaming Learning Center","link":{"type":"url","url":"https://streaminglearningcenter.com/encoding/how-netflix-pioneered-per-title-video-encoding-optimization.html"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Subtitles / Closed Captions","link":{"type":"url","url":"#subtitles--closed-captions"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Subtitles and closed captions both provide on-screen text to accompany video content, but they serve different purposes and audiences:"}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Subtitles are primarily intended for users who can hear the audio but do not understand the language spoken in the video. Typically, subtitles only include the dialogue or spoken words, and not much beyond that. They are used by people who are not deaf or hard of hearing."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Closed captions are designed for users who are deaf or hard of hearing. Closed captions include not only the dialogue but also other relevant parts of the soundtrack such as sound effects, background noises, and music cues. They also indicate who is speaking or note significant sounds. They are particularly helpful for those who cannot hear the audio in the video."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The differences are subtle but it is useful to know the them. From here on, we will refer to subtitles as a general term to mean on-screen text that accompanies video content."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Separate subtitles files","link":{"type":"url","url":"#separate-subtitles-files"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Subtitles are often provided in separate files that are downloaded and displayed along with the video. The most common subtitle file formats include:"}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"SubRip Subtitle (SRT)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A simple and widely supported format that contains timestamped text."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Timed Text Markup Language (TTML)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": An XML-based format for captions and subtitles."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Scenarist Closed Caption (SCC)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A format used for closed captions and captions for broadcast video."}}]}},{"object":"block","type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WebVTT (VTT)"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": A format that offers more styling options and is commonly used for HTML5 video. You can use the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<track>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element within the HTML5 "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" element to reference a WebVTT file, and the browser handles the rendering of subtitles."}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"<video controls>\n  <source src=\"video.mp4\" type=\"video/mp4\" />\n  <track\n    label=\"English\"\n    kind=\"subtitles\"\n    srclang=\"en\"\n    src=\"subtitles.vtt\"\n    default />\n</video>"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Embedded subtitles","link":{"type":"url","url":"#embedded-subtitles"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In some cases, subtitles are embedded directly into the video file itself. This method is common for broadcast and streaming video formats like DVB, ATSC, and some streaming protocols. The subtitles are decoded and displayed by the video player."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"DASH and HLS support delivering subtitles as part of the streaming package. The subtitles are included in the manifest files and can be selected by the user through the video player."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Separate API","link":{"type":"url","url":"#separate-api"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Some web video player libraries offer APIs that allow developers to dynamically load subtitles from external sources or services. This can be useful for applications where subtitles change based on user preferences or dynamic content."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accessibility features","link":{"type":"url","url":"#accessibility-features"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"When displaying subtitles, it's important to ensure that they are accessible to all users, including those with disabilities. This involves providing proper markup and interaction support for screen readers and keyboard navigation. It also includes enabling users to customize the appearance of subtitles, such as font size and color, to improve readability."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"In addition to spoken dialog, subtitles and transcripts should also identify music and sound effects that communicate important information. This includes emotion and tone:"}}]}},{"object":"block","type":"code","code":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"14\n00:03:14 --> 00:03:18\n[Dramatic rock music]\n\n\n15\n00:03:19 --> 00:03:21\n[whispering] What's that off in the distance?"}}],"language":"plain text"}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Multiple language support","link":{"type":"url","url":"#multiple-language-support"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"To cater to a global audience, video players typically allow users to select from multiple languages and subtitle tracks, making it possible to switch between different languages or caption styles."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Resources","link":{"type":"url","url":"#resources-1"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Implementing Japanese Subtitles on Netflix | by Netflix Technology Blog","link":{"type":"url","url":"https://netflixtechblog.com/implementing-japanese-subtitles-on-netflix-c165fbe61989"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Web Video Text Tracks Format (WebVTT) - Web APIs | MDN","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/API/WebVTT_API"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Subtitles, Captions, WebVTT, HLS, and those magic flags | Mux","link":{"type":"url","url":"https://www.mux.com/blog/subtitles-captions-webvtt-hls-and-those-magic-flags"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Adding captions and subtitles to HTML video - Developer guides | MDN","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/Guide/Audio_and_video_delivery/Adding_captions_and_subtitles_to_HTML5_video"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"WebAIM: Captions, Transcripts, and Audio Descriptions","link":{"type":"url","url":"https://webaim.org/techniques/captions/"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance","link":{"type":"url","url":"#performance"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Performance in video streaming is vital for a seamless and enjoyable viewing experience, free from buffering and quality issues. For businesses, high performance in streaming is critical for customer retention, brand reputation, and efficient bandwidth usage, which impacts operational costs and scalability."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Minimizing latency and delay","link":{"type":"url","url":"#minimizing-latency-and-delay"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video loading time"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Reduce video loading times to minimize buffering delays. Use adaptive streaming techniques to deliver the appropriate quality based on the user's network conditions."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Buffering optimization"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Optimize video buffering to provide smooth playback. Preload video content where possible, and use efficient buffering algorithms. Buffer ahead of the current timestamp."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Network efficiency"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Leverage adaptive bitrate streaming to adjust video quality based on the user's available bandwidth. This ensures that users with slower connections can still watch videos (albeit at a lower quality) without frequent buffering."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video compression"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Use modern video compression codecs (e.g., H.264, H.265, VP9) to minimize the size of video files, reducing the amount of data that needs to be transferred over the internet."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"CDN usage"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Utilize Content Delivery Networks (CDNs) to serve video content from servers located closer to users, reducing latency and improving playback performance."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Lazy loading"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Implement lazy loading for videos so that they only load when they come into the user's viewport. Lazy load non-visible UI like dropdowns and modals during idle cycles or when it's being interacted with. This reduces initial page load times."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Player responsiveness"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Ensure that video player controls and the user interface remain responsive during video playback. Users should be able to interact with the player without delays."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Preloading media files"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Preload media either by using the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"preload"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attribute (only for predefined "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"src"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":", not compatible with Media Source API) or use link preload ("}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"source","link":{"type":"url","url":"https://web.dev/articles/fast-playback-with-preload"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":")."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Improving video startup time by separating video lifecycle from UI lifecycle","link":{"type":"url","url":"#improving-video-startup-time-by-separating-video-lifecycle-from-ui-lifecycle"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"The conventional approach of allowing the UI component tree to control the lifecycle of video playback can lead to a sluggish user experience. This is primarily due to the dependency on UI lifecycle methods, like those in React, where video initiation is tied to specific component calls, causing users to wait until the playback is sufficiently loaded before viewing the content."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A more efficient alternative involves separating the logic for managing video playback from the UI component tree. This allows the execution of video-related processes from any point within the application, including before the UI tree is rendered during the initial application loading. By initiating video creation in parallel with UI rendering, the application gains valuable time to create, initialize, and buffer video playback. Consequently, this approach enables users to start playing the video sooner, enhancing the overall responsiveness and user experience."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Source: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Modernizing the Web Playback UI | by Netflix Technology Blog","link":{"type":"url","url":"https://netflixtechblog.com/modernizing-the-web-playback-ui-1ad2f184a5a0"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Separating audio and video streams","link":{"type":"url","url":"#separating-audio-and-video-streams"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Audio and video streams can be separated so that the video stream can be reused even if the audio changes, e.g. when audio changes to a different language. This granular separation allows for other optimizations such as when users play videos in a background tab (e.g. common for lyrics videos), video data does not need to be streamed."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Image optimizations","link":{"type":"url","url":"#image-optimizations"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Preload poster image"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<link as=\"image\" rel=\"preload\" href=\"poster.jpg\" fetchpriority=\"high\">"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video thumbnails"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Optimize the generation and display of video thumbnails, which can contribute to faster loading times and improve the user experience when seeking through a video."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Responsive images"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Use responsive thumbnail images to load images of the suitable dimensions for the current device."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bandwidth efficiency","link":{"type":"url","url":"#bandwidth-efficiency"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Selective autoplay"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": When opening a video in a new tab, YouTube does not start playing the video until the tab is in focus."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Non-visible tabs"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Only audio data needs to be streamed when the tab is in the background and not visible."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Buffer sufficiently but not excessively"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Don't buffer more than necessary, especially if the video is paused as the user might not intend to resume watching."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Memory usage","link":{"type":"url","url":"#memory-usage"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video watching requires pages to be long-lived, so it is important to pay attention to memory usage and efficiency."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Memory usage"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Minimize memory consumption to prevent performance degradation over time, especially on devices with limited RAM. Not streaming video data when the tab is in the background helps to lower the amount of data in the buffer, thereby keeping memory usage low."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Resource cleanup"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Properly release resources, including video buffers and memory, when a video is no longer needed to prevent memory leaks and performance issues."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"User experience","link":{"type":"url","url":"#user-experience"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"A positive user experience in video streaming is crucial as it ensures user satisfaction and engagement from the user's perspective. For businesses, it translates into higher user retention, brand loyalty, and potential revenue growth, as satisfied users are more likely to recommend the service and continue their subscriptions."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Ease of use","link":{"type":"url","url":"#ease-of-use"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Playback controls"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The player should provide essential playback controls, including play/pause, volume control, mute, and fullscreen mode. These controls should be easily accessible and responsive."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Consistent user interface"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Maintain a consistent and familiar user interface across different devices and platforms. Users should feel comfortable with the player's layout and controls and their positioning should conform to common standards."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Responsive design"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": The video player should adapt to various screen sizes and orientations, ensuring that it works well on desktops, laptops, tablets, and mobile devices."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Seeking and scrubbing"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Ensure that seeking (moving forward or backward in the video) is easy and precise. Users should be able to scrub through the video accurately."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Customization","link":{"type":"url","url":"#customization"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Customization options"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Allow users to customize aspects of the player, such as subtitles, captions, video quality, and playback speed to suit their preferences."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video quality settings"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Provide options for users to adjust video quality based on their internet connection and device capabilities. This can help prevent buffering issues and provide a smoother viewing experience."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Playback speed control"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Some users prefer to watch videos at a faster or slower speed. Include an option to adjust the playback speed to cater to individual preferences."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Error handling"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Display clear and informative error messages when playback issues occur, such as when the video can't be loaded or an error is encountered during playback."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Enhanced experience","link":{"type":"url","url":"#enhanced-experience"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Prevent layout shifts"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Set the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"width"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" and "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"height"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" attributes on "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tag to "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"prevent layout shifts","link":{"type":"url","url":"https://web.dev/patterns/web-vitals-patterns/video/video"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video thumbnail previews"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Offer video thumbnails or previews when users hover over the timeline. This helps users quickly identify specific scenes in the video."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Poster image"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": For autoplay videos, "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"YouTube found that using a solid black poster image","link":{"type":"url","url":"https://web.dev/case-studies/better-youtube-web-part1#improving_core_web_vitals"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" for autoplay videos was a better experience because the transition from solid black to the first frame of the video to be less-jarring."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accessibility (a11y)","link":{"type":"url","url":"#accessibility-a11y"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Since video streaming applications serve a broad, international audience, accessibility is vital because it ensures that all users, including those with disabilities, have equal access to content. A high standard of a11y also helps the business uphold the principles of equality and non-discrimination in digital content consumption."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Subtitles","link":{"type":"url","url":"#subtitles"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Accessibility for subtitles have been covered in the "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"\"Subtitles\"","link":{"type":"url","url":"#subtitles--closed-captions"}}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" section above. To recap:"}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Audio impairment issues"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Closed captions or subtitles should be provided for videos to assist users who are deaf or hard of hearing."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Implementation"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": One way to implement subtitles is to use "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<track>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags within "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"<video>"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" tags."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Readability"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Ensure subtitles are easy to read, with clear fonts, appropriate sizes, and high contrast against the video in the background. Common choices are white text with a drop shadow or white text highlighted in a dark color."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Inclusion of non-speech elements"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Capture not just dialogue but also significant sounds and audio cues in the subtitles to provide a fuller understanding of the content."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Customization options"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Support the display and customization of captions, including font size, color, and background."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Multi-lingual support"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Subtitles should be offered in multiple languages to cater to a diverse audience with different linguistic backgrounds."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Visual assistance","link":{"type":"url","url":"#visual-assistance"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Contrast and color choices"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Ensure that the video player's user interface, including controls and text, meets minimum contrast ratios to make it easier to read and interact with. Avoid relying solely on color to convey important information."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Load progress indicator"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Display a loading progress bar or spinner to inform users that the video content is loading. This can help manage user expectations and reduce frustration."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Buffering indicator"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Clearly indicate when the video is buffering to manage user expectations and provide feedback on the loading process."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Description of site's capabilities"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Netflix describes the video's features to screen reader users."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"/img/questions/video-streaming-netflix/video-streaming-netflix-netflix-video-capabilities-a11y.png"}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Screen readers","link":{"type":"url","url":"#screen-readers"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Buttons have labels"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Providing alternative text for video controls, offering descriptive labels for buttons (which are usually icon-only)."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Video playback information"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Screen reader users should receive pertinent information about the video, such as title, duration, and playback status."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Text-to-speech compatibility"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Video players should not interfere with or disrupt assistive technologies that convert on-screen text to speech."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard support","link":{"type":"url","url":"#keyboard-support"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard accessibility"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Video players should be operable using keyboard navigation alone. This includes allowing users to play, pause, adjust volume, and seek through the video using keyboard shortcuts. Keyboard focus should be visible and logical."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Keyboard shortcuts"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Offer keyboard shortcuts for common actions, such as volume control, playback, and seeking within the video."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Focus management"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Maintain a clear and logical focus order, ensuring that keyboard and screen reader users can easily navigate through controls without getting stuck."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"External sources of control","link":{"type":"url","url":"#external-sources-of-control"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Multiple input methods"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Ensure that the video player can be operated using a variety of input methods, including touchscreens and pointing devices."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"External peripherals"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": External peripherals can also control the media object state, the web user interface is not the only source of control. Media object's state should be synced with the UI component state so that custom-built controls can accurately reflect playback state."}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Source: "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":true,"code":false,"color":"default"},"text":{"content":"Accessible multimedia - Learn web development | MDN","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Learn/Accessibility/Multimedia#accessible_audio_and_video_controls"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Internationalization (i18n)","link":{"type":"url","url":"#internationalization-i18n"}}}]}},{"object":"block","type":"paragraph","paragraph":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Internationalization concerns for a web video player involve making sure that the player is designed and developed to support users from various regions and languages."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Language support"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": User interface should be translated into multiple languages to support a global audience. Use internationalization libraries or frameworks like i18next or "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"react-intl"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":" to manage language translations."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Translated labels for buttons"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Non-visible button labels like "}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":true,"color":"default"},"text":{"content":"aria-label"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"s should also be translated for the user's selected language."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Subtitle and captioning"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Support multiple languages for subtitles and closed captions. Users from different regions may require subtitles in their native languages to fully understand the content."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Audio track selection"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Provide the ability for users to select audio tracks in different languages if the video offers multiple audio options, such as dubbing."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Region-based content"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Some content may be geographically restricted due to licensing or regional regulations. The player should handle content availability based on the user's location."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"RTL (Right-to-Left) support"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": If supporting languages with right-to-left writing systems (e.g., Arabic or Hebrew), ensure that the video player's interface adapts to RTL layout when necessary."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Localization of content metadata"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": If the video player displays metadata about the content, such as titles and descriptions, ensure that this information can be localized and is presented accurately for different regions."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Content ratings and guidelines"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Some regions have specific content rating systems and guidelines. Make sure that content ratings and warnings comply with local regulations and standards."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":true,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Legal and compliance"}},{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":": Be aware of international copyright and intellectual property laws. Ensure that the video player and content distribution comply with local regulations and licensing agreements."}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Bonus","link":{"type":"url","url":"#bonus"}}}]}},{"object":"block","type":"heading_3","heading_3":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How to serve thumbnails when hover the seek bar","link":{"type":"url","url":"#how-to-serve-thumbnails-when-hover-the-seek-bar"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"YouTube creates low-res images for each timestamp and stitches a few frames together into a sprite sheet uploaded to a CDN. When the seek bar is hovered, a request is made to fetch the sprite sheet that contains the thumbnail for the current timestamp."}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Netflix includes the thumbnails as part of their streamed data."}}]}},{"object":"block","type":"heading_2","heading_2":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"References","link":{"type":"url","url":"#references"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How video works","link":{"type":"url","url":"https://howvideo.works/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Building a Better Web - Part 1: A faster YouTube on web","link":{"type":"url","url":"https://web.dev/better-youtube-web-part1/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"How YouTube improved video performance with the Media Capabilities API","link":{"type":"url","url":"https://web.dev/youtube-media-capabilities/"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Media Source API","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/API/Media_Source_Extensions_API"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"UI frameworks and Media Elements","link":{"type":"url","url":"https://medium.com/axon-enterprise/ui-frameworks-and-media-elements-c0c6832528e5"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Modernizing the Web Playback UI | by Netflix Technology Blog","link":{"type":"url","url":"https://netflixtechblog.com/modernizing-the-web-playback-ui-1ad2f184a5a0"}}}]}},{"object":"block","type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","annotations":{"bold":false,"strikethrough":false,"underline":false,"italic":false,"code":false,"color":"default"},"text":{"content":"Setting up adaptive streaming media sources - Developer guides","link":{"type":"url","url":"https://developer.mozilla.org/en-US/docs/Web/Guide/Audio_and_video_delivery/Setting_up_adaptive_streaming_media_sources"}}}]}}],"questionsMarkdown":null,"answerMarkdown":null,"time":"45 mins"}]